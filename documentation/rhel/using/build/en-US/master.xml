<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE book [
<!ENTITY % sgml.features "IGNORE">
<!ENTITY % xml.features "INCLUDE">
<!ENTITY % DOCBOOK_ENTS PUBLIC "-//OASIS//ENTITIES DocBook Character Entities V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/dbcentx.mod">
%DOCBOOK_ENTS;
]>
<?asciidoc-toc maxdepth="4"?><?asciidoc-numbered?><book xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0">
<info>
<title>Using AMQ Streams on RHEL</title><subtitle>For use with AMQ Streams 1.4 on Red Hat Enterprise Linux</subtitle>

<date>2019-12-03</date>
<productname>Red Hat AMQ</productname>
<productnumber>7.6</productnumber>
<abstract>
   <para>This guide describes how to install, configure, and manage
   Red Hat AMQ Streams to build a large-scale messaging network.</para>
</abstract>
<xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="Common_Content/Legal_Notice.xml"/>
</info>
<chapter xml:id="overview-str">
<title>Overview of AMQ Streams</title>
<simpara>Red Hat AMQ Streams is a massively-scalable, distributed, and high-performance data streaming platform based on the Apache ZooKeeper and Apache Kafka projects.</simpara>
<simpara>The main components comprise:</simpara>
<variablelist>
<varlistentry>
<term>Kafka Broker</term>
<listitem>
<simpara>Messaging broker responsible for delivering records from producing clients to consuming clients.</simpara>
<simpara>Apache ZooKeeper is a core dependency for Kafka, providing a cluster coordination service for highly reliable distributed coordination.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>Kafka Streams API</term>
<listitem>
<simpara>API for writing <emphasis>stream processor</emphasis> applications.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>Producer and Consumer APIs</term>
<listitem>
<simpara>Java-based APIs for producing and consuming messages to and from Kafka brokers.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>Kafka Bridge</term>
<listitem>
<simpara>AMQ Streams Kafka Bridge provides a RESTful interface that allows HTTP-based clients to interact with a Kafka cluster.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>Kafka Connect</term>
<listitem>
<simpara>A toolkit for streaming data between Kafka brokers and other systems using <emphasis>Connector</emphasis> plugins.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>Kafka MirrorMaker</term>
<listitem>
<simpara>Replicates data between two Kafka clusters, within or across data centers.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>Kafka Exporter</term>
<listitem>
<simpara>An exporter used in the extraction of Kafka metrics data for monitoring.</simpara>
</listitem>
</varlistentry>
</variablelist>
<simpara>A cluster of Kafka brokers is the hub connecting all these components.
The broker uses Apache ZooKeeper for storing configuration data and for cluster coordination.
Before running Apache Kafka, an Apache ZooKeeper cluster has to be ready.</simpara>
<figure>
<title>AMQ Streams architecture</title>
<mediaobject>
<imageobject>
<imagedata fileref="images/amq-streams-architecture.png"/>
</imageobject>
<textobject><phrase>AMQ Streams architecture</phrase></textobject>
</mediaobject>
</figure>
<section xml:id="overview-key-features-str">
<title>Key features</title>
<itemizedlist>
<listitem>
<simpara>Scalability and performance</simpara>
<itemizedlist>
<listitem>
<simpara>Designed for horizontal scalability</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>Message ordering guarantee</simpara>
<itemizedlist>
<listitem>
<simpara>At partition level</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>Message rewind/replay</simpara>
<itemizedlist>
<listitem>
<simpara>"Long term" storage</simpara>
</listitem>
<listitem>
<simpara>Allows to reconstruct application state by replaying the messages</simpara>
</listitem>
<listitem>
<simpara>Combined with compacted topics allows to use Kafka as key-value store</simpara>
</listitem>
</itemizedlist>
</listitem>
</itemizedlist>
</section>
<section xml:id="overview-supported-configurations-str">
<title>Supported Configurations</title>
<simpara>In order to be running in a supported configuration, AMQ Streams must be running in one of the following JVM versions and on one of the supported operating systems.</simpara>
<table frame="all" rowsep="1" colsep="1">
<title>List of supported Java Virtual Machines</title>
<?dbhtml table-width="80%"?>
<?dbfo table-width="80%"?>
<?dblatex table-width="80%"?>
<tgroup cols="2">
<colspec colname="col_1" colwidth="204*"/>
<colspec colname="col_2" colwidth="136*"/>
<thead>
<row>
<entry align="left" valign="top">Java Virtual Machine</entry>
<entry align="center" valign="top">Version</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left" valign="top"><simpara>OpenJDK</simpara></entry>
<entry align="center" valign="top"><simpara>1.8, 11 <footnote><simpara>For RHEL 8.x</simpara></footnote></simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>OracleJDK</simpara></entry>
<entry align="center" valign="top"><simpara>1.8</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>IBM JDK</simpara></entry>
<entry align="center" valign="top"><simpara>1.8</simpara></entry>
</row>
</tbody>
</tgroup>
</table>
<table frame="all" rowsep="1" colsep="1">
<title>List of supported Operating Systems</title>
<?dbhtml table-width="80%"?>
<?dbfo table-width="80%"?>
<?dblatex table-width="80%"?>
<tgroup cols="3">
<colspec colname="col_1" colwidth="146*"/>
<colspec colname="col_2" colwidth="97*"/>
<colspec colname="col_3" colwidth="97*"/>
<thead>
<row>
<entry align="left" valign="top">Operating System</entry>
<entry align="center" valign="top">Architecture</entry>
<entry align="center" valign="top">Version</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left" valign="top"><simpara>Red Hat Enterprise Linux</simpara></entry>
<entry align="center" valign="top"><simpara>x86_64</simpara></entry>
<entry align="center" valign="top"><simpara>7.x, 8.x</simpara></entry>
</row>
</tbody>
</tgroup>
</table>
</section>
<section xml:id="overview-document-conventions-str">
<title>Document conventions</title>
<formalpara>
<title>Replaceables</title>
<para>In this document, replaceable text is styled in monospace and surrounded by angle brackets.</para>
</formalpara>
<simpara>For example, in the following code, you will want to replace <literal><emphasis>&lt;bootstrap-address&gt;</emphasis></literal> and <literal><emphasis>&lt;topic-name&gt;</emphasis></literal> with your own address and topic name:</simpara>
<programlisting language="shell" linenumbering="unnumbered">bin/kafka-console-consumer.sh --bootstrap-server <emphasis>&lt;bootstrap-address&gt;</emphasis> --topic <emphasis>&lt;topic-name&gt;</emphasis> --from-beginning</programlisting>
</section>
</chapter>
<chapter xml:id="assembly-getting-started-str">
<title>Getting started</title>
<section xml:id="amq_streams_distribution" remap="_amq_streams_distribution">
<title>AMQ Streams distribution</title>
<simpara>AMQ Streams is distributed as single ZIP file.
This ZIP file contains AMQ Streams components:</simpara>
<itemizedlist>
<listitem>
<simpara>Apache ZooKeeper</simpara>
</listitem>
<listitem>
<simpara>Apache Kafka</simpara>
</listitem>
<listitem>
<simpara>Apache Kafka Connect</simpara>
</listitem>
<listitem>
<simpara>Apache Kafka Mirror Maker</simpara>
</listitem>
<listitem>
<simpara><link linkend="assembly-kafka-exporter-str">Kafka Exporter</link></simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="proc-downloading-amq-streams-str">
<title>Downloading an AMQ Streams Archive</title>
<simpara>An archived distribution of AMQ Streams is available for download from the Red Hat website.
You can download a copy of the distribution by following the steps below.</simpara>
<itemizedlist>
<title>Procedure</title>
<listitem>
<simpara>Download the latest version of the Red Hat AMQ Streams archive from the <link xlink:href="https://access.redhat.com/jbossnetwork/restricted/listSoftware.html?downloadType=distributions&amp;product=jboss.amq.streams&amp;productChanged=yes">Customer Portal</link>.</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="proc-installing-amq-streams-str">
<title>Installing AMQ Streams</title>
<simpara>Follow this procedure to install the latest version of AMQ Streams on Red Hat Enterprise Linux.</simpara>
<simpara>For instructions on upgrading an existing cluster to AMQ Streams 1.4, see <link linkend="assembly-upgrade-str">AMQ Streams and Kafka upgrades</link>.</simpara>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>Download the <link linkend="proc-downloading-amq-streams-str">installation archive</link>.</simpara>
</listitem>
<listitem>
<simpara>Review the <xref linkend="overview-supported-configurations-str"/></simpara>
</listitem>
</itemizedlist>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>Add new <literal>kafka</literal> user and group.</simpara>
<programlisting language="shell" linenumbering="unnumbered">sudo groupadd kafka
sudo useradd -g kafka kafka
sudo passwd kafka</programlisting>
</listitem>
<listitem>
<simpara>Create directory <literal>/opt/kafka</literal>.</simpara>
<programlisting language="shell" linenumbering="unnumbered">sudo mkdir /opt/kafka</programlisting>
</listitem>
<listitem>
<simpara>Create a temporary directory and extract the contents of the AMQ Streams ZIP file.</simpara>
<programlisting language="shell" linenumbering="unnumbered">mkdir /tmp/kafka
unzip <emphasis>amq-streams_y.y-x.x.x.zip</emphasis> -d /tmp/kafka</programlisting>
</listitem>
<listitem>
<simpara>Move the extracted contents into <literal>/opt/kafka</literal> directory and delete the temporary directory.</simpara>
<programlisting language="shell" linenumbering="unnumbered">sudo mv /tmp/kafka/<emphasis>kafka_y.y-x.x.x</emphasis>/* /opt/kafka/
rm -r /tmp/kafka</programlisting>
</listitem>
<listitem>
<simpara>Change the ownership of the <literal>/opt/kafka</literal> directory to the <literal>kafka</literal> user.</simpara>
<programlisting language="shell" linenumbering="unnumbered">sudo chown -R kafka:kafka /opt/kafka</programlisting>
</listitem>
<listitem>
<simpara>Create directory <literal>/var/lib/zookeeper</literal> for storing ZooKeeper data and set its ownership to the <literal>kafka</literal> user.</simpara>
<programlisting language="shell" linenumbering="unnumbered">sudo mkdir /var/lib/zookeeper
sudo chown -R kafka:kafka /var/lib/zookeeper</programlisting>
</listitem>
<listitem>
<simpara>Create directory <literal>/var/lib/kafka</literal> for storing Kafka data and set its ownership to the <literal>kafka</literal> user.</simpara>
<programlisting language="shell" linenumbering="unnumbered">sudo mkdir /var/lib/kafka
sudo chown -R kafka:kafka /var/lib/kafka</programlisting>
</listitem>
</orderedlist>
</section>
<section xml:id="considerations-for-data-storage-str">
<title>Data storage considerations</title>
<simpara>An efficient data storage infrastructure is essential to the optimal performance of AMQ Streams.</simpara>
<simpara>AMQ Streams requires block storage and works well with cloud-based block storage solutions, such as Amazon Elastic Block Store (EBS). The use of file storage is not recommended.</simpara>
<simpara>Choose local storage when possible. If local storage is not available, you can use a Storage Area Network (SAN) accessed by a protocol such as Fibre Channel or iSCSI.</simpara>
<section xml:id="apache_kafka_and_zookeeper_storage_support" remap="_apache_kafka_and_zookeeper_storage_support">
<title>Apache Kafka and ZooKeeper storage support</title>
<simpara>Use separate disks for Apache Kafka and ZooKeeper.</simpara>
<simpara>Kafka supports JBOD (Just a Bunch of Disks) storage, a data storage configuration of multiple disks or volumes. JBOD provides increased data storage for Kafka brokers. It can also improve performance.</simpara>
<simpara>Solid-state drives (SSDs), though not essential, can improve the performance of Kafka in large clusters where data is sent to and received from multiple topics asynchronously. SSDs are particularly effective with ZooKeeper, which requires fast, low latency data access.</simpara>
<note>
<simpara>You do not need to provision replicated storage because Kafka and ZooKeeper both have built-in data replication.</simpara>
</note>
</section>
<section xml:id="file_systems" remap="_file_systems">
<title>File systems</title>
<simpara>It is recommended that you configure your storage system to use the XFS file system. AMQ Streams is also compatible with the ext4 file system, but this might require additional configuration for best results.</simpara>
<itemizedlist>
<title>Additional resources</title>
<listitem>
<simpara>For more information about XFS, see <link xlink:href="https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html-single/storage_administration_guide/#ch-xfs">The XFS File System</link>.</simpara>
</listitem>
</itemizedlist>
</section>
</section>
<section xml:id="proc-running-single-node-amq-streams-cluster-str">
<title>Running single node AMQ Streams cluster</title>
<simpara>This procedure will show you how to run a basic AMQ Streams cluster consisting of single ZooKeeper and single Apache Kafka node both running on the same host.
It is using the default configuration files for both ZooKeeper and Kafka.</simpara>
<warning>
<simpara>A single node AMQ Streams cluster does not provide reliability and high availability and is suitable only for development purposes.</simpara>
</warning>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>AMQ Streams is installed on the host</simpara>
</listitem>
</itemizedlist>
<orderedlist numeration="arabic">
<title>Running the cluster</title>
<listitem>
<simpara>Edit the ZooKeeper configuration file <literal>/opt/kafka/config/zookeeper.properties</literal>.
Set the <literal>dataDir</literal> option to <literal>/var/lib/zookeeper/</literal>.</simpara>
<programlisting language="properties" linenumbering="unnumbered">dataDir=/var/lib/zookeeper/</programlisting>
</listitem>
<listitem>
<simpara>Start ZooKeeper.</simpara>
<programlisting language="shell" linenumbering="unnumbered">su - kafka
/opt/kafka/bin/zookeeper-server-start.sh -daemon /opt/kafka/config/zookeeper.properties</programlisting>
</listitem>
<listitem>
<simpara>Make sure that Apache ZooKeeper is running.</simpara>
<programlisting language="shell" linenumbering="unnumbered">jcmd | grep zookeeper</programlisting>
</listitem>
<listitem>
<simpara>Edit the Kafka configuration file <literal>/opt/kafka/config/server.properties</literal>.
Set the <literal>log.dirs</literal> option to <literal>/var/lib/kafka/</literal>.</simpara>
<programlisting language="properties" linenumbering="unnumbered">log.dirs=/var/lib/kafka/</programlisting>
</listitem>
<listitem>
<simpara>Start Kafka.</simpara>
<programlisting language="shell" linenumbering="unnumbered">su - kafka
/opt/kafka/bin/kafka-server-start.sh -daemon /opt/kafka/config/server.properties</programlisting>
</listitem>
<listitem>
<simpara>Make sure that Kafka is running.</simpara>
<programlisting language="shell" linenumbering="unnumbered">jcmd | grep kafka</programlisting>
</listitem>
</orderedlist>
<itemizedlist>
<title>Additional resources</title>
<listitem>
<simpara>For more information about installing AMQ Streams, see <xref linkend="proc-installing-amq-streams-str"/>.</simpara>
</listitem>
<listitem>
<simpara>For more information about configuring AMQ Streams, see <xref linkend="proc-configuring-amq-streams-str"/>.</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="proc-using-amq-streams-str">
<title>Using the cluster</title>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>AMQ Streams is installed on the host</simpara>
</listitem>
<listitem>
<simpara>ZooKeeper and Kafka are up and running</simpara>
</listitem>
</itemizedlist>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>Start the Kafka console producer.</simpara>
<programlisting language="shell" linenumbering="unnumbered">bin/kafka-console-producer.sh --broker-list <emphasis>&lt;bootstrap-address&gt;</emphasis> --topic <emphasis>&lt;topic-name&gt;</emphasis></programlisting>
<simpara>For example:</simpara>
<programlisting language="shell" linenumbering="unnumbered">bin/kafka-console-producer.sh --broker-list localhost:9092 --topic my-topic</programlisting>
</listitem>
<listitem>
<simpara>Type your message into the console where the producer is running.</simpara>
</listitem>
<listitem>
<simpara>Press Enter to send.</simpara>
</listitem>
<listitem>
<simpara>Press Ctrl+C to exit the Kafka console producer.</simpara>
</listitem>
<listitem>
<simpara>Start the message receiver.</simpara>
<programlisting language="shell" linenumbering="unnumbered">bin/kafka-console-consumer.sh --bootstrap-server <emphasis>&lt;bootstrap-address&gt;</emphasis> --topic <emphasis>&lt;topic-name&gt;</emphasis> --from-beginning</programlisting>
<simpara>For example:</simpara>
<programlisting language="shell" linenumbering="unnumbered">bin/kafka-console-consumer.sh --bootstrap-server localhost:9092 --topic my-topic --from-beginning</programlisting>
</listitem>
<listitem>
<simpara>Confirm that you see the incoming messages in the consumer console.</simpara>
</listitem>
<listitem>
<simpara>Press Crtl+C to exit the Kafka console consumer.</simpara>
</listitem>
</orderedlist>
</section>
<section xml:id="proc-stopping-amq-streams-str">
<title>Stopping the AMQ Streams services</title>
<simpara>You can stop the Kafka and ZooKeeper services by running a script.
All connections to the Kafka and ZooKeeper services will be terminated.</simpara>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>AMQ Streams is installed on the host</simpara>
</listitem>
<listitem>
<simpara>ZooKeeper and Kafka are up and running</simpara>
</listitem>
</itemizedlist>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>Stop the Kafka broker.</simpara>
<programlisting language="shell" linenumbering="unnumbered">su - kafka
/opt/kafka/bin/kafka-server-stop.sh</programlisting>
</listitem>
<listitem>
<simpara>Confirm that the Kafka broker is stopped.</simpara>
<programlisting language="shell" linenumbering="unnumbered">jcmd | grep kafka</programlisting>
</listitem>
<listitem>
<simpara>Stop ZooKeeper.</simpara>
<programlisting language="shell" linenumbering="unnumbered">su - kafka
/opt/kafka/bin/zookeeper-server-stop.sh</programlisting>
</listitem>
</orderedlist>
</section>
<section xml:id="proc-configuring-amq-streams-str">
<title>Configuring AMQ Streams</title>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>AMQ Streams is downloaded and installed on the host</simpara>
</listitem>
</itemizedlist>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>Open ZooKeeper and Kafka broker configuration files in a text editor.
The configuration files are located at :</simpara>
<variablelist>
<varlistentry>
<term>ZooKeeper</term>
<listitem>
<simpara><literal>/opt/kafka/config/zookeeper.properties</literal></simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>Kafka</term>
<listitem>
<simpara><literal>/opt/kafka/config/server.properties</literal></simpara>
</listitem>
</varlistentry>
</variablelist>
</listitem>
<listitem>
<simpara>Edit the configuration options.
The configuration files are in the Java properties format.
Every configuration option should be on separate line in the following format:</simpara>
<screen><emphasis>&lt;option&gt;</emphasis> = <emphasis>&lt;value&gt;</emphasis></screen>
<simpara>Lines starting with <literal>#</literal> or <literal>!</literal> will be treated as comments and will be ignored by AMQ Streams components.</simpara>
<screen># This is a comment</screen>
<simpara>Values can be split into multiple lines by using <literal>\</literal> directly before the newline / carriage return.</simpara>
<screen>sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required \
    username="bob" \
    password="bobs-password";</screen>
</listitem>
<listitem>
<simpara>Save the changes</simpara>
</listitem>
<listitem>
<simpara>Restart the ZooKeeper or Kafka broker</simpara>
</listitem>
<listitem>
<simpara>Repeat this procedure on all the nodes of the cluster.</simpara>
</listitem>
</orderedlist>
</section>
</chapter>
<chapter xml:id="configuring_zookeeper" remap="_configuring_zookeeper">
<title>Configuring ZooKeeper</title>
<simpara>Kafka uses ZooKeeper to store configuration data and for cluster coordination.
It is strongly recommended to run a cluster of replicated ZooKeeper instances.</simpara>
<section xml:id="con-zookeeper-basic-configuration-str">
<title>Basic configuration</title>
<simpara>The most important ZooKeeper configuration options are:</simpara>
<variablelist>
<varlistentry>
<term><literal>tickTime</literal></term>
<listitem>
<simpara>ZooKeeper’s basic time unit in milliseconds.
It is used for heartbeats and session timeouts.
For example, minimum session timeout will be two ticks.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>dataDir</literal></term>
<listitem>
<simpara>The directory where ZooKeeper stores its transaction log and snapshots of its in-memory database. This should be set to the <literal>/var/lib/zookeeper/</literal> directory created during installation.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>clientPort</literal></term>
<listitem>
<simpara>Port number where clients can connect. Defaults to <literal>2181</literal>.</simpara>
</listitem>
</varlistentry>
</variablelist>
<simpara>An example ZooKeeper configuration file <literal>config/zookeeper.properties</literal> is located in the AMQ Streams installation directory.
It is recommended to place the <literal>dataDir</literal> directory on a separate disk device to minimize the latency in ZooKeeper.</simpara>
<simpara>ZooKeeper configuration file should be located in <literal>/opt/kafka/config/zookeeper.properties</literal>.
A basic example of the configuration file can be found below.
The configuration file has to be readable by the <literal>kafka</literal> user.</simpara>
<programlisting language="ini" linenumbering="unnumbered">timeTick=2000
dataDir=/var/lib/zookeeper/
clientPort=2181</programlisting>
</section>
<section xml:id="con-zookeeeper-cluster-configuration-str">
<title>ZooKeeper cluster configuration</title>
<simpara>For reliable ZooKeeper service, you should deploy ZooKeeper in a cluster.
Hence, for production use cases, you must run a cluster of replicated ZooKeeper instances.
ZooKeeper clusters are also referred as ensembles.</simpara>
<simpara>ZooKeeper clusters usually consist of an odd number of nodes.
ZooKeeper requires a majority of the nodes in the cluster should be up and running.
For example, a cluster with three nodes, at least two of them must be up and running.
This means it can tolerate one node being down.
A cluster consisting of five nodes, at least three nodes must be available.
This means it can tolerate two nodes being down.
A cluster consisting of seven nodes, at least four nodes must be available.
This means it can tolerate three nodes being down.
Having more nodes in the ZooKeeper cluster delivers better resiliency and reliability of the whole cluster.</simpara>
<simpara>ZooKeeper can run in clusters with an even number of nodes.
The additional node, however, does not increase the resiliency of the cluster.
A cluster with four nodes requires at least three nodes to be available and can tolerate only one node being down.
Therefore it has exactly the same resiliency as a cluster with only three nodes.</simpara>
<simpara>The different ZooKeeper nodes should be ideally placed into different data centers or network segments.
Increasing the number of ZooKeeper nodes increases the workload spent on cluster synchronization.
For most Kafka use cases ZooKeeper cluster with 3, 5 or 7 nodes should be fully sufficient.</simpara>
<warning>
<simpara>ZooKeeper cluster with 3 nodes can tolerate only 1 unavailable node.
This means that when a cluster node crashes while you are doing maintenance on another node your ZooKeeper cluster will be unavailable.</simpara>
</warning>
<simpara>Replicated ZooKeeper configuration supports all configuration options supported by the standalone configuration.
Additional options are added for the clustering configuration:</simpara>
<variablelist>
<varlistentry>
<term><literal>initLimit</literal></term>
<listitem>
<simpara>Amount of time to allow followers to connect and sync to the cluster leader.
The time is specified as a number of ticks (see the <link linkend="con-zookeeper-basic-configuration-str"><literal>timeTick</literal> option</link> for more details).</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>syncLimit</literal></term>
<listitem>
<simpara>Amount of time for which followers can be behind the leader.
The time is specified as a number of ticks (see the <link linkend="con-zookeeper-basic-configuration-str"><literal>timeTick</literal> option</link> for more details).</simpara>
</listitem>
</varlistentry>
</variablelist>
<simpara>In addition to the options above, every configuration file should contain a list of servers which should be members of the ZooKeeper cluster.
The server records should be specified in the format <literal>server.id=hostname:port1:port2</literal>, where:</simpara>
<variablelist>
<varlistentry>
<term><literal>id</literal></term>
<listitem>
<simpara>The ID of the ZooKeeper cluster node.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>hostname</literal></term>
<listitem>
<simpara>The hostname or IP address where the node listens for connections.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>port1</literal></term>
<listitem>
<simpara>The port number used for intra-cluster communication.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>port2</literal></term>
<listitem>
<simpara>The port number used for leader election.</simpara>
</listitem>
</varlistentry>
</variablelist>
<simpara>The following is an example configuration file of a ZooKeeper cluster with three nodes:</simpara>
<programlisting language="ini" linenumbering="unnumbered">timeTick=2000
dataDir=/var/lib/zookeeper/
clientPort=2181
initLimit=5
syncLimit=2

server.1=172.17.0.1:2888:3888
server.2=172.17.0.2:2888:3888
server.3=172.17.0.3:2888:3888</programlisting>
<simpara>Each node in the ZooKeeper cluster has to be assigned with a unique <literal>ID</literal>.
Each node’s <literal>ID</literal> has to be configured in <literal>myid</literal> file and stored in the <literal>dataDir</literal> folder like <literal>/var/lib/zookeeper/</literal>.
The <literal>myid</literal> files should contain only a single line with the written <literal>ID</literal> as text.
The <literal>ID</literal> can be any integer from 1 to 255.
You must manually create this file on each cluster node.
Using this file, each ZooKeeper instance will use the configuration from the corresponding <literal>server.</literal> line in the configuration file to configure its listeners.
It will also use all other <literal>server.</literal> lines to identify other cluster members.</simpara>
<simpara>In the above example, there are three nodes, so each one will have a different <literal>myid</literal> with values <literal>1</literal>, <literal>2</literal>, and <literal>3</literal> respectively.</simpara>
</section>
<section xml:id="proc-running-multinode-zookeeper-cluster-str">
<title>Running multi-node ZooKeeper cluster</title>
<simpara>This procedure will show you how to configure and run ZooKeeper as a multi-node cluster.</simpara>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>AMQ Streams is installed on all hosts which will be used as ZooKeeper cluster nodes.</simpara>
</listitem>
</itemizedlist>
<orderedlist numeration="arabic">
<title>Running the cluster</title>
<listitem>
<simpara>Create the <literal>myid</literal> file in <literal>/var/lib/zookeeper/</literal>.
Enter ID <literal>1</literal> for the first ZooKeeper node, <literal>2</literal> for the second ZooKeeper node, and so on.</simpara>
<screen>su - kafka
echo "<emphasis>&lt;NodeID&gt;</emphasis>" &gt; /var/lib/zookeeper/myid</screen>
<simpara>For example:</simpara>
<screen>su - kafka
echo "1" &gt; /var/lib/zookeeper/myid</screen>
</listitem>
<listitem>
<simpara>Edit the ZooKeeper <literal>/opt/kafka/config/zookeeper.properties</literal> configuration file for the following:</simpara>
<itemizedlist>
<listitem>
<simpara>Set the option <literal>dataDir</literal> to <literal>/var/lib/zookeeper/</literal>.
+ Configure the <literal>initLimit</literal> and <literal>syncLimit</literal> options.</simpara>
</listitem>
<listitem>
<simpara>Add a list of all ZooKeeper nodes.
The list should include also the current node.</simpara>
<formalpara>
<title>Example configuration for a node of ZooKeeper cluster with five members</title>
<para>
<programlisting language="ini" linenumbering="unnumbered">timeTick=2000
dataDir=/var/lib/zookeeper/
clientPort=2181
initLimit=5
syncLimit=2

server.1=172.17.0.1:2888:3888
server.2=172.17.0.2:2888:3888
server.3=172.17.0.3:2888:3888
server.4=172.17.0.4:2888:3888
server.5=172.17.0.5:2888:3888</programlisting>
</para>
</formalpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>Start ZooKeeper with the default configuration file.</simpara>
<programlisting language="shell" linenumbering="unnumbered">su - kafka
/opt/kafka/bin/zookeeper-server-start.sh -daemon /opt/kafka/config/zookeeper.properties</programlisting>
</listitem>
<listitem>
<simpara>Verify that the ZooKeeper is running.</simpara>
<programlisting language="shell" linenumbering="unnumbered">jcmd | grep zookeeper</programlisting>
</listitem>
<listitem>
<simpara>Repeat this procedure on all the nodes of the cluster.</simpara>
</listitem>
<listitem>
<simpara>Once all nodes of the clusters are up and running, verify that all nodes are members of the cluster by sending a <literal>stat</literal> command to each of the nodes using <literal>ncat</literal> utility.</simpara>
<formalpara>
<title>Use ncat stat to check the node status</title>
<para>
<programlisting language="shell" linenumbering="unnumbered">echo stat | ncat localhost 2181</programlisting>
</para>
</formalpara>
<simpara>In the output you should see information that the node is either <literal>leader</literal> or <literal>follower</literal>.</simpara>
<formalpara>
<title>Example output from the <literal>ncat</literal> command</title>
<para>
<screen>ZooKeeper version: 3.4.13-2d71af4dbe22557fda74f9a9b4309b15a7487f03, built on 06/29/2018 00:39 GMT
Clients:
 /0:0:0:0:0:0:0:1:59726[0](queued=0,recved=1,sent=0)

Latency min/avg/max: 0/0/0
Received: 2
Sent: 1
Connections: 1
Outstanding: 0
Zxid: 0x200000000
<emphasis role="strong">Mode: follower</emphasis>
Node count: 4</screen>
</para>
</formalpara>
</listitem>
</orderedlist>
<itemizedlist>
<title>Additional resources</title>
<listitem>
<simpara>For more information about installing AMQ Streams, see <xref linkend="proc-installing-amq-streams-str"/>.</simpara>
</listitem>
<listitem>
<simpara>For more information about configuring AMQ Streams, see <xref linkend="proc-configuring-amq-streams-str"/>.</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="assembly-configuring-zookeeper-authentication-str">
<title>Authentication</title>
<simpara>By default, ZooKeeper does not use any form of authentication and allows anonymous connections.
However, it supports Java Authentication and Authorization Service (JAAS) which can be used to set up  authentication using Simple Authentication and Security Layer (SASL).
ZooKeeper supports authentication using the DIGEST-MD5 SASL mechanism with locally stored credentials.</simpara>
<section xml:id="con-zookeeper-sasl-authentication-str">
<title>Authentication with SASL</title>
<simpara>JAAS is configured using a separate configuration file.
It is recommended to place the JAAS configuration file in the same directory as the ZooKeeper configuration (<literal>/opt/kafka/config/</literal>).
The recommended file name is <literal>zookeeper-jaas.conf</literal>.
When using a ZooKeeper cluster with multiple nodes, the JAAS configuration file has to be created on all cluster nodes.</simpara>
<simpara>JAAS is configured using contexts.
Separate parts such as the server and client are always configured with a separate <emphasis>context</emphasis>.
The context is a <emphasis>configuration</emphasis> option and has the following format:</simpara>
<screen>ContextName {
       param1
       param2;
};</screen>
<simpara>SASL Authentication is configured separately for server-to-server communication (communication between ZooKeeper instances) and client-to-server communication (communication between Kafka and ZooKeeper). Server-to-server authentication is relevant only for ZooKeeper clusters with multiple nodes.</simpara>
<formalpara>
<title>Server-to-Server authentication</title>
<para>For server-to-server authentication, the JAAS configuration file contains two parts:</para>
</formalpara>
<itemizedlist>
<listitem>
<simpara>The server configuration</simpara>
</listitem>
<listitem>
<simpara>The client configuration</simpara>
</listitem>
</itemizedlist>
<simpara>When using DIGEST-MD5 SASL mechanism, the <literal>QuorumServer</literal> context is used to configure the authentication server.
It must contain all the usernames to be allowed to connect together with their passwords in an unencrypted form.
The second context, <literal>QuorumLearner</literal>, has to be configured for the client which is built into ZooKeeper.
It also contains the password in an unencrypted form.
An example of the JAAS configuration file for DIGEST-MD5 mechanism can be found below:</simpara>
<screen>QuorumServer {
       org.apache.zookeeper.server.auth.DigestLoginModule required
       user_zookeeper="123456";
};

QuorumLearner {
       org.apache.zookeeper.server.auth.DigestLoginModule required
       username="zookeeper"
       password="123456";
};</screen>
<simpara>In addition to the JAAS configuration file, you must enable the server-to-server authentication in the regular ZooKeeper configuration file by specifying the following options:</simpara>
<screen>quorum.auth.enableSasl=true
quorum.auth.learnerRequireSasl=true
quorum.auth.serverRequireSasl=true
quorum.auth.learner.loginContext=QuorumLearner
quorum.auth.server.loginContext=QuorumServer
quorum.cnxn.threads.size=20</screen>
<simpara>Use the <literal>KAFKA_OPTS</literal> environment variable to pass the JAAS configuration file to the ZooKeeper server as a Java property:</simpara>
<screen>su - kafka
export KAFKA_OPTS="-Djava.security.auth.login.config=/opt/kafka/config/zookeeper-jaas.conf"; /opt/kafka/bin/zookeeper-server-start.sh -daemon /opt/kafka/config/zookeeper.properties</screen>
<simpara>For more information about server-to-server authentication, see
<link xlink:href="https://cwiki.apache.org/confluence/display/ZOOKEEPER/Server-Server+mutual+authentication">ZooKeeper wiki</link>.</simpara>
<formalpara>
<title>Client-to-Server authentication</title>
<para>Client-to-server authentication is configured in the same JAAS file as the server-to-server authentication.
However, unlike the server-to-server authentication, it contains only the server configuration.
The client part of the configuration has to be done in the client.
For information on how to configure a Kafka broker to connect to ZooKeeper using authentication, see the <link linkend="assembly-kafka-zookeeper-authentication-str">Kafka installation</link> section.</para>
</formalpara>
<simpara>Add the Server context to the JAAS configuration file to configure client-to-server authentication.
For DIGEST-MD5 mechanism it configures all usernames and passwords:</simpara>
<screen>Server {
    org.apache.zookeeper.server.auth.DigestLoginModule required
    user_super="123456"
    user_kafka="123456"
    user_someoneelse="123456";
};</screen>
<simpara>After configuring the JAAS context, enable the client-to-server authentication in the ZooKeeper configuration file by adding the following line:</simpara>
<screen>requireClientAuthScheme=sasl
authProvider.1=org.apache.zookeeper.server.auth.SASLAuthenticationProvider
authProvider.2=org.apache.zookeeper.server.auth.SASLAuthenticationProvider
authProvider.3=org.apache.zookeeper.server.auth.SASLAuthenticationProvider</screen>
<simpara>You must add the <literal>authProvider.<emphasis>&lt;ID&gt;</emphasis></literal> property for every server that is part of the ZooKeeper cluster.</simpara>
<simpara>Use the <literal>KAFKA_OPTS</literal> environment variable to pass the JAAS configuration file to the ZooKeeper server as a Java property:</simpara>
<screen>su - kafka
export KAFKA_OPTS="-Djava.security.auth.login.config=/opt/kafka/config/zookeeper-jaas.conf"; /opt/kafka/bin/zookeeper-server-start.sh -daemon /opt/kafka/config/zookeeper.properties</screen>
<simpara>For more information about configuring ZooKeeper authentication in Kafka brokers, see <xref linkend="assembly-kafka-zookeeper-authentication-str"/>.</simpara>
</section>
<section xml:id="proc-zookeeper-enable-server-to-server-auth-digest-md5-str">
<title>Enabling Server-to-server authentication using DIGEST-MD5</title>
<simpara>This procedure describes how to enable authentication using the SASL DIGEST-MD5 mechanism between the nodes of the ZooKeeper cluster.</simpara>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>AMQ Streams is installed on the host</simpara>
</listitem>
<listitem>
<simpara>ZooKeeper cluster is <link linkend="proc-running-multinode-zookeeper-cluster-str">configured</link> with multiple nodes.</simpara>
</listitem>
</itemizedlist>
<orderedlist numeration="arabic">
<title>Enabling SASL DIGEST-MD5 authentication</title>
<listitem>
<simpara>On all ZooKeeper nodes, create or edit the <literal>/opt/kafka/config/zookeeper-jaas.conf</literal> JAAS configuration file and add the following contexts:</simpara>
<screen>QuorumServer {
       org.apache.zookeeper.server.auth.DigestLoginModule required
       user_<emphasis>&lt;Username&gt;</emphasis>="<emphasis>&lt;Password&gt;</emphasis>";
};

QuorumLearner {
       org.apache.zookeeper.server.auth.DigestLoginModule required
       username="<emphasis>&lt;Username&gt;</emphasis>"
       password="<emphasis>&lt;Password&gt;</emphasis>";
};</screen>
<simpara>The username and password must be the same in both JAAS contexts.
For example:</simpara>
<screen>QuorumServer {
       org.apache.zookeeper.server.auth.DigestLoginModule required
       user_zookeeper="123456";
};

QuorumLearner {
       org.apache.zookeeper.server.auth.DigestLoginModule required
       username="zookeeper"
       password="123456";
};</screen>
</listitem>
<listitem>
<simpara>On all ZooKeeper nodes, edit the <literal>/opt/kafka/config/zookeeper.properties</literal> ZooKeeper configuration file and set the following options:</simpara>
<programlisting language="ini" linenumbering="unnumbered">quorum.auth.enableSasl=true
quorum.auth.learnerRequireSasl=true
quorum.auth.serverRequireSasl=true
quorum.auth.learner.loginContext=QuorumLearner
quorum.auth.server.loginContext=QuorumServer
quorum.cnxn.threads.size=20</programlisting>
</listitem>
<listitem>
<simpara>Restart all ZooKeeper nodes one by one.
To pass the JAAS configuration to ZooKeeper, use the <literal>KAFKA_OPTS</literal> environment variable.</simpara>
<screen>su - kafka
export KAFKA_OPTS="-Djava.security.auth.login.config=/opt/kafka/config/zookeeper-jaas.conf"; /opt/kafka/bin/zookeeper-server-start.sh -daemon /opt/kafka/config/zookeeper.properties</screen>
</listitem>
</orderedlist>
<itemizedlist>
<title>Additional resources</title>
<listitem>
<simpara>For more information about installing AMQ Streams, see <xref linkend="proc-installing-amq-streams-str"/>.</simpara>
</listitem>
<listitem>
<simpara>For more information about configuring AMQ Streams, see <xref linkend="proc-configuring-amq-streams-str"/>.</simpara>
</listitem>
<listitem>
<simpara>For more information about running a ZooKeeper cluster, see <xref linkend="proc-running-multinode-zookeeper-cluster-str"/>.</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="proc-zookeeper-enable-client-to-server-auth-digest-md5-str">
<title>Enabling Client-to-server authentication using DIGEST-MD5</title>
<simpara>This procedure describes how to enable authentication using the SASL DIGEST-MD5 mechanism between ZooKeeper clients and ZooKeeper.</simpara>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>AMQ Streams is installed on the host</simpara>
</listitem>
<listitem>
<simpara>ZooKeeper cluster is <link linkend="proc-running-multinode-zookeeper-cluster-str">configured and running</link>.</simpara>
</listitem>
</itemizedlist>
<orderedlist numeration="arabic">
<title>Enabling SASL DIGEST-MD5 authentication</title>
<listitem>
<simpara>On all ZooKeeper nodes, create or edit the <literal>/opt/kafka/config/zookeeper-jaas.conf</literal> JAAS configuration file and add the following context:</simpara>
<screen>Server {
    org.apache.zookeeper.server.auth.DigestLoginModule required
    user_super="<emphasis>&lt;SuperUserPassword&gt;</emphasis>"
    user<emphasis>&lt;Username1&gt;_="<emphasis>&lt;Password1&gt;</emphasis>"
    user</emphasis>&lt;USername2&gt;_="<emphasis>&lt;Password2&gt;</emphasis>";
};</screen>
<simpara>The <literal>super</literal> automatically has administrator priviledges.
The file can contain multiple users, but only one additional user is required by the Kafka brokers.
The recommended name for the Kafka user is <literal>kafka</literal>.</simpara>
<simpara>The following example shows the <literal>Server</literal> context for client-to-server authentication:</simpara>
<screen>Server {
    org.apache.zookeeper.server.auth.DigestLoginModule required
    user_super="123456"
    user_kafka="123456";
};</screen>
</listitem>
<listitem>
<simpara>On all ZooKeeper nodes, edit the <literal>/opt/kafka/config/zookeeper.properties</literal> ZooKeeper configuration file and set the following options:</simpara>
<programlisting language="ini" linenumbering="unnumbered">requireClientAuthScheme=sasl
authProvider.<emphasis>&lt;IdOfBroker1&gt;</emphasis>=org.apache.zookeeper.server.auth.SASLAuthenticationProvider
authProvider.<emphasis>&lt;IdOfBroker2&gt;</emphasis>=org.apache.zookeeper.server.auth.SASLAuthenticationProvider
authProvider.<emphasis>&lt;IdOfBroker3&gt;</emphasis>=org.apache.zookeeper.server.auth.SASLAuthenticationProvider</programlisting>
<simpara>The <literal>authProvider.<emphasis>&lt;ID&gt;</emphasis></literal> property has to be added for every node which is part of the ZooKeeper cluster.
An example three-node ZooKeeper cluster configuration must look like the following:</simpara>
<programlisting language="ini" linenumbering="unnumbered">requireClientAuthScheme=sasl
authProvider.1=org.apache.zookeeper.server.auth.SASLAuthenticationProvider
authProvider.2=org.apache.zookeeper.server.auth.SASLAuthenticationProvider
authProvider.3=org.apache.zookeeper.server.auth.SASLAuthenticationProvider</programlisting>
</listitem>
<listitem>
<simpara>Restart all ZooKeeper nodes one by one.
To pass the JAAS configuration to ZooKeeper, use the <literal>KAFKA_OPTS</literal> environment variable.</simpara>
<screen>su - kafka
export KAFKA_OPTS="-Djava.security.auth.login.config=/opt/kafka/config/zookeeper-jaas.conf"; /opt/kafka/bin/zookeeper-server-start.sh -daemon /opt/kafka/config/zookeeper.properties</screen>
</listitem>
</orderedlist>
<itemizedlist>
<title>Additional resources</title>
<listitem>
<simpara>For more information about installing AMQ Streams, see <xref linkend="proc-installing-amq-streams-str"/>.</simpara>
</listitem>
<listitem>
<simpara>For more information about configuring AMQ Streams, see <xref linkend="proc-configuring-amq-streams-str"/>.</simpara>
</listitem>
<listitem>
<simpara>For more information about running a ZooKeeper cluster, see <xref linkend="proc-running-multinode-zookeeper-cluster-str"/>.</simpara>
</listitem>
</itemizedlist>
</section>
</section>
<section xml:id="con-zookeeper-authorization-str">
<title>Authorization</title>
<simpara>ZooKeeper supports access control lists (ACLs) to protect data stored inside it.
Kafka brokers can automatically configure the ACL rights for all ZooKeeper records they create so no other ZooKeeper user can modify them.</simpara>
<simpara>For more information about enabling ZooKeeper ACLs in Kafka brokers, see <xref linkend="assembly-kafka-zookeeper-authorization-str"/>.</simpara>
</section>
<section xml:id="con-zookeeper-tls-str">
<title>TLS</title>
<simpara>The version of ZooKeeper which is part of AMQ Streams currently does not support TLS for encryption or authentication.</simpara>
</section>
<section xml:id="ref-zookeeper-additional-configuration-str">
<title>Additional configuration options</title>
<simpara>You can set the following options based on your use case:</simpara>
<variablelist>
<varlistentry>
<term><literal>maxClientCnxns</literal></term>
<listitem>
<simpara>The maximum number of concurrent client connections to a single member of the ZooKeeper cluster.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>autopurge.snapRetainCount</literal></term>
<listitem>
<simpara>Number of snapshots of ZooKeeper’s in-memory database which will be retained.
Default value is <literal>3</literal>.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>autopurge.purgeInterval</literal></term>
<listitem>
<simpara>The time interval in hours for purging snapshots.
The default value is <literal>0</literal> and this option is disabled.</simpara>
</listitem>
</varlistentry>
</variablelist>
<simpara>All available configuration options can be found in <link xlink:href="http://zookeeper.apache.org/doc/current/zookeeperAdmin.html#sc_maintenance">ZooKeeper documentation</link>.</simpara>
</section>
<section xml:id="con-zookeeper-logging-str">
<title>Logging</title>
<simpara>ZooKeeper is using <emphasis>log4j</emphasis> as their logging infrastructure.
Logging configuration is by default read from the <literal>log4j.properties</literal> configuration file which should be placed either in the <literal>/opt/kafka/config/</literal> directory or in the classpath.
The location and name of the configuration file can be changed using the Java property <literal>log4j.configuration</literal> which can be passed to ZooKeeper using the <literal>KAFKA_LOG4J_OPTS</literal> environment variable:</simpara>
<screen>su - kafka
export KAFKA_LOG4J_OPTS="-Dlog4j.configuration=file:/my/path/to/log4j.properties"; /opt/kafka/bin/zookeeper-server-start.sh -daemon /opt/kafka/config/zookeeper.properties</screen>
<simpara>For more information about Log4j configurations, see <link xlink:href="http://logging.apache.org/log4j/1.2/manual.html">Log4j documentation</link>.</simpara>
</section>
</chapter>
<chapter xml:id="configuring_kafka" remap="_configuring_kafka">
<title>Configuring Kafka</title>
<simpara>Kafka uses a properties file to store static configuration.
The recommended location for the configuration file is <literal>/opt/kafka/config/server.properties</literal>.
The configuration file has to be readable by the <literal>kafka</literal> user.</simpara>
<simpara>AMQ Streams ships an example configuration file that highlights various basic and advanced features of the product.
It can be found under <literal>config/server.properties</literal> in the AMQ Streams installation directory.</simpara>
<simpara>This chapter explains the most important configuration options.
For a complete list of supported Kafka broker configuration options, see <xref linkend="broker-configuration-parameters-str"/>.</simpara>
<section xml:id="con-kafka-zookeeper-configuration-str">
<title>ZooKeeper</title>
<simpara>Kafka brokers need ZooKeeper to store some parts of their configuration as well as to coordinate the cluster (for example to decide which node is a leader for which partition).
Connection details for the ZooKeeper cluster are stored in the configuration file.
The field <literal>zookeeper.connect</literal> contains a comma-separated list of hostnames and ports of members of the zookeeper cluster.</simpara>
<simpara>For example:</simpara>
<programlisting language="ini" linenumbering="unnumbered">zookeeper.connect=zoo1.my-domain.com:2181,zoo2.my-domain.com:2181,zoo3.my-domain.com:2181</programlisting>
<simpara>Kafka will use these addresses to connect to the ZooKeeper cluster.
With this configuration, all Kafka <literal>znodes</literal> will be created directly in the root of ZooKeeper database.
Therefore, such a ZooKeeper cluster could be used only for a single Kafka cluster.
To configure multiple Kafka clusters to use single ZooKeeper cluster, specify a base (prefix) path at the end of the ZooKeeper connection string in the Kafka configuration file:</simpara>
<programlisting language="ini" linenumbering="unnumbered">zookeeper.connect=zoo1.my-domain.com:2181,zoo2.my-domain.com:2181,zoo3.my-domain.com:2181/my-cluster-1</programlisting>
</section>
<section xml:id="con-kafka-listener-configuration-str">
<title>Listeners</title>
<simpara>Kafka brokers can be configured to use multiple listeners.
Each listener can be used to listen on a different port or network interface and can have different configuration.
Listeners are configured in the <literal>listeners</literal> property in the configuration file.
The <literal>listeners</literal> property contains a list of listeners with each listener configured as <literal><emphasis>&lt;listenerName&gt;</emphasis>://<emphasis>&lt;hostname&gt;</emphasis>:_&lt;port&gt;_</literal>.
When the hostname value is empty, Kafka will use <literal>java.net.InetAddress.getCanonicalHostName()</literal> as hostname.
The following example shows how multiple listeners might be configured:</simpara>
<screen>listeners=INT1://:9092,INT2://:9093,REPLICATION://:9094</screen>
<simpara>When a Kafka client wants to connect to a Kafka cluster, it first connects to a <emphasis>bootstrap server</emphasis>.
The <emphasis>bootstrap server</emphasis> is one of the cluster nodes.
It will provide the client with a list of all other brokers which are part of the cluster and the client will connect to them individually.
By default the <emphasis>bootstrap server</emphasis> will provide the client with a list of nodes based on the <literal>listeners</literal> field.</simpara>
<formalpara>
<title>Advertised listeners</title>
<para>It is possible to give the client a different set of addresses than given in the listeners property.
It is useful in situations when additional network infrastructure, such as a proxy, is between the client and the broker, or when an external DNS name should be used instead of an IP address.
Here, the broker allows defining the advertised addresses of the listeners in the advertised.listeners configuration property.
This property has the same format as the listeners property.
The following example shows how to configure advertised listeners:</para>
</formalpara>
<screen>listeners=INT1://:9092,INT2://:9093
advertised.listeners=INT1://my-broker-1.my-domain.com:1234,INT2://my-broker-1.my-domain.com:1234:9093</screen>
<note>
<simpara>The names of the listeners have to match the names of the listeners from the <literal>listeners</literal> property.</simpara>
</note>
<formalpara>
<title>Inter-broker listeners</title>
<para>When the cluster has replicated topics, the brokers responsible for such topics need to communicate with each other in order to replicate the messages in those topics.
When multiple listeners are configured, the configuration field <literal>inter.broker.listener.name</literal> can be used to specify the name of the listener which should be used for replication between brokers.
For example:</para>
</formalpara>
<screen>inter.broker.listener.name=REPLICATION</screen>
</section>
<section xml:id="con-kafka-commit-log-configuration-str">
<title>Commit logs</title>
<simpara>Apache Kafka stores all records it receives from producers in commit logs.
The commit logs contain the actual data, in the form of records, that Kafka needs to deliver.
These are not the application log files which record what the broker is doing.</simpara>
<formalpara>
<title>Log directories</title>
<para>You can configure log directories using the <literal>log.dirs</literal> property file to store commit logs in one or multiple log directories.
It should be set to <literal>/var/lib/kafka</literal> directory created during installation:</para>
</formalpara>
<screen>log.dirs=/var/lib/kafka</screen>
<simpara>For performance reasons, you can configure log.dirs to multiple directories and place each of them on a different physical device to improve disk I/O performance.
For example:</simpara>
<screen>log.dirs=/var/lib/kafka1,/var/lib/kafka2,/var/lib/kafka3</screen>
</section>
<section xml:id="con-kafka-broker-id-configuration-str">
<title>Broker ID</title>
<simpara>Broker ID is a unique identifier for each broker in the cluster.
You can assign an integer greater than or equal to 0 as broker ID.
The broker ID is used to identify the brokers after restarts or crashes and it is therefore important that the id is stable and does not change over time.
The broker ID is configured in the broker properties file:</simpara>
<screen>broker.id=1</screen>
</section>
<section xml:id="proc-running-multinode-kafka-cluster-str">
<title>Running a multi-node Kafka cluster</title>
<simpara>This procedure describes how to configure and run Kafka as a multi-node cluster.</simpara>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>AMQ Streams is <link linkend="proc-installing-amq-streams-str">installed</link> on all hosts which will be used as Kafka brokers.</simpara>
</listitem>
<listitem>
<simpara>A ZooKeeper cluster is <link linkend="proc-running-multinode-zookeeper-cluster-str">configured and running</link>.</simpara>
</listitem>
</itemizedlist>
<formalpara>
<title>Running the cluster</title>
<para>For each Kafka broker in your AMQ Streams cluster:</para>
</formalpara>
<orderedlist numeration="arabic">
<listitem>
<simpara>Edit the <literal>/opt/kafka/config/server.properties</literal> Kafka configuration file as follows:</simpara>
<itemizedlist>
<listitem>
<simpara>Set the <literal>broker.id</literal> field to <literal>0</literal> for the first broker, <literal>1</literal> for the second broker, and so on.</simpara>
</listitem>
<listitem>
<simpara>Configure the details for connecting to ZooKeeper in the <literal>zookeeper.connect</literal> option.</simpara>
</listitem>
<listitem>
<simpara>Configure the Kafka listeners.</simpara>
</listitem>
<listitem>
<simpara>Set the directories where the commit logs should be stored in the <literal>logs.dir</literal> directory.</simpara>
<simpara>Here we see an example configuration for a Kafka broker:</simpara>
<programlisting language="ini" linenumbering="unnumbered">broker.id=0
zookeeper.connect=zoo1.my-domain.com:2181,zoo2.my-domain.com:2181,zoo3.my-domain.com:2181
listeners=REPLICATION://:9091,PLAINTEXT://:9092
inter.broker.listener.name=REPLICATION
log.dirs=/var/lib/kafka</programlisting>
<simpara>In a typical installation where each Kafka broker is running on identical hardware, only the <literal>broker.id</literal> configuration property will differ between each broker config.</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>Start the Kafka broker with the default configuration file.</simpara>
<programlisting language="shell" linenumbering="unnumbered">su - kafka
/opt/kafka/bin/kafka-server-start.sh -daemon /opt/kafka/config/server.properties</programlisting>
</listitem>
<listitem>
<simpara>Verify that the Kafka broker is running.</simpara>
<programlisting language="shell" linenumbering="unnumbered">jcmd | grep Kafka</programlisting>
</listitem>
</orderedlist>
<formalpara>
<title>Verifying the brokers</title>
<para>Once all nodes of the clusters are up and running, verify that all nodes are members of the Kafka cluster by sending a <literal>dump</literal> command to one of the ZooKeeper nodes using the <literal>ncat</literal> utility.
The command prints all Kafka brokers registered in ZooKeeper.</para>
</formalpara>
<orderedlist numeration="arabic">
<listitem>
<simpara>Use ncat stat to check the node status.</simpara>
<programlisting language="shell" linenumbering="unnumbered">echo dump | ncat zoo1.my-domain.com 2181</programlisting>
<simpara>The output should contain all Kafka brokers you just configured and started.</simpara>
<simpara>Example output from the <literal>ncat</literal> command for Kafka cluster with 3 nodes:</simpara>
<programlisting language="plain" linenumbering="unnumbered">SessionTracker dump:
org.apache.zookeeper.server.quorum.LearnerSessionTracker@28848ab9
ephemeral nodes dump:
Sessions with Ephemerals (3):
0x20000015dd00000:
        /brokers/ids/1
0x10000015dc70000:
        /controller
        /brokers/ids/0
0x10000015dc70001:
        /brokers/ids/2</programlisting>
</listitem>
</orderedlist>
<itemizedlist>
<title>Additional resources</title>
<listitem>
<simpara>For more information about installing AMQ Streams, see <xref linkend="proc-installing-amq-streams-str"/>.</simpara>
</listitem>
<listitem>
<simpara>For more information about configuring AMQ Streams, see <xref linkend="proc-configuring-amq-streams-str"/>.</simpara>
</listitem>
<listitem>
<simpara>For more information about running a ZooKeeper cluster, see <xref linkend="proc-running-multinode-zookeeper-cluster-str"/>.</simpara>
</listitem>
<listitem>
<simpara>For a complete list of supported Kafka broker configuration options, see <xref linkend="broker-configuration-parameters-str"/>.</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="assembly-kafka-zookeeper-authentication-str">
<title>ZooKeeper authentication</title>
<simpara>By default, connections between ZooKeeper and Kafka are not authenticated.
However, Kafka and ZooKeeper support Java Authentication and Authorization Service (JAAS) which can be used to set up authentication using Simple Authentication and Security Layer (SASL).
ZooKeeper supports authentication using the DIGEST-MD5 SASL mechanism with locally stored credentials.</simpara>
<section xml:id="con-kafka-zookeeper-authentication-jaas-str">
<title>JAAS Configuration</title>
<simpara>SASL authentication for ZooKeeper connections has to be configured in the JAAS configuration file.
By default, Kafka will use the JAAS context named <literal>Client</literal> for connecting to ZooKeeper.
The <literal>Client</literal> context should be configured in the <literal>/opt/kafka/config/jass.conf</literal> file.
The context has to enable the <literal>PLAIN</literal> SASL authentication, as in the following example:</simpara>
<screen>Client {
    org.apache.kafka.common.security.plain.PlainLoginModule required
    username="kafka"
    password="123456";
};</screen>
</section>
<section xml:id="proc-kafka-enable-zookeeper-auth-str">
<title>Enabling ZooKeeper authentication</title>
<simpara>This procedure describes how to enable authentication using the SASL DIGEST-MD5 mechanism when connecting to ZooKeeper.</simpara>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>Client-to-server authentication is <link linkend="assembly-kafka-zookeeper-authentication-str">enabled</link> in ZooKeeper</simpara>
</listitem>
</itemizedlist>
<orderedlist numeration="arabic">
<title>Enabling SASL DIGEST-MD5 authentication</title>
<listitem>
<simpara>On all Kafka broker nodes, create or edit the <literal>/opt/kafka/config/jaas.conf</literal> JAAS configuration file and add the following context:</simpara>
<screen>Client {
    org.apache.kafka.common.security.plain.PlainLoginModule required
    username="<emphasis>&lt;Username&gt;</emphasis>"
    password="<emphasis>&lt;Password&gt;</emphasis>";
};</screen>
<simpara>The username and password should be the same as configured in ZooKeeper.</simpara>
<simpara>Following example shows the <literal>Client</literal> context:</simpara>
<screen>Client {
    org.apache.kafka.common.security.plain.PlainLoginModule required
    username="kafka"
    password="123456";
};</screen>
</listitem>
<listitem>
<simpara>Restart all Kafka broker nodes one by one.
To pass the JAAS configuration to Kafka brokers, use the <literal>KAFKA_OPTS</literal> environment variable.</simpara>
<screen>su - kafka
export KAFKA_OPTS="-Djava.security.auth.login.config=/opt/kafka/config/jaas.conf"; /opt/kafka/bin/kafka-server-start.sh -daemon /opt/kafka/config/server.properties</screen>
</listitem>
</orderedlist>
<itemizedlist>
<title>Additional resources</title>
<listitem>
<simpara>For more information about configuring client-to-server authentication in ZooKeeper, see <xref linkend="assembly-configuring-zookeeper-authentication-str"/>.</simpara>
</listitem>
</itemizedlist>
</section>
</section>
<section xml:id="assembly-authorization-str">
<title>Authorization</title>
<simpara>Authorization in Kafka brokers is implemented using authorizer plugins.</simpara>
<simpara>You can use your own authorization plugins or <literal>SimpleAclAuthorizer</literal>, the authorizer plugin provided with Kafka.</simpara>
<simpara>In this section we describe how to use <literal>SimpleAclAuthorizer</literal>.</simpara>
<section xml:id="con-kafka-authorization-simple-str">
<title>Simple ACL authorizer</title>
<simpara>Authorizer plugins, including <literal>SimpleAclAuthorizer</literal>, are enabled through the <literal>authorizer.class.name</literal> property:</simpara>
<programlisting language="properties" linenumbering="unnumbered">authorizer.class.name=kafka.security.auth.SimpleAclAuthorizer</programlisting>
<simpara>A fully-qualified name is required for the chosen authorizer.
For <literal>SimpleAclAuthorizer</literal>, the fully-qualified name is <literal>kafka.security.auth.SimpleAclAuthorizer</literal>.</simpara>
<section xml:id="acl_rules" remap="_acl_rules">
<title>ACL rules</title>
<simpara><literal>SimpleAclAuthorizer</literal> uses ACL rules to manage access to Kafka brokers.</simpara>
<simpara>ACL rules are defined in the format:</simpara>
<informalexample>
<simpara>Principal <emphasis role="strong">P</emphasis> is allowed / denied operation <emphasis role="strong">O</emphasis> on Kafka resource <emphasis role="strong">R</emphasis> from host <emphasis role="strong">H</emphasis></simpara>
</informalexample>
<simpara>For example, a rule might be set so that user:</simpara>
<informalexample>
<simpara><emphasis role="strong">John</emphasis> can <emphasis role="strong">view</emphasis> the topic <emphasis role="strong">comments</emphasis> from host <emphasis role="strong">127.0.0.1</emphasis></simpara>
</informalexample>
<simpara>Host is the IP address of the machine that John is connecting from.</simpara>
<simpara>In most cases, the user is a producer or consumer application:</simpara>
<informalexample>
<simpara><emphasis role="strong">Consumer01</emphasis> can <emphasis role="strong">write</emphasis> to the consumer group <emphasis role="strong">accounts</emphasis> from host <emphasis role="strong">127.0.0.1</emphasis></simpara>
</informalexample>
<simpara><emphasis role="strong">If ACL rules are not present</emphasis></simpara>
<simpara>If ACL rules are not present for a given resource, all actions are denied.
This behavior can be changed by setting the property <literal>allow.everyone.if.no.acl.found</literal> to <literal>true</literal> in the Kafka configuration file <literal>/opt/kafka/config/server.properties</literal>.</simpara>
</section>
<section xml:id="principals" remap="_principals">
<title>Principals</title>
<simpara>A <emphasis>principal</emphasis> represents the identity of a user.
The format of the ID depends on the authentication mechanism used by clients to connect to Kafka:</simpara>
<itemizedlist>
<listitem>
<simpara><literal>User:ANONYMOUS</literal> when connected without authentication.</simpara>
</listitem>
<listitem>
<simpara><literal>User:&lt;username&gt;</literal> when connected using simple authentication mechanisms, such as PLAIN or SCRAM.</simpara>
<simpara>For example <literal>User:admin</literal> or <literal>User:user1</literal>.</simpara>
</listitem>
<listitem>
<simpara><literal>User:&lt;DistinguishedName&gt;</literal> when connected using TLS client authentication.</simpara>
<simpara>For example <literal>User:CN=user1,O=MyCompany,L=Prague,C=CZ</literal>.</simpara>
</listitem>
<listitem>
<simpara><literal>User:&lt;Kerberos username&gt;</literal> when connected using Kerberos.</simpara>
</listitem>
</itemizedlist>
<simpara>The <emphasis>DistinguishedName</emphasis> is the distinguished name from the client certificate.</simpara>
<simpara>The <emphasis>Kerberos username</emphasis> is the primary part of the Kerberos principal, which is used by default when connecting using Kerberos.
You can use the <literal>sasl.kerberos.principal.to.local.rules</literal> property to configure how the Kafka principal is built from the Kerberos principal.</simpara>
</section>
<section xml:id="authentication_of_users" remap="_authentication_of_users">
<title>Authentication of users</title>
<simpara>To use authorization, you need to have authentication enabled and used by your clients.
Otherwise, all connections will have the principal <literal>User:ANONYMOUS</literal>.</simpara>
<simpara>For more information on methods of authentication, see <link linkend="assembly-kafka-encryption-and-authentication-str">Encryption and authentication</link>.</simpara>
<formalpara>
<title>Super users</title>
<para>Super users are allowed to take all actions regardless of the ACL rules.</para>
</formalpara>
<simpara>Super users are defined in the Kafka configuration file using the property <literal>super.users</literal>.</simpara>
<simpara>For example:</simpara>
<screen>super.users=User:admin,User:operator</screen>
<formalpara>
<title>Replica broker authentication</title>
<para>When authorization is enabled, it is applied to all listeners and all connections.
This includes the inter-broker connections used for replication of data between brokers.
If enabling authorization, therefore, ensure that you use authentication for inter-broker connections and give the users used by the brokers sufficient rights.
For example, if authentication between brokers uses the <literal>kafka-broker</literal> user, then super user configuration must include the username <literal>super.users=User:kafka-broker</literal>.</para>
</formalpara>
</section>
<section xml:id="supported_resources" remap="_supported_resources">
<title>Supported resources</title>
<simpara>You can apply Kafka ACLs to these types of resource:</simpara>
<itemizedlist>
<listitem>
<simpara>Topics</simpara>
</listitem>
<listitem>
<simpara>Consumer groups</simpara>
</listitem>
<listitem>
<simpara>The cluster</simpara>
</listitem>
<listitem>
<simpara>TransactionId</simpara>
</listitem>
<listitem>
<simpara>DelegationToken</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="supported_operations" remap="_supported_operations">
<title>Supported operations</title>
<simpara><literal>SimpleAclAuthorizer</literal> authorizes operations on resources.</simpara>
<simpara>Fields with <literal>X</literal> in the following table mark the supported operations for each resource.</simpara>
<informaltable frame="all" rowsep="1" colsep="1">
<tgroup cols="4">
<colspec colname="col_1" colwidth="25*"/>
<colspec colname="col_2" colwidth="25*"/>
<colspec colname="col_3" colwidth="25*"/>
<colspec colname="col_4" colwidth="25*"/>
<thead>
<row>
<entry align="left" valign="top"/>
<entry align="left" valign="top">Topics</entry>
<entry align="left" valign="top">Consumer Groups</entry>
<entry align="left" valign="top">Cluster</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left" valign="top"><simpara>Read</simpara></entry>
<entry align="left" valign="top"><simpara>X</simpara></entry>
<entry align="left" valign="top"><simpara>X</simpara></entry>
<entry align="left" valign="top"/>
</row>
<row>
<entry align="left" valign="top"><simpara>Write</simpara></entry>
<entry align="left" valign="top"><simpara>X</simpara></entry>
<entry align="left" valign="top"/>
<entry align="left" valign="top"/>
</row>
<row>
<entry align="left" valign="top"><simpara>Create</simpara></entry>
<entry align="left" valign="top"/>
<entry align="left" valign="top"/>
<entry align="left" valign="top"><simpara>X</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>Delete</simpara></entry>
<entry align="left" valign="top"><simpara>X</simpara></entry>
<entry align="left" valign="top"/>
<entry align="left" valign="top"/>
</row>
<row>
<entry align="left" valign="top"><simpara>Alter</simpara></entry>
<entry align="left" valign="top"><simpara>X</simpara></entry>
<entry align="left" valign="top"/>
<entry align="left" valign="top"/>
</row>
<row>
<entry align="left" valign="top"><simpara>Describe</simpara></entry>
<entry align="left" valign="top"><simpara>X</simpara></entry>
<entry align="left" valign="top"><simpara>X</simpara></entry>
<entry align="left" valign="top"><simpara>X</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>ClusterAction</simpara></entry>
<entry align="left" valign="top"/>
<entry align="left" valign="top"/>
<entry align="left" valign="top"><simpara>X</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>All</simpara></entry>
<entry align="left" valign="top"><simpara>X</simpara></entry>
<entry align="left" valign="top"><simpara>X</simpara></entry>
<entry align="left" valign="top"><simpara>X</simpara></entry>
</row>
</tbody>
</tgroup>
</informaltable>
</section>
<section xml:id="acl_management_options" remap="_acl_management_options">
<title>ACL management options</title>
<simpara>ACL rules are managed using the <literal>bin/kafka-acls.sh</literal> utility, which is provided as part of the Kafka distribution package.</simpara>
<simpara>Use <literal>kafka-acls.sh</literal> parameter options to add, list and remove ACL rules, and perform other functions.</simpara>
<simpara>The parameters require a double-hyphen convention, such as <literal>--add</literal>.</simpara>
<informaltable frame="all" rowsep="1" colsep="1">
<tgroup cols="4">
<colspec colname="col_1" colwidth="25*"/>
<colspec colname="col_2" colwidth="25*"/>
<colspec colname="col_3" colwidth="25*"/>
<colspec colname="col_4" colwidth="25*"/>
<thead>
<row>
<entry align="left" valign="top">Option</entry>
<entry align="left" valign="top">Type</entry>
<entry align="left" valign="top">Description</entry>
<entry align="left" valign="top">Default</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left" valign="top"><simpara><literal>add</literal></simpara></entry>
<entry align="left" valign="top"><simpara>Action</simpara></entry>
<entry align="left" valign="top"><simpara>Add ACL rule.</simpara></entry>
<entry align="left" valign="top"/>
</row>
<row>
<entry align="left" valign="top"><simpara><literal>remove</literal></simpara></entry>
<entry align="left" valign="top"><simpara>Action</simpara></entry>
<entry align="left" valign="top"><simpara>Remove ACL rule.</simpara></entry>
<entry align="left" valign="top"/>
</row>
<row>
<entry align="left" valign="top"><simpara><literal>list</literal></simpara></entry>
<entry align="left" valign="top"><simpara>Action</simpara></entry>
<entry align="left" valign="top"><simpara>List ACL rules.</simpara></entry>
<entry align="left" valign="top"/>
</row>
<row>
<entry align="left" valign="top"><simpara><literal>authorizer</literal></simpara></entry>
<entry align="left" valign="top"><simpara>Action</simpara></entry>
<entry align="left" valign="top"><simpara>Fully-qualified class name of the authorizer.</simpara></entry>
<entry align="left" valign="top"><simpara><literal>kafka.security.auth.SimpleAclAuthorizer</literal></simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal>authorizer-properties</literal></simpara></entry>
<entry align="left" valign="top"><simpara>Configuration</simpara></entry>
<entry align="left" valign="top"><simpara>Key/value pairs passed to the authorizer for initialization.</simpara><simpara>For <literal>SimpleAclAuthorizer</literal>, the example values are:
<literal>zookeeper.connect=zoo1.my-domain.com:2181</literal>.</simpara></entry>
<entry align="left" valign="top"/>
</row>
<row>
<entry align="left" valign="top"><simpara><literal>bootstrap-server</literal></simpara></entry>
<entry align="left" valign="top"><simpara>Resource</simpara></entry>
<entry align="left" valign="top"><simpara>Host/port pairs to connect to the Kafka cluster.</simpara></entry>
<entry align="left" valign="top"><simpara>Use this option or the <literal>authorizer</literal> option, not both.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal>command-config</literal></simpara></entry>
<entry align="left" valign="top"><simpara>Resource</simpara></entry>
<entry align="left" valign="top"><simpara>Configuration property file to pass to the Admin Client, which is used in conjunction with the <literal>bootstrap-server</literal> parameter.</simpara></entry>
<entry align="left" valign="top"/>
</row>
<row>
<entry align="left" valign="top"><simpara><literal>cluster</literal></simpara></entry>
<entry align="left" valign="top"><simpara>Resource</simpara></entry>
<entry align="left" valign="top"><simpara>Specifies a cluster as an ACL resource.</simpara></entry>
<entry align="left" valign="top"/>
</row>
<row>
<entry align="left" valign="top"><simpara><literal>topic</literal></simpara></entry>
<entry align="left" valign="top"><simpara>Resource</simpara></entry>
<entry align="left" valign="top"><simpara>Specifies a topic name as an ACL resource.</simpara><simpara>An asterisk (<literal>*</literal>) used as a wildcard translates to <emphasis>all topics</emphasis>.</simpara><simpara>A single command can specify multiple <literal>--topic</literal> options.</simpara></entry>
<entry align="left" valign="top"/>
</row>
<row>
<entry align="left" valign="top"><simpara><literal>group</literal></simpara></entry>
<entry align="left" valign="top"><simpara>Resource</simpara></entry>
<entry align="left" valign="top"><simpara>Specifies a consumer group name as an ACL resource.</simpara><simpara>A single command can specify multiple <literal>--group</literal> options.</simpara></entry>
<entry align="left" valign="top"/>
</row>
<row>
<entry align="left" valign="top"><simpara><literal>transactional-id</literal></simpara></entry>
<entry align="left" valign="top"><simpara>Resource</simpara></entry>
<entry align="left" valign="top"><simpara>Specifies a transactional ID as an ACL resource.</simpara><simpara>Transactional delivery means that all messages sent by a producer to multiple partitions must be successfully delivered or none of them.</simpara><simpara>An asterisk (<literal>*</literal>) used as a wildcard translates to <emphasis>all IDs</emphasis>.</simpara></entry>
<entry align="left" valign="top"/>
</row>
<row>
<entry align="left" valign="top"><simpara><literal>delegation-token</literal></simpara></entry>
<entry align="left" valign="top"><simpara>Resource</simpara></entry>
<entry align="left" valign="top"><simpara>Specifies a delegation token as an ACL resource.</simpara><simpara>An asterisk (<literal>*</literal>) used as a wildcard translates to <emphasis>all tokens</emphasis>.</simpara></entry>
<entry align="left" valign="top"/>
</row>
<row>
<entry align="left" valign="top"><simpara><literal>resource-pattern-type</literal></simpara></entry>
<entry align="left" valign="top"><simpara>Configuration</simpara></entry>
<entry align="left" valign="top"><simpara>Specifies a type of resource pattern for the <literal>add</literal> parameter or a resource pattern filter value for the <literal>list</literal> or <literal>remove</literal> parameters.</simpara><simpara>Use <literal>literal</literal> or <literal>prefixed</literal> as the resource pattern type for a resource name.</simpara><simpara>Use <literal>any</literal> or <literal>match</literal> as resource pattern filter values, or a specific pattern type filter.</simpara></entry>
<entry align="left" valign="top"><simpara><literal>literal</literal></simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal>allow-principal</literal></simpara></entry>
<entry align="left" valign="top"><simpara>Principal</simpara></entry>
<entry align="left" valign="top"><simpara>Principal added to an allow ACL rule.</simpara><simpara>A single command can specify multiple <literal>--allow-principal</literal> options.</simpara></entry>
<entry align="left" valign="top"/>
</row>
<row>
<entry align="left" valign="top"><simpara><literal>deny-principal</literal></simpara></entry>
<entry align="left" valign="top"><simpara>Principal</simpara></entry>
<entry align="left" valign="top"><simpara>Principal added to a deny ACL rule.</simpara><simpara>A single command can specify multiple <literal>--deny-principal</literal> options.</simpara></entry>
<entry align="left" valign="top"/>
</row>
<row>
<entry align="left" valign="top"><simpara><literal>principal</literal></simpara></entry>
<entry align="left" valign="top"><simpara>Principal</simpara></entry>
<entry align="left" valign="top"><simpara>Principal name used with the <literal>list</literal> parameter to return a list of ACLs for the principal.</simpara><simpara>A single command can specify multiple <literal>--principal</literal> options.</simpara></entry>
<entry align="left" valign="top"/>
</row>
<row>
<entry align="left" valign="top"><simpara><literal>allow-host</literal></simpara></entry>
<entry align="left" valign="top"><simpara>Host</simpara></entry>
<entry align="left" valign="top"><simpara>IP address that allows access to the principals listed in <literal>--allow-principal</literal>.</simpara><simpara>Hostnames or CIDR ranges are not supported.</simpara></entry>
<entry align="left" valign="top"><simpara>If <literal>--allow-principal</literal> is specified, defaults to <literal>*</literal> meaning "all hosts".</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal>deny-host</literal></simpara></entry>
<entry align="left" valign="top"><simpara>Host</simpara></entry>
<entry align="left" valign="top"><simpara>IP address that denies access to the principals listed in <literal>--deny-principal</literal>.</simpara><simpara>Hostnames or CIDR ranges are not supported.</simpara></entry>
<entry align="left" valign="top"><simpara>if <literal>--deny-principal</literal> is specified, defaults to <literal>*</literal> meaning "all hosts".</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal>operation</literal></simpara></entry>
<entry align="left" valign="top"><simpara>Operation</simpara></entry>
<entry align="left" valign="top"><simpara>Allows or denies an operation.</simpara><simpara>A single command can specify multipleMultiple <literal>--operation</literal> options can be specified in single command.</simpara></entry>
<entry align="left" valign="top"><simpara>All</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal>producer</literal></simpara></entry>
<entry align="left" valign="top"><simpara>Shortcut</simpara></entry>
<entry align="left" valign="top"><simpara>A shortcut to allow or deny all operations needed by a message producer (WRITE and DESCRIBE on topic, CREATE on cluster).</simpara></entry>
<entry align="left" valign="top"/>
</row>
<row>
<entry align="left" valign="top"><simpara><literal>consumer</literal></simpara></entry>
<entry align="left" valign="top"><simpara>Shortcut</simpara></entry>
<entry align="left" valign="top"><simpara>A shortcut to allow or deny all operations needed by a message consumer (READ and DESCRIBE on topic, READ on consumer group).</simpara></entry>
<entry align="left" valign="top"/>
</row>
<row>
<entry align="left" valign="top"><simpara><literal>idempotent</literal></simpara></entry>
<entry align="left" valign="top"><simpara>Shortcut</simpara></entry>
<entry align="left" valign="top"><simpara>A shortcut to enable idempotence when used with the <literal>--producer</literal> parameter, so that messages are delivered exactly once to a partition.</simpara><simpara>Idepmotence is enabled automatically if the producer is authorized to send messages based on a specific transactional ID.</simpara></entry>
<entry align="left" valign="top"/>
</row>
<row>
<entry align="left" valign="top"><simpara><literal>force</literal></simpara></entry>
<entry align="left" valign="top"><simpara>Shortcut</simpara></entry>
<entry align="left" valign="top"><simpara>A shortcut to accept all queries and do not prompt.</simpara></entry>
<entry align="left" valign="top"/>
</row>
</tbody>
</tgroup>
</informaltable>
</section>
</section>
<section xml:id="proc-kafka-enable-authorization-str">
<title>Enabling authorization</title>
<simpara>This procedure describes how to enable the <literal>SimpleAclAuthorizer</literal> plugin for authorization in Kafka brokers.</simpara>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara><link linkend="proc-installing-amq-streams-str">AMQ Streams is installed</link> on all hosts used as Kafka brokers.</simpara>
</listitem>
</itemizedlist>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>Edit the <literal>/opt/kafka/config/server.properties</literal> Kafka configuration file to use the <literal>SimpleAclAuthorizer</literal>.</simpara>
<screen>authorizer.class.name=kafka.security.auth.SimpleAclAuthorizer</screen>
</listitem>
<listitem>
<simpara>(Re)start the Kafka brokers.</simpara>
</listitem>
</orderedlist>
<itemizedlist>
<title>Additional resources</title>
<listitem>
<simpara>For more information about configuring AMQ Streams, see <xref linkend="proc-configuring-amq-streams-str"/>.</simpara>
</listitem>
<listitem>
<simpara>For more information about running a Kafka cluster, see <xref linkend="proc-running-multinode-kafka-cluster-str"/>.</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="proc-kafka-authorization-add-rules-str">
<title>Adding ACL rules</title>
<simpara><literal>SimpleAclAuthorizer</literal> uses Access Control Lists (ACLs), which define a set of rules describing what users can and cannot do.</simpara>
<simpara>This procedure describes how to add ACL rules when using the <literal>SimpleAclAuthorizer</literal> plugin in Kafka brokers.</simpara>
<simpara>Rules are added using the <literal>kafka-acls.sh</literal> utility and stored in ZooKeeper.</simpara>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara><link linkend="proc-installing-amq-streams-str">AMQ Streams is installed</link> on all hosts used as Kafka brokers.</simpara>
</listitem>
<listitem>
<simpara>Authorization is <link linkend="proc-kafka-enable-authorization-str">enabled</link> in Kafka brokers.</simpara>
</listitem>
</itemizedlist>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>Run <literal>kafka-acls.sh</literal> with the <literal>--add</literal> option.</simpara>
<simpara>Examples:</simpara>
<itemizedlist>
<listitem>
<simpara>Allow <literal>user1</literal> and <literal>user2</literal> access to read from <literal>myTopic</literal> using the <literal>MyConsumerGroup</literal> consumer group.</simpara>
<programlisting language="shell" linenumbering="unnumbered">bin/kafka-acls.sh --authorizer-properties zookeeper.connect=zoo1.my-domain.com:2181 --add --operation Read --topic myTopic --allow-principal User:user1 --allow-principal User:user2

bin/kafka-acls.sh --authorizer-properties zookeeper.connect=zoo1.my-domain.com:2181 --add --operation Describe --topic myTopic --allow-principal User:user1 --allow-principal User:user2

bin/kafka-acls.sh --authorizer-properties zookeeper.connect=zoo1.my-domain.com:2181 --add --operation Read --operation Describe --group MyConsumerGroup --allow-principal User:user1 --allow-principal User:user2</programlisting>
</listitem>
<listitem>
<simpara>Deny <literal>user1</literal> access to read <literal>myTopic</literal> from IP address host <literal>127.0.0.1</literal>.</simpara>
<programlisting language="shell" linenumbering="unnumbered">bin/kafka-acls.sh --authorizer-properties zookeeper.connect=zoo1.my-domain.com:2181 --add --operation Describe --operation Read --topic myTopic --group MyConsumerGroup --deny-principal User:user1 --deny-host 127.0.0.1</programlisting>
</listitem>
<listitem>
<simpara>Add <literal>user1</literal> as the consumer of <literal>myTopic</literal> with <literal>MyConsumerGroup</literal>.</simpara>
<programlisting language="shell" linenumbering="unnumbered">bin/kafka-acls.sh --authorizer-properties zookeeper.connect=zoo1.my-domain.com:2181 --add --consumer --topic myTopic --group MyConsumerGroup --allow-principal User:user1</programlisting>
</listitem>
</itemizedlist>
</listitem>
</orderedlist>
<itemizedlist>
<title>Additional resources</title>
<listitem>
<simpara>For a list of all <literal>kafka-acls.sh</literal> options, see <xref linkend="con-kafka-authorization-simple-str"/>.</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="proc-kafka-authorization-list-rules-str">
<title>Listing ACL rules</title>
<simpara>This procedure describes how to list existing ACL rules when using the <literal>SimpleAclAuthorizer</literal> plugin in Kafka brokers.</simpara>
<simpara>Rules are listed using the <literal>kafka-acls.sh</literal> utility.</simpara>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara><link linkend="proc-installing-amq-streams-str">AMQ Streams is installed</link> on all hosts used as Kafka brokers.</simpara>
</listitem>
<listitem>
<simpara>Authorization is <link linkend="proc-kafka-enable-authorization-str">enabled</link> in Kafka brokers</simpara>
</listitem>
<listitem>
<simpara>ACLs have been <link linkend="proc-kafka-authorization-add-rules-str">added</link>.</simpara>
</listitem>
</itemizedlist>
<itemizedlist>
<title>Procedure</title>
<listitem>
<simpara>Run <literal>kafka-acls.sh</literal> with the <literal>--list</literal> option.</simpara>
<simpara>For example:</simpara>
<programlisting language="shell" linenumbering="unnumbered">$ bin/kafka-acls.sh --authorizer-properties zookeeper.connect=zoo1.my-domain.com:2181 --list --topic myTopic

Current ACLs for resource `Topic:myTopic`:

User:user1 has Allow permission for operations: Read from hosts: *
User:user2 has Allow permission for operations: Read from hosts: *
User:user2 has Deny permission for operations: Read from hosts: 127.0.0.1
User:user1 has Allow permission for operations: Describe from hosts: *
User:user2 has Allow permission for operations: Describe from hosts: *
User:user2 has Deny permission for operations: Describe from hosts: 127.0.0.1</programlisting>
</listitem>
</itemizedlist>
<itemizedlist>
<title>Additional resources</title>
<listitem>
<simpara>For a list of all <literal>kafka-acls.sh</literal> options, see <xref linkend="con-kafka-authorization-simple-str"/>.</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="proc-kafka-authorization-remove-rules-str">
<title>Removing ACL rules</title>
<simpara>This procedure describes how to remove ACL rules when using the <literal>SimpleAclAuthorizer</literal> plugin in Kafka brokers.</simpara>
<simpara>Rules are removed using the <literal>kafka-acls.sh</literal> utility.</simpara>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara><link linkend="proc-installing-amq-streams-str">AMQ Streams is installed</link> on all hosts used as Kafka brokers.</simpara>
</listitem>
<listitem>
<simpara>Authorization is <link linkend="proc-kafka-enable-authorization-str">enabled</link> in Kafka brokers.</simpara>
</listitem>
<listitem>
<simpara>ACLs have been <link linkend="proc-kafka-authorization-add-rules-str">added</link>.</simpara>
</listitem>
</itemizedlist>
<itemizedlist>
<title>Procedure</title>
<listitem>
<simpara>Run <literal>kafka-acls.sh</literal> with the <literal>--remove</literal> option.</simpara>
<simpara>Examples:</simpara>
</listitem>
<listitem>
<simpara>Remove the ACL allowing Allow <literal>user1</literal> and <literal>user2</literal> access to read from <literal>myTopic</literal> using the <literal>MyConsumerGroup</literal> consumer group.</simpara>
<programlisting language="shell" linenumbering="unnumbered">bin/kafka-acls.sh --authorizer-properties zookeeper.connect=zoo1.my-domain.com:2181 --remove --operation Read --topic myTopic --allow-principal User:user1 --allow-principal User:user2

bin/kafka-acls.sh --authorizer-properties zookeeper.connect=zoo1.my-domain.com:2181 --remove --operation Describe --topic myTopic --allow-principal User:user1 --allow-principal User:user2

bin/kafka-acls.sh --authorizer-properties zookeeper.connect=zoo1.my-domain.com:2181 --remove --operation Read --operation Describe --group MyConsumerGroup --allow-principal User:user1 --allow-principal User:user2</programlisting>
</listitem>
<listitem>
<simpara>Remove the ACL adding <literal>user1</literal> as the consumer of <literal>myTopic</literal> with <literal>MyConsumerGroup</literal>.</simpara>
<programlisting language="shell" linenumbering="unnumbered">bin/kafka-acls.sh --authorizer-properties zookeeper.connect=zoo1.my-domain.com:2181 --remove --consumer --topic myTopic --group MyConsumerGroup --allow-principal User:user1</programlisting>
</listitem>
<listitem>
<simpara>Remove the ACL denying <literal>user1</literal> access to read <literal>myTopic</literal> from IP address host <literal>127.0.0.1</literal>.</simpara>
<programlisting language="shell" linenumbering="unnumbered">bin/kafka-acls.sh --authorizer-properties zookeeper.connect=zoo1.my-domain.com:2181 --remove --operation Describe --operation Read --topic myTopic --group MyConsumerGroup --deny-principal User:user1 --deny-host 127.0.0.1</programlisting>
</listitem>
</itemizedlist>
<itemizedlist>
<title>Additional resources</title>
<listitem>
<simpara>For a list of all <literal>kafka-acls.sh</literal> options, see <xref linkend="con-kafka-authorization-simple-str"/>.</simpara>
</listitem>
<listitem>
<simpara>For more information about enabling authorization, see <xref linkend="proc-kafka-enable-authorization-str"/>.</simpara>
</listitem>
</itemizedlist>
</section>
</section>
<section xml:id="assembly-kafka-zookeeper-authorization-str">
<title>ZooKeeper authorization</title>
<simpara>When authentication is enabled between Kafka and ZooKeeper, you can use ZooKeeper Access Control List (ACL) rules to automatically control access to Kafka’s metadata stored in ZooKeeper.</simpara>
<section xml:id="con-kafka-zookeeper-authorization-enabling-acls-str">
<title>ACL Configuration</title>
<simpara>Enforcement of ZooKeeper ACL rules is controlled by the <literal>zookeeper.set.acl</literal> property in the <literal>config/server.properties</literal> Kafka configuration file.</simpara>
<simpara>The property is disabled by default and enabled by setting to <literal>true</literal>:</simpara>
<screen>zookeeper.set.acl=true</screen>
<simpara>If ACL rules are enabled, when a <literal>znode</literal> is created in ZooKeeper only the Kafka user who created it can modify or delete it.
All other users have read-only access.</simpara>
<simpara>Kafka sets ACL rules only for newly created ZooKeeper <literal>znodes</literal>.
If the ACLs are only enabled after the first start of the cluster, the <literal>zookeeper-security-migration.sh</literal> tool can set ACLs on all existing <literal>znodes</literal>.</simpara>
<formalpara>
<title>Confidentiality of data in ZooKeeper</title>
<para>Data stored in ZooKeeper includes:</para>
</formalpara>
<itemizedlist>
<listitem>
<simpara>Topic names and their configuration</simpara>
</listitem>
<listitem>
<simpara>Salted and hashed user credentials when SASL SCRAM authentication is used.</simpara>
</listitem>
</itemizedlist>
<simpara>But ZooKeeper does not store any records sent and received using Kafka.
The data stored in ZooKeeper is assumed to be non-confidential.</simpara>
<simpara>If the data is to be regarded as confidential (for example because topic names contain customer IDs), the only option available for protection is isolating ZooKeeper on the network level and allowing access only to Kafka brokers.</simpara>
</section>
<section xml:id="proc-kafka-enabling-zookeeper-acls-str">
<title>Enabling ZooKeeper ACLs for a new Kafka cluster</title>
<simpara>This procedure describes how to enable ZooKeeper ACLs in Kafka configuration for a new Kafka cluster.
Use this procedure only before the first start of the Kafka cluster.
For enabling ZooKeeper ACLs in a cluster that is already running, see <xref linkend="proc-kafka-migrating-zookeeper-acls-str"/>.</simpara>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>AMQ Streams is <link linkend="proc-installing-amq-streams-str">installed</link> on all hosts which will be used as Kafka brokers.</simpara>
</listitem>
<listitem>
<simpara>ZooKeeper cluster is <link linkend="proc-running-multinode-zookeeper-cluster-str">configured and running</link>.</simpara>
</listitem>
<listitem>
<simpara>Client-to-server authentication is <link linkend="proc-zookeeper-enable-client-to-server-auth-digest-md5-str">enabled</link> in ZooKeeper.</simpara>
</listitem>
<listitem>
<simpara>ZooKeeper authentication is <link linkend="proc-kafka-enable-zookeeper-auth-str">enabled</link> in the Kafka brokers.</simpara>
</listitem>
<listitem>
<simpara>Kafka brokers have not yet been started.</simpara>
</listitem>
</itemizedlist>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>Edit the <literal>/opt/kafka/config/server.properties</literal> Kafka configuration file to set the <literal>zookeeper.set.acl</literal> field to <literal>true</literal> on all cluster nodes.</simpara>
<screen>zookeeper.set.acl=true</screen>
</listitem>
<listitem>
<simpara>Start the Kafka brokers.</simpara>
</listitem>
</orderedlist>
</section>
<section xml:id="proc-kafka-migrating-zookeeper-acls-str">
<title>Enabling ZooKeeper ACLs in an existing Kafka cluster</title>
<simpara>This procedure describes how to enable ZooKeeper ACLs in Kafka configuration for a Kafka cluster that is running.
Use the <literal>zookeeper-security-migration.sh</literal> tool to set ZooKeeper ACLs on all existing <literal>znodes</literal>.
The <literal>zookeeper-security-migration.sh</literal> is available as part of AMQ Streams, and can be found in the <literal>bin</literal> directory.</simpara>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>Kafka cluster is <link linkend="proc-running-multinode-kafka-cluster-str">configured and running</link>.</simpara>
</listitem>
</itemizedlist>
<orderedlist numeration="arabic">
<title>Enabling the ZooKeeper ACLs</title>
<listitem>
<simpara>Edit the <literal>/opt/kafka/config/server.properties</literal> Kafka configuration file to set the <literal>zookeeper.set.acl</literal> field to <literal>true</literal> on all cluster nodes.</simpara>
<screen>zookeeper.set.acl=true</screen>
</listitem>
<listitem>
<simpara>Restart all Kafka brokers one by one.</simpara>
</listitem>
<listitem>
<simpara>Set the ACLs on all existing ZooKeeper <literal>znodes</literal> using the <literal>zookeeper-security-migration.sh</literal> tool.</simpara>
<screen>su - kafka
cd /opt/kafka
KAFKA_OPTS="-Djava.security.auth.login.config=./config/jaas.conf"; ./bin/zookeeper-security-migration.sh --zookeeper.acl=secure --zookeeper.connect=<emphasis>&lt;ZooKeeperURL&gt;</emphasis>
exit</screen>
<simpara>For example:</simpara>
<screen>su - kafka
cd /opt/kafka
KAFKA_OPTS="-Djava.security.auth.login.config=./config/jaas.conf"; ./bin/zookeeper-security-migration.sh --zookeeper.acl=secure --zookeeper.connect=zoo1.my-domain.com:2181
exit</screen>
</listitem>
</orderedlist>
</section>
</section>
<section xml:id="assembly-kafka-encryption-and-authentication-str">
<title>Encryption and authentication</title>
<simpara>Kafka supports TLS for encrypting the communication with Kafka clients.
Additionally, it supports two types of authentication:</simpara>
<itemizedlist>
<listitem>
<simpara>TLS client authentication based on X.509 certificates</simpara>
</listitem>
<listitem>
<simpara>SASL Authentication based on a username and password</simpara>
</listitem>
</itemizedlist>
<section xml:id="con-kafka-securing-listeners-str">
<title>Listener configuration</title>
<simpara>Encryption and authentication in Kafka brokers is configured per listener.
For more information about Kafka listener configuration, see <xref linkend="con-kafka-listener-configuration-str"/>.</simpara>
<simpara>Each listener in the Kafka broker is configured with its own security protocol.
The configuration property <literal>listener.security.protocol.map</literal> defines which listener uses which security protocol.
It maps each listener name to its security protocol.
Supported security protocols are:</simpara>
<variablelist>
<varlistentry>
<term><literal>PLAINTEXT</literal></term>
<listitem>
<simpara>Listener without any encryption or authentication.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>SSL</literal></term>
<listitem>
<simpara>Listener using TLS encryption and, optionally, authentication using TLS client certificates.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>SASL_PLAINTEXT</literal></term>
<listitem>
<simpara>Listener without encryption but with SASL-based authentication.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>SASL_SSL</literal></term>
<listitem>
<simpara>Listener with TLS-based encryption and SASL-based authentication.</simpara>
</listitem>
</varlistentry>
</variablelist>
<simpara>Given the following <literal>listeners</literal> configuration:</simpara>
<screen>listeners=INT1://:9092,INT2://:9093,REPLICATION://:9094</screen>
<simpara>the <literal>listener.security.protocol.map</literal> might look like this:</simpara>
<screen>listener.security.protocol.map=INT1:SASL_PLAINTEXT,INT2:SASL_SSL,REPLICATION:SSL</screen>
<simpara>This would configure the listener <literal>INT1</literal> to use unencrypted connections with SASL authentication, the listener <literal>INT2</literal> to use encrypted connections with SASL authentication and the <literal>REPLICATION</literal> interface to use TLS encryption (possibly with TLS client authentication).
The same security protocol can be used multiple times.
The following example is also a valid configuration:</simpara>
<screen>listener.security.protocol.map=INT1:SSL,INT2:SSL,REPLICATION:SSL</screen>
<simpara>Such a configuration would use TLS encryption and TLS authentication for all interfaces.
The following chapters will explain in more detail how to configure TLS and SASL.</simpara>
</section>
<section xml:id="con-kafka-tls-encryption-str">
<title>TLS Encryption</title>
<simpara>In order to use TLS encryption and server authentication, a keystore containing private and public keys has to be provided.
This is usually done using a file in the Java Keystore (JKS) format.
A path to this file is set in the <literal>ssl.keystore.location</literal> property.
The <literal>ssl.keystore.password</literal> property should be used to set the password protecting the keystore.
For example:</simpara>
<screen>ssl.keystore.location=/path/to/keystore/server-1.jks
ssl.keystore.password=123456</screen>
<simpara>In some cases, an additional password is used to protect the private key.
Any such password can be set using the <literal>ssl.key.password</literal> property.</simpara>
<simpara>Kafka is able to use keys signed by certification authorities as well as self-signed keys.
Using keys signed by certification authorities should always be the preferred method.
In order to allow clients to verify the identity of the Kafka broker they are connecting to, the certificate should always contain the advertised hostname(s) as its Common Name (CN) or in the Subject Alternative Names (SAN).</simpara>
<simpara>It is possible to use different SSL configurations for different listeners.
All options starting with <literal>ssl.</literal> can be prefixed with <literal>listener.name.&lt;NameOfTheListener&gt;.</literal>, where the name of the listener has to be always in lower case.
This will override the default SSL configuration for that specific listener.
The following example shows how to use different SSL configurations for different listeners:</simpara>
<screen>listeners=INT1://:9092,INT2://:9093,REPLICATION://:9094
listener.security.protocol.map=INT1:SSL,INT2:SSL,REPLICATION:SSL

# Default configuration - will be used for listeners INT1 and INT2
ssl.keystore.location=/path/to/keystore/server-1.jks
ssl.keystore.password=123456

# Different configuration for listener REPLICATION
listener.name.replication.ssl.keystore.location=/path/to/keystore/server-1.jks
listener.name.replication.ssl.keystore.password=123456</screen>
<formalpara>
<title>Additional TLS configuration options</title>
<para>In addition to the main TLS configuration options described above, Kafka supports many options for fine-tuning the TLS configuration.
For example, to enable or disable TLS / SSL protocols or cipher suites:</para>
</formalpara>
<variablelist>
<varlistentry>
<term><literal>ssl.cipher.suites</literal></term>
<listitem>
<simpara>List of enabled cipher suites.
Each cipher suite is a combination of authentication, encryption, MAC and key exchange algorithms used for the TLS connection.
By default, all available cipher suites are enabled.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>ssl.enabled.protocols</literal></term>
<listitem>
<simpara>List of enabled TLS / SSL protocols.
Defaults to <literal>TLSv1.2,TLSv1.1,TLSv1</literal>.</simpara>
</listitem>
</varlistentry>
</variablelist>
<simpara>For a complete list of supported Kafka broker configuration options, see <xref linkend="broker-configuration-parameters-str"/>.</simpara>
</section>
<section xml:id="proc-kafka-enable-tls-encryption-str">
<title>Enabling TLS encryption</title>
<simpara>This procedure describes how to enable encryption in Kafka brokers.</simpara>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>AMQ Streams is <link linkend="proc-installing-amq-streams-str">installed</link> on all hosts which will be used as Kafka brokers.</simpara>
</listitem>
</itemizedlist>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>Generate TLS certificates for all Kafka brokers in your cluster.
The certificates should have their advertised and bootstrap addresses in their Common Name or Subject Alternative Name.</simpara>
</listitem>
<listitem>
<simpara>Edit the <literal>/opt/kafka/config/server.properties</literal> Kafka configuration file on all cluster nodes for the following:</simpara>
<itemizedlist>
<listitem>
<simpara>Change the <literal>listener.security.protocol.map</literal> field to specify the <literal>SSL</literal> protocol for the listener where you want to use TLS encryption.</simpara>
</listitem>
<listitem>
<simpara>Set the <literal>ssl.keystore.location</literal> option to the path to the JKS keystore with the broker certificate.</simpara>
</listitem>
<listitem>
<simpara>Set the <literal>ssl.keystore.password</literal> option to the password you used to protect the keystore.</simpara>
<simpara>For example:</simpara>
<screen>listeners=UNENCRYPTED://:9092,ENCRYPTED://:9093,REPLICATION://:9094
listener.security.protocol.map=UNENCRYPTED:PLAINTEXT,ENCRYPTED:SSL,REPLICATION:PLAINTEXT
ssl.keystore.location=/path/to/keystore/server-1.jks
ssl.keystore.password=123456</screen>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>(Re)start the Kafka brokers</simpara>
</listitem>
</orderedlist>
<itemizedlist>
<title>Additional resources</title>
<listitem>
<simpara>For more information about configuring AMQ Streams, see <xref linkend="proc-configuring-amq-streams-str"/>.</simpara>
</listitem>
<listitem>
<simpara>For more information about running a Kafka cluster, see <xref linkend="proc-running-multinode-kafka-cluster-str"/>.</simpara>
</listitem>
<listitem>
<simpara>For more information about configuring TLS encryption in clients, see:</simpara>
<itemizedlist>
<listitem>
<simpara><xref linkend="producer-configuration-parameters-str"/></simpara>
</listitem>
<listitem>
<simpara><xref linkend="consumer-configuration-parameters-str"/></simpara>
</listitem>
</itemizedlist>
</listitem>
</itemizedlist>
</section>
<section xml:id="con-kafka-authentication-str">
<title>Authentication</title>
<simpara>Kafka supports two methods of authentication.
On all connections, authentication using one of the supported SASL (Simple Authentication and Security Layer) mechanisms can be used.
On encrypted connections, TLS client authentication based on X.509 certificates can be used.</simpara>
<section xml:id="tls_client_authentication" remap="_tls_client_authentication">
<title>TLS client authentication</title>
<simpara>TLS client authentication can be used only on connections which are already using TLS encryption.
To use TLS client authentication, a truststore with public keys can be provided to the broker.
These keys can be used to authenticate clients connecting to the broker.
The truststore should be provided in Java Keystore (JKS) format and should contain public keys of the certification authorities.
All clients with public and private keys signed by one of the certification authorities included in the truststore will be authenticated.
The location of the truststore is set using field <literal>ssl.truststore.location</literal>.
In case the truststore is password protected, the password should be set in the <literal>ssl.truststore.password</literal> property.
For example:</simpara>
<screen>ssl.truststore.location=/path/to/keystore/server-1.jks
ssl.truststore.password=123456</screen>
<simpara>Once the truststore is configured, TLS client authentication has to be enabled using the <literal>ssl.client.auth</literal> property.
This property can be set to one of three different values:</simpara>
<variablelist>
<varlistentry>
<term><literal>none</literal></term>
<listitem>
<simpara>TLS client authentication is switched off. (Default value)</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>requested</literal></term>
<listitem>
<simpara>TLS client authentication is optional.
Clients will be asked to authenticate using TLS client certificate but they can choose not to.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>required</literal></term>
<listitem>
<simpara>Clients are required to authenticate using TLS client certificate.</simpara>
</listitem>
</varlistentry>
</variablelist>
<simpara>When a client authenticates using TLS client authentication, the authenticated principal name is the distinguished name from the authenticated client certificate.
For example, a user with a certificate which has a distinguished name <literal>CN=someuser</literal> will be authenticated with the following principal <literal>CN=someuser,OU=Unknown,O=Unknown,L=Unknown,ST=Unknown,C=Unknown</literal>.
When TLS client authentication is not used and SASL is disabled, the principal name will be <literal>ANONYMOUS</literal>.</simpara>
</section>
<section xml:id="sasl_authentication" remap="_sasl_authentication">
<title>SASL authentication</title>
<simpara>SASL authentication is configured using Java Authentication and Authorization Service (JAAS).
JAAS is also used for authentication of connections between Kafka and ZooKeeper.
JAAS uses its own configuration file.
The recommended location for this file is <literal>/opt/kafka/config/jaas.conf</literal>.
The file has to be readable by the <literal>kafka</literal> user.
When running Kafka, the location of this file is specified using Java system property  <literal>java.security.auth.login.config</literal>.
This property has to be passed to Kafka when starting the broker nodes:</simpara>
<screen>KAFKA_OPTS="-Djava.security.auth.login.config=/path/to/my/jaas.config"; bin/kafka-server-start.sh</screen>
<simpara>SASL authentication is supported both through plain unencrypted connections as well as through TLS connections.
SASL can be enabled individually for each listener.
To enable it, the security protocol in <literal>listener.security.protocol.map</literal> has to be either <literal>SASL_PLAINTEXT</literal> or <literal>SASL_SSL</literal>.</simpara>
<simpara>SASL authentication in Kafka supports several different mechanisms:</simpara>
<variablelist>
<varlistentry>
<term><literal>PLAIN</literal></term>
<listitem>
<simpara>Implements authentication based on username and passwords.
Usernames and passwords are stored locally in Kafka configuration.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>SCRAM-SHA-256</literal> and <literal>SCRAM-SHA-512</literal></term>
<listitem>
<simpara>Implements authentication using Salted Challenge Response Authentication Mechanism (SCRAM).
SCRAM credentials are stored centrally in ZooKeeper.
SCRAM can be used in situations where ZooKeeper cluster nodes are running isolated in a private network.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>GSSAPI</literal></term>
<listitem>
<simpara>Implements authentication against a Kerberos server.</simpara>
</listitem>
</varlistentry>
</variablelist>
<warning>
<simpara>The <literal>PLAIN</literal> mechanism sends the username and password over the network in an unencrypted format.
It should be therefore only be used in combination with TLS encryption.</simpara>
</warning>
<simpara>The SASL mechanisms are configured via the JAAS configuration file.
Kafka uses the JAAS context named <literal>KafkaServer</literal>.
After they are configured in JAAS, the SASL mechanisms have to be enabled in the Kafka configuration.
This is done using the <literal>sasl.enabled.mechanisms</literal> property.
This property contains a comma-separated list of enabled mechanisms:</simpara>
<screen>sasl.enabled.mechanisms=PLAIN,SCRAM-SHA-256,SCRAM-SHA-512</screen>
<simpara>In case the listener used for inter-broker communication is using SASL, the property <literal>sasl.mechanism.inter.broker.protocol</literal> has to be used to specify the SASL mechanism which it should use.
For example:</simpara>
<screen>sasl.mechanism.inter.broker.protocol=PLAIN</screen>
<simpara>The username and password which will be used for the inter-broker communication has to be specified in the <literal>KafkaServer</literal> JAAS context using the field <literal>username</literal> and <literal>password</literal>.</simpara>
<formalpara>
<title>SASL PLAIN</title>
<para>To use the PLAIN mechanism, the usernames and password which are allowed to connect are specified directly in the JAAS context.
The following example shows the context configured for SASL PLAIN authentication.
The example configures three different users:</para>
</formalpara>
<itemizedlist>
<listitem>
<simpara><literal>admin</literal></simpara>
</listitem>
<listitem>
<simpara><literal>user1</literal></simpara>
</listitem>
<listitem>
<simpara><literal>user2</literal></simpara>
</listitem>
</itemizedlist>
<screen>KafkaServer {
    org.apache.kafka.common.security.plain.PlainLoginModule required
    user_admin="123456"
    user_user1="123456"
    user_user2="123456";
};</screen>
<simpara>The JAAS configuration file with the user database should be kept in sync on all Kafka brokers.</simpara>
<simpara>When SASL PLAIN is also used for inter-broker authentication, the <literal>username</literal> and <literal>password</literal> properties should
be included in the JAAS context:</simpara>
<screen>KafkaServer {
    org.apache.kafka.common.security.plain.PlainLoginModule required
    username="admin"
    password="123456"
    user_admin="123456"
    user_user1="123456"
    user_user2="123456";
};</screen>
<formalpara>
<title>SASL SCRAM</title>
<para>SCRAM authentication in Kafka consists of two mechanisms: <literal>SCRAM-SHA-256</literal> and <literal>SCRAM-SHA-512</literal>.
These mechanisms differ only in the hashing algorithm used - SHA-256 versus stronger SHA-512.
To enable SCRAM authentication, the JAAS configuration file has to include the following configuration:</para>
</formalpara>
<screen>KafkaServer {
    org.apache.kafka.common.security.scram.ScramLoginModule required;
};</screen>
<simpara>When enabling SASL authentication in the Kafka configuration file, both SCRAM mechanisms can be listed.
However, only one of them can be chosen for the inter-broker communication.
For example:</simpara>
<screen>sasl.enabled.mechanisms=SCRAM-SHA-256,SCRAM-SHA-512
sasl.mechanism.inter.broker.protocol=SCRAM-SHA-512</screen>
<simpara>User credentials for the SCRAM mechanism are stored in ZooKeeper.
The <literal>kafka-configs.sh</literal> tool can be used to manage them.
For example, run the following command to add user user1 with password 123456:</simpara>
<screen>bin/kafka-configs.sh --zookeeper zoo1.my-domain.com:2181 --alter --add-config 'SCRAM-SHA-256=[password=123456],SCRAM-SHA-512=[password=123456]' --entity-type users --entity-name user1</screen>
<simpara>To delete a user credential use:</simpara>
<screen>bin/kafka-configs.sh --zookeeper zoo1.my-domain.com:2181 --alter --delete-config 'SCRAM-SHA-512' --entity-type users --entity-name user1</screen>
<formalpara>
<title>SASL GSSAPI</title>
<para>The SASL mechanism used for authentication using Kerberos is called <literal>GSSAPI</literal>.
To configure Kerberos SASL authentication, the following configuration should be added to the JAAS configuration file:</para>
</formalpara>
<screen>KafkaServer {
    com.sun.security.auth.module.Krb5LoginModule required
    useKeyTab=true
    storeKey=true
    keyTab="/etc/security/keytabs/kafka_server.keytab"
    principal="kafka/kafka1.hostname.com@EXAMPLE.COM";
};</screen>
<simpara>The domain name in the Kerberos principal has to be always in upper case.</simpara>
<simpara>In addition to the JAAS configuration, the Kerberos service name needs to be specified in the <literal>sasl.kerberos.service.name</literal> property in the Kafka configuration:</simpara>
<screen>sasl.enabled.mechanisms=GSSAPI
sasl.mechanism.inter.broker.protocol=GSSAPI
sasl.kerberos.service.name=kafka</screen>
<formalpara>
<title>Multiple SASL mechanisms</title>
<para>Kafka can use multiple SASL mechanisms at the same time.
The different JAAS configurations can be all added to the same context:</para>
</formalpara>
<screen>KafkaServer {
    org.apache.kafka.common.security.plain.PlainLoginModule required
    user_admin="123456"
    user_user1="123456"
    user_user2="123456";

    com.sun.security.auth.module.Krb5LoginModule required
    useKeyTab=true
    storeKey=true
    keyTab="/etc/security/keytabs/kafka_server.keytab"
    principal="kafka/kafka1.hostname.com@EXAMPLE.COM";

    org.apache.kafka.common.security.scram.ScramLoginModule required;
};</screen>
<simpara>When multiple mechanisms are enabled, clients will be able to choose the mechanism which they want to use.</simpara>
</section>
</section>
<section xml:id="proc-kafka-enable-tls-client-authentication-str">
<title>Enabling TLS client authentication</title>
<simpara>This procedure describes how to enable TLS client authentication in Kafka brokers.</simpara>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>AMQ Streams is <link linkend="proc-installing-amq-streams-str">installed</link> on all hosts which will be used as Kafka brokers.</simpara>
</listitem>
<listitem>
<simpara>TLS encryption is <link linkend="proc-kafka-enable-tls-encryption-str">enabled</link>.</simpara>
</listitem>
</itemizedlist>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>Prepare a JKS truststore containing the public key of the certification authority used to sign the user certificates.</simpara>
</listitem>
<listitem>
<simpara>Edit the <literal>/opt/kafka/config/server.properties</literal> Kafka configuration file on all cluster nodes for the following:</simpara>
<itemizedlist>
<listitem>
<simpara>Set the <literal>ssl.truststore.location</literal> option to the path to the JKS truststore with the certification authority of the user certificates.</simpara>
</listitem>
<listitem>
<simpara>Set the <literal>ssl.truststore.password</literal> option to the password you used to protect the truststore.</simpara>
</listitem>
<listitem>
<simpara>Set the <literal>ssl.client.auth</literal> option to <literal>required</literal>.</simpara>
<simpara>For example:</simpara>
<screen>ssl.truststore.location=/path/to/truststore.jks
ssl.truststore.password=123456
ssl.client.auth=required</screen>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>(Re)start the Kafka brokers</simpara>
</listitem>
</orderedlist>
<itemizedlist>
<title>Additional resources</title>
<listitem>
<simpara>For more information about configuring AMQ Streams, see <xref linkend="proc-configuring-amq-streams-str"/>.</simpara>
</listitem>
<listitem>
<simpara>For more information about running a Kafka cluster, see <xref linkend="proc-running-multinode-kafka-cluster-str"/>.</simpara>
</listitem>
<listitem>
<simpara>For more information about configuring TLS encryption in clients, see:</simpara>
<itemizedlist>
<listitem>
<simpara><xref linkend="producer-configuration-parameters-str"/></simpara>
</listitem>
<listitem>
<simpara><xref linkend="consumer-configuration-parameters-str"/></simpara>
</listitem>
</itemizedlist>
</listitem>
</itemizedlist>
</section>
<section xml:id="proc-kafka-enable-plain-authentication-str">
<title>Enabling SASL PLAIN authentication</title>
<simpara>This procedure describes how to enable SASL PLAIN authentication in Kafka brokers.</simpara>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>AMQ Streams is <link linkend="proc-installing-amq-streams-str">installed</link> on all hosts which will be used as Kafka brokers.</simpara>
</listitem>
</itemizedlist>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>Edit or create the <literal>/opt/kafka/config/jaas.conf</literal> JAAS configuration file.
This file should contain all your users and their passwords.
Make sure this file is the same on all Kafka brokers.</simpara>
<simpara>For example:</simpara>
<screen>KafkaServer {
    org.apache.kafka.common.security.plain.PlainLoginModule required
    user_admin="123456"
    user_user1="123456"
    user_user2="123456";
};</screen>
</listitem>
<listitem>
<simpara>Edit the <literal>/opt/kafka/config/server.properties</literal> Kafka configuration file on all cluster nodes for the following:</simpara>
<itemizedlist>
<listitem>
<simpara>Change the <literal>listener.security.protocol.map</literal> field to specify the <literal>SASL_PLAINTEXT</literal> or <literal>SASL_SSL</literal> protocol for the listener where you want to use SASL PLAIN authentication.</simpara>
</listitem>
<listitem>
<simpara>Set the <literal>sasl.enabled.mechanisms</literal> option to <literal>PLAIN</literal>.</simpara>
<simpara>For example:</simpara>
<screen>listeners=INSECURE://:9092,AUTHENTICATED://:9093,REPLICATION://:9094
listener.security.protocol.map=INSECURE:PLAINTEXT,AUTHENTICATED:SASL_PLAINTEXT,REPLICATION:PLAINTEXT
sasl.enabled.mechanisms=PLAIN</screen>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>(Re)start the Kafka brokers using the KAFKA_OPTS environment variable to pass the JAAS configuration to Kafka brokers.</simpara>
<screen>su - kafka
export KAFKA_OPTS="-Djava.security.auth.login.config=/opt/kafka/config/jaas.conf"; /opt/kafka/bin/kafka-server-start.sh -daemon /opt/kafka/config/server.properties</screen>
</listitem>
</orderedlist>
<itemizedlist>
<title>Additional resources</title>
<listitem>
<simpara>For more information about configuring AMQ Streams, see <xref linkend="proc-configuring-amq-streams-str"/>.</simpara>
</listitem>
<listitem>
<simpara>For more information about running a Kafka cluster, see <xref linkend="proc-running-multinode-kafka-cluster-str"/>.</simpara>
</listitem>
<listitem>
<simpara>For more information about configuring SASL PLAIN authentication in clients, see:</simpara>
<itemizedlist>
<listitem>
<simpara><xref linkend="producer-configuration-parameters-str"/></simpara>
</listitem>
<listitem>
<simpara><xref linkend="consumer-configuration-parameters-str"/></simpara>
</listitem>
</itemizedlist>
</listitem>
</itemizedlist>
</section>
<section xml:id="proc-kafka-enable-scram-authentication-str">
<title>Enabling SASL SCRAM authentication</title>
<simpara>This procedure describes how to enable SASL SCRAM authentication in Kafka brokers.</simpara>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>AMQ Streams is <link linkend="proc-installing-amq-streams-str">installed</link> on all hosts which will be used as Kafka brokers.</simpara>
</listitem>
</itemizedlist>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>Edit or create the <literal>/opt/kafka/config/jaas.conf</literal> JAAS configuration file.
Enable the <literal>ScramLoginModule</literal> for the <literal>KafkaServer</literal> context.
Make sure this file is the same on all Kafka brokers.</simpara>
<simpara>For example:</simpara>
<screen>KafkaServer {
    org.apache.kafka.common.security.scram.ScramLoginModule required;
};</screen>
</listitem>
<listitem>
<simpara>Edit the <literal>/opt/kafka/config/server.properties</literal> Kafka configuration file on all cluster nodes for the following:</simpara>
<itemizedlist>
<listitem>
<simpara>Change the <literal>listener.security.protocol.map</literal> field to specify the <literal>SASL_PLAINTEXT</literal> or <literal>SASL_SSL</literal> protocol for the listener where you want to use SASL SCRAM authentication.</simpara>
</listitem>
<listitem>
<simpara>Set the <literal>sasl.enabled.mechanisms</literal> option to <literal>SCRAM-SHA-256</literal> or <literal>SCRAM-SHA-512</literal>.</simpara>
<simpara>For example:</simpara>
<screen>listeners=INSECURE://:9092,AUTHENTICATED://:9093,REPLICATION://:9094
listener.security.protocol.map=INSECURE:PLAINTEXT,AUTHENTICATED:SASL_PLAINTEXT,REPLICATION:PLAINTEXT
sasl.enabled.mechanisms=SCRAM-SHA-512</screen>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>(Re)start the Kafka brokers using the KAFKA_OPTS environment variable to pass the JAAS configuration to Kafka brokers.</simpara>
<screen>su - kafka
export KAFKA_OPTS="-Djava.security.auth.login.config=/opt/kafka/config/jaas.conf"; /opt/kafka/bin/kafka-server-start.sh -daemon /opt/kafka/config/server.properties</screen>
</listitem>
</orderedlist>
<itemizedlist>
<title>Additional resources</title>
<listitem>
<simpara>For more information about configuring AMQ Streams, see <xref linkend="proc-configuring-amq-streams-str"/>.</simpara>
</listitem>
<listitem>
<simpara>For more information about running a Kafka cluster, see <xref linkend="proc-running-multinode-kafka-cluster-str"/>.</simpara>
</listitem>
<listitem>
<simpara>For more information about adding SASL SCRAM users, see <xref linkend="proc-kafka-adding-scram-users-str"/>.</simpara>
</listitem>
<listitem>
<simpara>For more information about deleting SASL SCRAM users, see <xref linkend="proc-kafka-deleting-scram-users-str"/>.</simpara>
</listitem>
<listitem>
<simpara>For more information about configuring SASL SCRAM authentication in clients, see:</simpara>
<itemizedlist>
<listitem>
<simpara><xref linkend="producer-configuration-parameters-str"/></simpara>
</listitem>
<listitem>
<simpara><xref linkend="consumer-configuration-parameters-str"/></simpara>
</listitem>
</itemizedlist>
</listitem>
</itemizedlist>
</section>
<section xml:id="proc-kafka-adding-scram-users-str">
<title>Adding SASL SCRAM users</title>
<simpara>This procedure describes how to add new users for authentication using SASL SCRAM.</simpara>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>AMQ Streams is <link linkend="proc-installing-amq-streams-str">installed</link> on all hosts which will be used as Kafka brokers.</simpara>
</listitem>
<listitem>
<simpara>SASL SCRAM authentication is <link linkend="proc-kafka-enable-scram-authentication-str">enabled</link>.</simpara>
</listitem>
</itemizedlist>
<itemizedlist>
<title>Procedure</title>
<listitem>
<simpara>Use the <literal>kafka-configs.sh</literal> tool to add new SASL SCRAM users.</simpara>
<programlisting language="shell" linenumbering="unnumbered">bin/kafka-configs.sh --zookeeper <emphasis>&lt;ZooKeeperAddress&gt;</emphasis> --alter --add-config 'SCRAM-SHA-512=[password=<emphasis>&lt;Password&gt;</emphasis>]' --entity-type users --entity-name <emphasis>&lt;Username&gt;</emphasis></programlisting>
<simpara>For example:</simpara>
<screen>bin/kafka-configs.sh --zookeeper zoo1.my-domain.com:2181 --alter --add-config 'SCRAM-SHA-512=[password=123456]' --entity-type users --entity-name user1</screen>
</listitem>
</itemizedlist>
<itemizedlist>
<title>Additional resources</title>
<listitem>
<simpara>For more information about configuring SASL SCRAM authentication in clients, see:</simpara>
<itemizedlist>
<listitem>
<simpara><xref linkend="producer-configuration-parameters-str"/></simpara>
</listitem>
<listitem>
<simpara><xref linkend="consumer-configuration-parameters-str"/></simpara>
</listitem>
</itemizedlist>
</listitem>
</itemizedlist>
</section>
<section xml:id="proc-kafka-deleting-scram-users-str">
<title>Deleting SASL SCRAM users</title>
<simpara>This procedure describes how to remove users when using SASL SCRAM authentication.</simpara>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>AMQ Streams is <link linkend="proc-installing-amq-streams-str">installed</link> on all hosts which will be used as Kafka brokers.</simpara>
</listitem>
<listitem>
<simpara>SASL SCRAM authentication is <link linkend="proc-kafka-enable-scram-authentication-str">enabled</link>.</simpara>
</listitem>
</itemizedlist>
<itemizedlist>
<title>Procedure</title>
<listitem>
<simpara>Use the <literal>kafka-configs.sh</literal> tool to delete SASL SCRAM users.</simpara>
<programlisting language="shell" linenumbering="unnumbered">bin/kafka-configs.sh --zookeeper <emphasis>&lt;ZooKeeperAddress&gt;</emphasis> --alter --delete-config 'SCRAM-SHA-512' --entity-type users --entity-name <emphasis>&lt;Username&gt;</emphasis></programlisting>
<simpara>For example:</simpara>
<screen>bin/kafka-configs.sh --zookeeper zoo1.my-domain.com:2181 --alter --delete-config 'SCRAM-SHA-512' --entity-type users --entity-name user1</screen>
</listitem>
</itemizedlist>
<itemizedlist>
<title>Additional resources</title>
<listitem>
<simpara>For more information about configuring SASL SCRAM authentication in clients, see:</simpara>
<itemizedlist>
<listitem>
<simpara><xref linkend="producer-configuration-parameters-str"/></simpara>
</listitem>
<listitem>
<simpara><xref linkend="consumer-configuration-parameters-str"/></simpara>
</listitem>
</itemizedlist>
</listitem>
</itemizedlist>
</section>
</section>
<section xml:id="assembly-oauth-str">
<title>Using OAuth 2.0 token based authentication</title>
<simpara>AMQ Streams supports the use of OAuth 2.0 authentication using the <emphasis>SASL OAUTHBEARER</emphasis> mechanism.</simpara>
<simpara>OAuth 2.0 enables standardized token based authentication and authorization between applications, using a central authorization server to issue tokens that grant limited access to resources.</simpara>
<simpara>OAuth 2.0 is currently only supported for authentication, with no authorization support.
However, OAuth 2.0 authentication can be used in conjunction with <link linkend="assembly-authorization-str">ACL-based Kafka authorization</link>.</simpara>
<simpara>Using OAuth 2.0 token based authentication, application clients can access resources on application servers (called ‘resource servers’) without exposing account credentials.
The client passes an access token as a means of authenticating, which application servers can also use to find more information about the level of access granted.
The authorization server handles the granting of access and inquiries about access.</simpara>
<simpara>In the context of AMQ Streams:</simpara>
<itemizedlist>
<listitem>
<simpara>Kafka brokers act as resource servers</simpara>
</listitem>
<listitem>
<simpara>Kafka clients act as resource clients</simpara>
</listitem>
</itemizedlist>
<simpara>The brokers and clients communicate with the OAuth 2.0 authorization server, as necessary, to obtain or validate access tokens.</simpara>
<simpara>For a deployment of AMQ Streams, OAuth 2.0 integration provides:</simpara>
<itemizedlist>
<listitem>
<simpara>Server-side OAuth 2.0 support for Kafka brokers</simpara>
</listitem>
<listitem>
<simpara>Client-side OAuth 2.0 support for Kafka Mirror Maker, Kafka Connect and the Kafka Bridge</simpara>
</listitem>
</itemizedlist>
<itemizedlist>
<title>Additional resources</title>
<listitem>
<simpara><link xlink:href="https://oauth.net/2/">OAuth 2.0 site</link></simpara>
</listitem>
</itemizedlist>
<section xml:id="con-oauth-authentication-flow-str">
<title>OAuth 2.0 authentication mechanism</title>
<simpara>Support for OAuth 2.0 is based on the Kafka <emphasis>SASL OAUTHBEARER</emphasis> mechanism, which is used to establish authenticated sessions with a Kafka broker.</simpara>
<simpara>A Kafka client initiates a session with the Kafka broker using the <emphasis>SASL OAUTHBEARER</emphasis> mechanism for credentials exchange, where credentials take the form of an access token.</simpara>
<simpara>Kafka brokers and clients need to be configured to use OAuth 2.0.</simpara>
<formalpara>
<title>Kafka broker configuration</title>
<para>The Kafka broker must be configured to validate the token received during session initiation.
The recommended approach is to create a <emphasis>client</emphasis> definition in an authorization server with:</para>
</formalpara>
<itemizedlist>
<listitem>
<simpara>Client ID of <literal>kafka-broker</literal></simpara>
</listitem>
<listitem>
<simpara>Client ID and secret as the authentication mechanism</simpara>
</listitem>
</itemizedlist>
<formalpara>
<title>Kafka client configuration</title>
<para>A Kafka client is configured with either:</para>
</formalpara>
<itemizedlist>
<listitem>
<simpara>Credentials required to obtain a valid access token from an authorization server</simpara>
</listitem>
<listitem>
<simpara>A valid long-lived access token, obtained using tools provided by an authorization server</simpara>
</listitem>
</itemizedlist>
<simpara>Credentials are never sent to the Kafka broker.
The only information ever sent to the Kafka broker is an access token.
When a client obtains an access token, no further communication with the authorization server is needed.</simpara>
<simpara>The simplest mechanism, which requires no additional usage of authorization server tools, is authentication with a client ID and secret.
Using a long-lived access token, or a long-lived refresh token, is more complex.</simpara>
<note>
<simpara>If you are using long-lived access tokens, you can set policy in the authorization server to increase the maximum lifetime of the token.</simpara>
</note>
<simpara>If the Kafka client is not configured with an access token directly, the client exchanges credentials for an access token during Kafka session initiation by contacting the authorization server.
The Kafka client uses one of two mechanisms:</simpara>
<itemizedlist>
<listitem>
<simpara>Client id and secret</simpara>
</listitem>
<listitem>
<simpara>Client id, refresh token, and (optionally) a secret</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="con-oauth-authentication-client-options-str">
<title>OAuth 2.0 client authentication flow</title>
<simpara>In this section, we explain and visualize the communication flow between Kafka client, Kafka broker, and authorization server during Kafka session initiation.
The flow depends on the client and server configuration.</simpara>
<simpara>When a Kafka client sends an access token as credentials to a Kafka broker, the token needs to be validated.</simpara>
<simpara>Depending on the authorization server used, and the configuration options available, you may prefer to use:</simpara>
<itemizedlist>
<listitem>
<simpara>Fast local token validation based on JWT signature checking and local token introspection, without contacting the authorization server</simpara>
</listitem>
<listitem>
<simpara>An OAuth 2.0 introspection endpoint provided by the authorization server</simpara>
</listitem>
</itemizedlist>
<simpara>Using fast local token validation requires the authorization server to provide a JWKS endpoint with public certificates that are used to validate signatures on the tokens.</simpara>
<note>
<simpara>An authorization server might only allow the use of opaque access tokens, which means that local token validation is not possible.</simpara>
</note>
<simpara>Another option is to use an OAuth 2.0 introspection endpoint on the authorization server.
Each time a Kafka broker connection is established, the broker sends the access token it receives to the authorization server, and a response confirming whether or not the token is valid is returned.</simpara>
<simpara>Kafka client credentials can also be configured for:</simpara>
<itemizedlist>
<listitem>
<simpara>Direct local access using a previously generated long-lived access token</simpara>
</listitem>
<listitem>
<simpara>Contact with the authorization server for a new access token to be issued and sent to the Kafka broker</simpara>
</listitem>
</itemizedlist>
<section xml:id="example_client_authentication_flows" remap="_example_client_authentication_flows">
<title>Example client authentication flows</title>
<simpara>Here you can see the communication flows, for different configurations of Kafka clients and brokers, during Kafka session authentication.</simpara>
<itemizedlist>
<listitem>
<simpara><link linkend="oauth-introspection-endpoint-str">Client using client ID and secret, with broker delegating validation to authorization server</link></simpara>
</listitem>
<listitem>
<simpara><link linkend="oauth-jwt-str">Client using client ID and secret, with broker performing fast local token validation</link></simpara>
</listitem>
<listitem>
<simpara><link linkend="oauth-token-endpoint-str">Client using long-lived access token, with broker delegating validation to authorization server</link></simpara>
</listitem>
<listitem>
<simpara><link linkend="oauth-token-jwt-str">Client using long-lived access token, with broker performing fast local validation</link></simpara>
</listitem>
</itemizedlist>
<formalpara xml:id="oauth-introspection-endpoint-str">
<title>Client using client ID and secret, with broker delegating validation to authorization server</title>
<para><inlinemediaobject>
<imageobject>
<imagedata fileref="images/oauth-introspection-endpoint.png"/>
</imageobject>
<textobject><phrase>Client using client ID and secret with broker delegating validation to authorization server</phrase></textobject>
</inlinemediaobject></para>
</formalpara>
<orderedlist numeration="arabic">
<listitem>
<simpara>Kafka client requests access token from authorization server, using client ID and secret, and optionally a refresh token.</simpara>
</listitem>
<listitem>
<simpara>Authorization server generates a new access token.</simpara>
</listitem>
<listitem>
<simpara>Kafka client authenticates with the Kafka broker using the <emphasis>SASL OAUTHBEARER</emphasis> mechanism to pass the access token.</simpara>
</listitem>
<listitem>
<simpara>Kafka broker validates the access token by calling a token introspection endpoint on authorization server, using its own client ID and secret.</simpara>
</listitem>
<listitem>
<simpara>Kafka client session is established if the token is valid.</simpara>
</listitem>
</orderedlist>
<formalpara xml:id="oauth-jwt-str">
<title>Client using client ID and secret, with broker performing fast local token validation</title>
<para><inlinemediaobject>
<imageobject>
<imagedata fileref="images/oauth-jwt-signature.png"/>
</imageobject>
<textobject><phrase>Client using client ID and secret with broker performing fast local token validation</phrase></textobject>
</inlinemediaobject></para>
</formalpara>
<orderedlist numeration="arabic">
<listitem>
<simpara>Kafka client authenticates with authorization server from the token endpoint, using a client ID and secret, and optionally a refresh token.</simpara>
</listitem>
<listitem>
<simpara>Authorization server generates a new access token.</simpara>
</listitem>
<listitem>
<simpara>Kafka client authenticates with the Kafka broker using the <emphasis>SASL OAUTHBEARER</emphasis> mechanism to pass the access token.</simpara>
</listitem>
<listitem>
<simpara>Kafka broker validates the access token locally using a JWT token signature check, and local token introspection.</simpara>
</listitem>
</orderedlist>
<formalpara xml:id="oauth-token-endpoint-str">
<title>Client using long-lived access token, with broker delegating validation to authorization server</title>
<para><inlinemediaobject>
<imageobject>
<imagedata fileref="images/oauth-introspection-endpoint-long-token.png"/>
</imageobject>
<textobject><phrase>Client using long-lived access token with broker delegating validation to authorization server</phrase></textobject>
</inlinemediaobject></para>
</formalpara>
<orderedlist numeration="arabic">
<listitem>
<simpara>Kafka client authenticates with the Kafka broker using the <emphasis>SASL OAUTHBEARER</emphasis> mechanism to pass the long-lived access token.</simpara>
</listitem>
<listitem>
<simpara>Kafka broker validates the access token by calling a token introspection endpoint on authorization server, using its own client ID and secret.</simpara>
</listitem>
<listitem>
<simpara>Kafka client session is established if the token is valid.</simpara>
</listitem>
</orderedlist>
<formalpara xml:id="oauth-token-jwt-str">
<title>Client using long-lived access token, with broker performing fast local validation</title>
<para><inlinemediaobject>
<imageobject>
<imagedata fileref="images/oauth-jwt-signature-token.png"/>
</imageobject>
<textobject><phrase>Client using long-lived access token with broker performing fast local validation</phrase></textobject>
</inlinemediaobject></para>
</formalpara>
<orderedlist numeration="arabic">
<listitem>
<simpara>Kafka client authenticates with the Kafka broker using the <emphasis>SASL OAUTHBEARER</emphasis> mechanism to pass the long-lived access token.</simpara>
</listitem>
<listitem>
<simpara>Kafka broker validates the access token locally using JWT token signature check, and local token introspection.</simpara>
</listitem>
</orderedlist>
<warning>
<simpara>Fast local JWT token signature validation is suitable only for short-lived tokens as there is no check with the authorization server if a token has been revoked.
Token expiration is written into the token, but revocation can happen at any time, so cannot be accounted for without contacting the authorization server.
Any issued token would be considered valid until it expires.</simpara>
</warning>
</section>
</section>
<section xml:id="con-oauth-strimzi-config-str">
<title>Configuring OAuth 2.0 authentication</title>
<simpara>OAuth 2.0 is used for interaction between Kafka clients and AMQ Streams components.</simpara>
<simpara>In order to use OAuth 2.0 for AMQ Streams, you must:</simpara>
<orderedlist numeration="arabic">
<listitem>
<simpara><link linkend="proc-oauth-server-config-str">Deploy an authorization server and configure the deployment to integrate with AMQ Streams</link></simpara>
</listitem>
<listitem>
<simpara><link linkend="proc-oauth-broker-config-str">Deploy or update the Kafka cluster with Kafka broker listeners configured to use OAuth 2.0</link></simpara>
</listitem>
<listitem>
<simpara><link linkend="proc-oauth-client-config-str">Update your Java-based Kafka clients to use OAuth 2.0</link></simpara>
</listitem>
</orderedlist>
<section xml:id="proc-oauth-server-config-str">
<title>Configuring Red Hat Single Sign-On as an OAuth 2.0 authorization server</title>
<simpara>This procedure describes how to deploy Red Hat Single Sign-On as an authorization server and configure it for integration with AMQ Streams.</simpara>
<simpara>The authorization server provides a central point for authentication and authorization, and management of users, clients, and permissions.
Red Hat Single Sign-On has a concept of realms where a <emphasis>realm</emphasis> represents a separate set of users, clients, permissions, and other configuration.
You can use a default <emphasis>master realm</emphasis>, or create a new one.
Each realm exposes its own OAuth 2.0 endpoints, which means that application clients and application servers all need to use the same realm.</simpara>
<simpara>To use OAuth 2.0 with AMQ Streams, you need a deployment of an authorization server to be able to create and manage authentication realms.</simpara>
<note>
<simpara>If you already have Red Hat Single Sign-On deployed, you can skip the deployment step and use your current deployment.</simpara>
</note>
<formalpara>
<title>Before you begin</title>
<para>You will need to be familiar with using Red Hat Single Sign-On.</para>
</formalpara>
<simpara>For installation and administration instructions, see:</simpara>
<itemizedlist>
<listitem>
<simpara><link xlink:href="https://access.redhat.com/documentation/en-us/red_hat_single_sign-on/7.3/html/server_installation_and_configuration_guide/index">Server Installation and Configuration Guide</link></simpara>
</listitem>
<listitem>
<simpara><link xlink:href="https://access.redhat.com/documentation/en-us/red_hat_single_sign-on/7.3/html/server_administration_guide/index">Server Administration Guide</link></simpara>
</listitem>
</itemizedlist>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>AMQ Streams and Kafka are running</simpara>
</listitem>
</itemizedlist>
<simpara>For the Red Hat Single Sign-On deployment:</simpara>
<itemizedlist>
<listitem>
<simpara>Check the <link xlink:href="https://access.redhat.com/articles/2342861">Red Hat Single Sign-On Supported Configurations</link></simpara>
</listitem>
</itemizedlist>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>Install Red Hat Single Sign-On.</simpara>
<simpara>You can install from a ZIP file or by using an RPM.</simpara>
</listitem>
<listitem>
<simpara>Log in to the Red Hat Single Sign-On Admin Console to create the OAuth 2.0 policies for AMQ Streams.</simpara>
<simpara>Login details are provided when you deploy Red Hat Single Sign-On.</simpara>
</listitem>
<listitem>
<simpara>Create and enable a realm.</simpara>
<simpara>You can use an existing master realm.</simpara>
</listitem>
<listitem>
<simpara>Adjust the session and token timeouts for the realm, if required.</simpara>
</listitem>
<listitem>
<simpara>Create a client called <literal>kafka-broker</literal>.</simpara>
</listitem>
<listitem>
<simpara>From the <guimenu>Settings</guimenu> tab, set:</simpara>
<itemizedlist>
<listitem>
<simpara><emphasis role="strong">Access Type</emphasis> to <literal>Confidential</literal></simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Standard Flow Enabled</emphasis> to <literal>OFF</literal> to disable web login for this client</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Service Accounts Enabled</emphasis> to <literal>ON</literal> to allow this client to authenticate in its own name</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>Click <emphasis role="strong">Save</emphasis> before continuing.</simpara>
</listitem>
<listitem>
<simpara>From the <guimenu>Credentials</guimenu> tab, take a note of the secret for using in your AMQ Streams Kafka cluster configuration.</simpara>
</listitem>
<listitem>
<simpara>Repeat the client creation steps for any application client that will connect to your Kafka brokers.</simpara>
<simpara>Create a definition for each new client.</simpara>
<simpara>You will use the names as client IDs in your configuration.</simpara>
</listitem>
</orderedlist>
<formalpara>
<title>What to do next</title>
<para>After deploying and configuring the authorization server, <link linkend="proc-oauth-broker-config-str">configure the Kafka brokers to use OAuth 2.0</link>.</para>
</formalpara>
</section>
<section xml:id="proc-oauth-broker-config-str">
<title>Configuring OAuth 2.0 support for Kafka brokers</title>
<simpara>This procedure describes how to configure Kafka brokers so that the broker listeners are enabled to use OAuth 2.0 authentication using an authorization server.</simpara>
<formalpara>
<title>Before you start</title>
<para>For more information on the configuration and authentication of Kafka broker listeners, see:</para>
</formalpara>
<itemizedlist>
<listitem>
<simpara><link linkend="con-kafka-listener-configuration-str">Listeners</link></simpara>
</listitem>
<listitem>
<simpara><link linkend="assembly-kafka-encryption-and-authentication-str">Encryption and authentication</link></simpara>
</listitem>
</itemizedlist>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>AMQ Streams and Kafka are running</simpara>
</listitem>
<listitem>
<simpara>An OAuth 2.0 authorization server is deployed</simpara>
</listitem>
</itemizedlist>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>Check you have the following JAR files in your Kafka <literal>libs</literal> directory.</simpara>
<programlisting language="xml" linenumbering="unnumbered">strimzi-kafka-oauth-common-*.jar
strimzi-kafka-oauth-server-*.jar
strimzi-kafka-oauth-client-*.jar
keycloak-common-*.jar
keycloak-core-*.jar
bcprov-*.jar</programlisting>
<simpara>If they are not already present, the files are available from the <link linkend="proc-downloading-amq-streams-str">installation archive</link>.</simpara>
</listitem>
<listitem>
<simpara>Update the Kafka <literal>server.properties</literal> file.</simpara>
<programlisting language="xml" linenumbering="unnumbered">sasl.enabled.mechanisms=OAUTHBEARER <co xml:id="CO1-1"/>

listeners=CLIENTS://kafka:9092 <co xml:id="CO1-2"/>

listener.security.protocol.map=CLIENTS:SASL_PLAINTEXT <co xml:id="CO1-3"/>

listener.name.clients.oauthbearer.sasl.jaas.config=org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule required; <co xml:id="CO1-4"/>
listener.name.clients.oauthbearer.sasl.login.callback.handler.class=io.strimzi.kafka.oauth.client.JaasClientOauthLoginCallbackHandler
listener.name.clients.oauthbearer.sasl.server.callback.handler.class=io.strimzi.kafka.oauth.server.JaasServerOauthValidatorCallbackHandler</programlisting>
<calloutlist>
<callout arearefs="CO1-1">
<para>Enables the <emphasis>OAUTHBEARER as SASL</emphasis> mechanism for credentials exchange over SASL.</para>
</callout>
<callout arearefs="CO1-2">
<para>Configures a listener for client applications, replacing <literal>kafka</literal> with a valid hostname, resolvable by clients.</para>
</callout>
<callout arearefs="CO1-3">
<para>Specifies the channel protocol for the listener. SASL_PLAINTEXT means unencrypted connection (no TLS), so there is risk of eavesdropping and interception at the TCP connection layer.</para>
</callout>
<callout arearefs="CO1-4">
<para>The three listener properties enable OAuth 2.0 for AMQ Streams.</para>
</callout>
</calloutlist>
</listitem>
<listitem>
<simpara>To further configure OAuth 2.0 support, use one of the following connection options.</simpara>
<itemizedlist>
<listitem>
<simpara>OPTION 1: Add environment variables to enable local token validation using a JWKS endpoint configuration.</simpara>
<programlisting language="env" linenumbering="unnumbered">export OAUTH_JWKS_ENDPOINT_URI=https://&lt;<emphasis>authorization-server-address</emphasis>&gt;/jwks <co xml:id="CO2-1"/>
export OAUTH_JWKS_REFRESH_SECONDS=300 <co xml:id="CO2-2"/>
export OAUTH_JWKS_EXPIRY_SECONDS=360 <co xml:id="CO2-3"/></programlisting>
<calloutlist>
<callout arearefs="CO2-1">
<para>The JWKS endpoint URL. For example, <literal><link xlink:href="https://&lt;authorization-server-address&gt;/auth/realms/master/protocol/openid-connect/certs">https://&lt;authorization-server-address&gt;/auth/realms/master/protocol/openid-connect/certs</link></literal>.</para>
</callout>
<callout arearefs="CO2-2">
<para>The period between endpoint refreshes (default 300).</para>
</callout>
<callout arearefs="CO2-3">
<para>The certificate’s expiry time (default 360). If you specify a longer time, consider the risk of allowing access to revoked certificates.</para>
</callout>
</calloutlist>
</listitem>
<listitem>
<simpara>OPTION 2: Add environment variables to enable delegating token validation to the authorization server through the OAuth 2.0 introspection endpoint.</simpara>
<programlisting language="env" linenumbering="unnumbered">export OAUTH_INTROSPECTION_ENDPOINT_URI=https://&lt;<emphasis>authorization-server-address</emphasis>&gt;/introspection <co xml:id="CO3-1"/></programlisting>
<calloutlist>
<callout arearefs="CO3-1">
<para>The OAuth 2.0 introspection endpoint URL. For example, <literal><link xlink:href="https://&lt;authorization-server-address&gt;/auth/realms/master/protocol/openid-connect/token/introspect">https://&lt;authorization-server-address&gt;/auth/realms/master/protocol/openid-connect/token/introspect</link></literal>.</para>
</callout>
</calloutlist>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>If required, configure access to the authorization server.</simpara>
<simpara>This step is normally required for a production environment, unless a technology like <emphasis>service mesh</emphasis> is used to configure secure channels outside containers.</simpara>
<orderedlist numeration="loweralpha">
<listitem>
<simpara>Provide a custom truststore for connecting to the authorization server.
SSL is always required for access to the authorization server.</simpara>
<simpara>Set environment variables to configure a truststore for connecting to a secured authorization server:</simpara>
<simpara>For example:</simpara>
<programlisting language="env" linenumbering="unnumbered">export OAUTH_SSL_TRUSTSTORE_LOCATION=&lt;<emphasis>/path/to/truststore.p12</emphasis>&gt; <co xml:id="CO4-1"/>
export OAUTH_SSL_TRUSTSTORE_PASSWORD=&lt;<emphasis>my-password</emphasis>&gt; <co xml:id="CO4-2"/>
export OAUTH_SSL_TRUSTSTORE_TYPE=pkcs12 <co xml:id="CO4-3"/></programlisting>
<calloutlist>
<callout arearefs="CO4-1">
<para>Location of the truststore file in PKCS format.</para>
</callout>
<callout arearefs="CO4-2">
<para>Password to access the truststore.</para>
</callout>
<callout arearefs="CO4-3">
<para>Truststore type in PKCS12 format.</para>
</callout>
</calloutlist>
</listitem>
<listitem>
<simpara>If the certificate hostname does not match the access URL hostname, you can turn off certificate hostname validation:</simpara>
<programlisting language="env" linenumbering="unnumbered">export OAUTH_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM= ""</programlisting>
<simpara>The check ensures that client connection to the authorization server is authentic.
You may wish to turn off the validation in a non-production environment.</simpara>
</listitem>
</orderedlist>
</listitem>
<listitem>
<simpara>Configure the following environment variables according to your chosen authentication flow.</simpara>
<programlisting language="env" linenumbering="unnumbered">export OAUTH_TOKEN_ENDPOINT_URI=https://&lt;<emphasis>authorization-server-address</emphasis>&gt;/token <co xml:id="CO5-1"/>
export OAUTH_VALID_ISSUER_URI=https://&lt;<emphasis>authorization-server-address</emphasis>&gt; <co xml:id="CO5-2"/>
export OAUTH_CLIENT_ID=kafka-broker <co xml:id="CO5-3"/>
export OAUTH_CLIENT_SECRET=kafka-broker-secret <co xml:id="CO5-4"/>

export OAUTH_REFRESH_TOKEN=&lt;<emphasis>my-refresh-token-for-kafka-brokers</emphasis>&gt; <co xml:id="CO5-5"/>
export OAUTH_ACCESS_TOKEN=&lt;<emphasis>my-access-token-for-kafka-brokers</emphasis>&gt; <co xml:id="CO5-6"/></programlisting>
<calloutlist>
<callout arearefs="CO5-1">
<para>The OAuth 2.0 token endpoint URL to your authorization server. For production, always use HTTPs.</para>
</callout>
<callout arearefs="CO5-2">
<para>A valid issuer URI. Only access tokens issued by this issuer will be accepted.</para>
</callout>
<callout arearefs="CO5-3">
<para>The configured client ID of the Kafka broker, which is the same for all brokers. This is the <link linkend="proc-oauth-server-config-str">client registered with the authorization server as <literal>kafka-broker</literal></link>.</para>
</callout>
<callout arearefs="CO5-4">
<para>The configured secret for Kafka broker, which is the same for all brokers.</para>
</callout>
<callout arearefs="CO5-5">
<para>(Optional) A long-lived refresh token for Kafka brokers.</para>
</callout>
<callout arearefs="CO5-6">
<para>(Optional) A long-lived access token for Kafka brokers.</para>
</callout>
</calloutlist>
</listitem>
</orderedlist>
<itemizedlist>
<title>What to do next</title>
<listitem>
<simpara><link linkend="proc-oauth-client-config-str">Configure your Kafka clients to use OAuth 2.0</link></simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="proc-oauth-client-config-str">
<title>Configuring Kafka Java clients to use OAuth 2.0</title>
<simpara>This procedure describes how to configure Kafka producer and consumer APIs to use OAuth 2.0 for interaction with Kafka brokers.</simpara>
<simpara>Add a client callback plugin to your <emphasis>pom.xml</emphasis> file, and configure the system properties.</simpara>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>AMQ Streams and Kafka are running</simpara>
</listitem>
<listitem>
<simpara>An OAuth 2.0 authorization server is deployed and configured for OAuth access to Kafka brokers</simpara>
</listitem>
<listitem>
<simpara>Kafka brokers are configured for OAuth 2.0</simpara>
</listitem>
</itemizedlist>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>Add the client library with OAuth 2.0 support to the <literal>pom.xml</literal> file for the Kafka client:</simpara>
<programlisting language="xml" linenumbering="unnumbered">&lt;dependency&gt;
 &lt;groupId&gt;io.strimzi&lt;/groupId&gt;
 &lt;artifactId&gt;kafka-oauth-client&lt;/artifactId&gt;
 &lt;version&gt;0.1.0.redhat-00002&lt;/version&gt;
&lt;/dependency&gt;</programlisting>
</listitem>
<listitem>
<simpara>Configure the system properties for the callback:</simpara>
<simpara>For example:</simpara>
<programlisting language="xml" linenumbering="unnumbered">System.setProperty(ClientConfig.OAUTH_TOKEN_ENDPOINT_URI, “<emphasis>https://&lt;authorization-server-address&gt;/auth/realms/master/protocol/openid-connect/token</emphasis>”); <co xml:id="CO6-1"/>
System.setProperty(ClientConfig.OAUTH_CLIENT_ID, "<emphasis>&lt;client-name&gt;</emphasis>"); <co xml:id="CO6-2"/>
System.setProperty(ClientConfig.OAUTH_CLIENT_SECRET, "<emphasis>&lt;client-secret&gt;</emphasis>"); <co xml:id="CO6-3"/></programlisting>
<calloutlist>
<callout arearefs="CO6-1">
<para>URI of the authorization server token endpoint.</para>
</callout>
<callout arearefs="CO6-2">
<para>Client ID, which is the name used when creating the <emphasis>client</emphasis> in the authorization server.</para>
</callout>
<callout arearefs="CO6-3">
<para>Client secret created when creating the <emphasis>client</emphasis> in the authorization server.</para>
</callout>
</calloutlist>
</listitem>
<listitem>
<simpara>Enable the <emphasis>SASL OAUTHBEARER</emphasis> mechanism on a TLS encrypted connection in the Kafka client configuration:</simpara>
<simpara>For example:</simpara>
<programlisting language="xml" linenumbering="unnumbered">props.put("sasl.jaas.config", "org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule required;");
props.put("security.protocol", "SASL_SSL"); <co xml:id="CO7-1"/>
props.put("sasl.mechanism", "OAUTHBEARER");
props.put("sasl.login.callback.handler.class", "io.strimzi.kafka.oauth.client.JaasClientOauthLoginCallbackHandler");</programlisting>
<calloutlist>
<callout arearefs="CO7-1">
<para>Here we use <literal>SASL_SSL</literal> for use over TLS connections. Use <literal>SASL_PLAINTEXT</literal> over unencrypted connections.</para>
</callout>
</calloutlist>
</listitem>
<listitem>
<simpara>Verify that the Kafka client can access the Kafka brokers.</simpara>
</listitem>
</orderedlist>
</section>
</section>
</section>
<section xml:id="con-kafka-logging-str">
<title>Logging</title>
<simpara>Kafka brokers use Log4j as their logging infrastructure.
Logging configuration is by default read from the <literal>log4j.propeties</literal> configuration file which should be placed either in the <literal>/opt/kafka/config/</literal> directory or on the classpath.
The location and name of the configuration file can be changed using the Java property <literal>log4j.configuration</literal> which can be passed to Kafka using the <literal>KAFKA_LOG4J_OPTS</literal> environment variable:</simpara>
<screen>su - kafka
export KAFKA_LOG4J_OPTS="-Dlog4j.configuration=file:/my/path/to/log4j.config"; /opt/kafka/bin/kafka-server-start.sh /opt/kafka/config/server.properties</screen>
<simpara>For more information about Log4j configurations, see <link xlink:href="http://logging.apache.org/log4j/1.2/manual.html">Log4j manual</link>.</simpara>
</section>
</chapter>
<chapter xml:id="topics" remap="_topics">
<title>Topics</title>
<simpara>Messages in Kafka are always sent to or received from a topic.
This chapter describes how to configure and manage Kafka topics.</simpara>
<section xml:id="con-partitions-and-topics-str">
<title>Partitions and replicas</title>
<simpara>Messages in Kafka are always sent to or received from a topic.
A topic is always split into one or more partitions.
Partitions act as shards.
That means that every message sent by a producer is always written only into a single partition.
Thanks to the sharding of messages into different partitions, topics are easy to scale horizontally.</simpara>
<simpara>Each partition can have one or more replicas, which will be stored on different brokers in the cluster.
When creating a topic you can configure the number of replicas using the <emphasis>replication factor</emphasis>.
<emphasis>Replication factor</emphasis> defines the number of copies which will be held within the cluster.
One of the replicas for given partition will be elected as a leader.
The leader replica will be used by the producers to send new messages and by the consumers to consume messages.
The other replicas will be follower replicas.
The followers replicate the leader.</simpara>
<simpara>If the leader fails, one of the followers will automatically become the new leader.
Each server acts as a leader for some of its partitions and a follower for others so the load is well balanced within the cluster.</simpara>
<note>
<simpara>The replication factor determines the number of replicas including the leader and the followers.
For example, if you set the replication factor to <literal>3</literal>, then there will one leader and two follower replicas.</simpara>
</note>
</section>
<section xml:id="con-message-retention-str">
<title>Message retention</title>
<simpara>The message retention policy defines how long the messages will be stored on the Kafka brokers.
It can be defined based on time, partition size or both.</simpara>
<simpara>For example, you can define that the messages should be kept:</simpara>
<itemizedlist>
<listitem>
<simpara>For 7 days</simpara>
</listitem>
<listitem>
<simpara>Until the parition has 1GB of messages. Once the limit is reached, the oldest messages will be removed.</simpara>
</listitem>
<listitem>
<simpara>For 7 days or until the 1GB limit has been reached.
Whatever limit comes first will be used.</simpara>
</listitem>
</itemizedlist>
<warning>
<simpara>Kafka brokers store messages in log segments.
The messages which are past their retention policy will be deleted only when a new log segment is created.
New log segments are created when the previous log segment exceeds the configured log segment size.
Additionally, users can request new segments to be created periodically.</simpara>
</warning>
<simpara>Additionally, Kafka brokers support a compacting policy.</simpara>
<simpara>For a topic with the compacted policy, the broker will always keep only the last message for each key.
The older messages with the same key will be removed from the partition.
Because compacting is a periodically executed action, it does not happen immediately when the new message with the same key are sent to the partition.
Instead it might take some time until the older messages are removed.</simpara>
<simpara>For more information about the message retention configuration options, see <xref linkend="ref-topic-configuration-str"/>.</simpara>
</section>
<section xml:id="con-topic-autocreation-str">
<title>Topic auto-creation</title>
<simpara>When a producer or consumer tries to sent to or received from from a topic which does not exist, Kafka will, by default, automatically create that topic.
This behavior is controlled by the <literal>auto.create.topics.enable</literal> configuration property which is set to <literal>true</literal> by default.</simpara>
<simpara>To disable it, set <literal>auto.create.topics.enable</literal> to <literal>false</literal> in the Kafka broker configuration file:</simpara>
<screen>auto.create.topics.enable=false</screen>
</section>
<section xml:id="con-topic-deletion-str">
<title>Topic deletion</title>
<simpara>Kafka offers the possibility to disable deletion of topics.
This is configured through the <literal>delete.topic.enable</literal> property, which is set to <literal>true</literal> by default (that is, deleting topics is possible).
When this property is set to <literal>false</literal> it will be not possible to delete topics and all attempts to delete topic will return success but the topic will not be deleted.</simpara>
<screen>delete.topic.enable=false</screen>
</section>
<section xml:id="ref-topic-configuration-str">
<title>Topic configuration</title>
<simpara>Auto-created topics will use the default topic configuration which can be specified in the broker properties file.
However, when creating topics manually, their configuration can be specified at creation time.
It is also possible to change a topic’s configuration after it has been created.
The main topic configuration options for manually created topics are:</simpara>
<variablelist>
<varlistentry>
<term><literal>cleanup.policy</literal></term>
<listitem>
<simpara>Configures the retention policy to <literal>delete</literal> or <literal>compact</literal>.
The <literal>delete</literal> policy will delete old records.
The <literal>compact</literal> policy will enable log compaction.
The default value is <literal>delete</literal>.
For more information about log compaction, see <link xlink:href="http://kafka.apache.org/documentation/#compaction">Kafka website</link>.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>compression.type</literal></term>
<listitem>
<simpara>Specifies the compression which is used for stored messages.
Valid values are <literal>gzip</literal>, <literal>snappy</literal>, <literal>lz4</literal>, <literal>uncompressed</literal> (no compression) and <literal>producer</literal> (retain the compression codec used by the producer).
The default value is <literal>producer</literal>.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>max.message.bytes</literal></term>
<listitem>
<simpara>The maximum size of a batch of messages allowed by the Kafka broker, in bytes.
The default value is <literal>1000012</literal>.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>min.insync.replicas</literal></term>
<listitem>
<simpara>The minimum number of replicas which must be in sync for a write to be considered successful.
The default value is <literal>1</literal>.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>retention.ms</literal></term>
<listitem>
<simpara>Maximum number of milliseconds for which log segments will be retained.
Log segments older than this value will be deleted.
The default value is <literal>604800000</literal> (7 days).</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>retention.bytes</literal></term>
<listitem>
<simpara>The maximum number of bytes a partition will retain.
Once the partition size grows over this limit, the oldest log segments will be deleted.
Value of <literal>-1</literal> indicates no limit.
The default value is <literal>-1</literal>.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>segment.bytes</literal></term>
<listitem>
<simpara>The maximum file size of a single commit log segment file in bytes.
When the segment reaches its size, a new segment will be started.
The default value is <literal>1073741824</literal> bytes (1 gibibyte).</simpara>
</listitem>
</varlistentry>
</variablelist>
<simpara>For list of all supported topic configuration options, see <xref linkend="topic-configuration-parameters-str"/>.</simpara>
<simpara>The defaults for auto-created topics can be specified in the Kafka broker configuration using similar options:</simpara>
<variablelist>
<varlistentry>
<term><literal>log.cleanup.policy</literal></term>
<listitem>
<simpara>See <literal>cleanup.policy</literal> above.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>compression.type</literal></term>
<listitem>
<simpara>See <literal>compression.type</literal> above.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>message.max.bytes</literal></term>
<listitem>
<simpara>See <literal>max.message.bytes</literal> above.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>min.insync.replicas</literal></term>
<listitem>
<simpara>See <literal>min.insync.replicas</literal> above.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>log.retention.ms</literal></term>
<listitem>
<simpara>See <literal>retention.ms</literal> above.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>log.retention.bytes</literal></term>
<listitem>
<simpara>See <literal>retention.bytes</literal> above.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>log.segment.bytes</literal></term>
<listitem>
<simpara>See <literal>segment.bytes</literal> above.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>default.replication.factor</literal></term>
<listitem>
<simpara>Default replication factor for automatically created topics.
Default value is <literal>1</literal>.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>num.partitions</literal></term>
<listitem>
<simpara>Default number of partitions for automatically created topics.
Default value is <literal>1</literal>.</simpara>
</listitem>
</varlistentry>
</variablelist>
<simpara>For list of all supported Kafka broker configuration options, see <xref linkend="broker-configuration-parameters-str"/>.</simpara>
</section>
<section xml:id="con-internal-topics-str">
<title>Internal topics</title>
<simpara>Internal topics are created and used internally by the Kafka brokers and clients.
Kafka has several internal topics.
These are used to store consumer offsets (<literal>__consumer_offsets</literal>) or transaction state (<literal>__transaction_state</literal>).
These topics can be configured using dedicated Kafka broker configuration options starting with prefix <literal>offsets.topic.</literal> and <literal>transaction.state.log.</literal>.
The most important configuration options are:</simpara>
<variablelist>
<varlistentry>
<term><literal>offsets.topic.replication.factor</literal></term>
<listitem>
<simpara>Number of replicas for <literal>__consumer_offsets</literal> topic.
The default value is <literal>3</literal>.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>offsets.topic.num.partitions</literal></term>
<listitem>
<simpara>Number of partitions for <literal>__consumer_offsets</literal> topic.
The default value is <literal>50</literal>.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>transaction.state.log.replication.factor</literal></term>
<listitem>
<simpara>Number of replicas for <literal>__transaction_state</literal> topic.
The default value is <literal>3</literal>.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>transaction.state.log.num.partitions</literal></term>
<listitem>
<simpara>Number of partitions for <literal>__transaction_state</literal> topic.
The default value is <literal>50</literal>.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>transaction.state.log.min.isr</literal></term>
<listitem>
<simpara>Minimum number of replicas that must acknowledge a write to <literal>__transaction_state</literal> topic to be considered successful.
If this minimum cannot be met, then the producer will fail with an exception.
The default value is <literal>2</literal>.</simpara>
</listitem>
</varlistentry>
</variablelist>
</section>
<section xml:id="proc-creating-a-topic-str">
<title>Creating a topic</title>
<simpara>The <literal>kafka-topics.sh</literal> tool can be used to manage topics.
<literal>kafka-topics.sh</literal> is part of the AMQ Streams distribution and can be found in the <literal>bin</literal> directory.</simpara>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>AMQ Streams cluster is installed and running</simpara>
</listitem>
</itemizedlist>
<orderedlist numeration="arabic">
<title>Creating a topic</title>
<listitem>
<simpara>Create a topic using the <literal>kafka-topics.sh</literal> utility and specify the following:
ZooKeeper URL in the <literal>--zookeeper</literal> option.
The new topic to be created in the <literal>--create</literal> option.
Topic name in the <literal>--topic</literal> option.
The number of partitions in the <literal>--partitions</literal> option.
Replication factor in the <literal>--replication-factor</literal> option.</simpara>
<simpara>You can also override some of the default topic configuration options using the option <literal>--config</literal>.
This option can be used multiple times to override different options.</simpara>
<programlisting language="shell" linenumbering="unnumbered">bin/kafka-topics.sh --zookeeper <emphasis>&lt;ZooKeeperAddress&gt;</emphasis> --create --topic <emphasis>&lt;TopicName&gt;</emphasis> --partitions <emphasis>&lt;NumberOfPartitions&gt;</emphasis> --replication-factor <emphasis>&lt;ReplicationFactor&gt;</emphasis> --config <emphasis>&lt;Option1&gt;</emphasis>=<emphasis>&lt;Value1&gt;</emphasis> --config <emphasis>&lt;Option2&gt;</emphasis>=<emphasis>&lt;Value2&gt;</emphasis></programlisting>
<formalpara>
<title>Example of the command to create a topic named <literal>mytopic</literal></title>
<para>
<programlisting language="shell" linenumbering="unnumbered">bin/kafka-topics.sh --zookeeper zoo1.my-domain.com:2181 --create --topic mytopic --partitions 50 --replication-factor 3 --config cleanup.policy=compact --config min.insync.replicas=2</programlisting>
</para>
</formalpara>
</listitem>
<listitem>
<simpara>Verify that the topic exists using <literal>kafka-topics.sh</literal>.</simpara>
<programlisting language="shell" linenumbering="unnumbered">bin/kafka-topics.sh --zookeeper <emphasis>&lt;ZooKeeperAddress&gt;</emphasis> --describe --topic <emphasis>&lt;TopicName&gt;</emphasis></programlisting>
<formalpara>
<title>Example of the command to describe a topic named <literal>mytopic</literal></title>
<para>
<programlisting language="shell" linenumbering="unnumbered">bin/kafka-topics.sh --zookeeper zoo1.my-domain.com:2181 --describe --topic mytopic</programlisting>
</para>
</formalpara>
</listitem>
</orderedlist>
<itemizedlist>
<title>Additional resources</title>
<listitem>
<simpara>For more information about topic configuration, see <xref linkend="ref-topic-configuration-str"/>.</simpara>
</listitem>
<listitem>
<simpara>For list of all supported topic configuration options, see <xref linkend="topic-configuration-parameters-str"/>.</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="proc-describing-a-topic-str">
<title>Listing and describing topics</title>
<simpara>The <literal>kafka-topics.sh</literal> tool can be used to list and describe topics.
<literal>kafka-topics.sh</literal> is part of the AMQ Streams distribution and can be found in the <literal>bin</literal> directory.</simpara>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>AMQ Streams cluster is installed and running</simpara>
</listitem>
<listitem>
<simpara>Topic <literal>mytopic</literal> exists</simpara>
</listitem>
</itemizedlist>
<orderedlist numeration="arabic">
<title>Describing a topic</title>
<listitem>
<simpara>Describe a topic using the <literal>kafka-topics.sh</literal> utility.</simpara>
<itemizedlist>
<listitem>
<simpara>Specify the ZooKeeper URL in the <literal>--zookeeper</literal> option.</simpara>
</listitem>
<listitem>
<simpara>Use <literal>--describe</literal> option to specify that you want to describe a topic.</simpara>
</listitem>
<listitem>
<simpara>Topic name has to be specified in the <literal>--topic</literal> option.</simpara>
</listitem>
<listitem>
<simpara>When the <literal>--topic</literal> option is omitted, it will describe all available topics.</simpara>
<programlisting language="shell" linenumbering="unnumbered">bin/kafka-topics.sh --zookeeper  <emphasis>&lt;ZooKeeperAddress&gt;</emphasis> --describe --topic <emphasis>&lt;TopicName&gt;</emphasis></programlisting>
<formalpara>
<title>Example of the command to describe a topic named <literal>mytopic</literal></title>
<para>
<programlisting language="shell" linenumbering="unnumbered">bin/kafka-topics.sh --zookeeper zoo1.my-domain.com:2181 --describe --topic mytopic</programlisting>
</para>
</formalpara>
<simpara>The describe command will list all partitions and replicas which belong to this topic.
It will also list all topic configuration options.</simpara>
</listitem>
</itemizedlist>
</listitem>
</orderedlist>
<itemizedlist>
<title>Additional resources</title>
<listitem>
<simpara>For more information about topic configuration, see <xref linkend="ref-topic-configuration-str"/>.</simpara>
</listitem>
<listitem>
<simpara>For more information about creating topics, see <xref linkend="proc-creating-a-topic-str"/>.</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="proc-modifying-a-topic-str">
<title>Modifying a topic configuration</title>
<simpara>The <literal>kafka-configs.sh</literal> tool can be used to modify topic configurations.
<literal>kafka-configs.sh</literal> is part of the AMQ Streams distribution and can be found in the <literal>bin</literal> directory.</simpara>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>AMQ Streams cluster is installed and running</simpara>
</listitem>
<listitem>
<simpara>Topic <literal>mytopic</literal> exists</simpara>
</listitem>
</itemizedlist>
<orderedlist numeration="arabic">
<title>Modify topic configuration</title>
<listitem>
<simpara>Use the <literal>kafka-configs.sh</literal> tool to get the current configuration.</simpara>
<itemizedlist>
<listitem>
<simpara>Specify the ZooKeeper URL in the <literal>--zookeeper</literal> option.</simpara>
</listitem>
<listitem>
<simpara>Set the <literal>--entity-type</literal> as <literal>topic</literal> and <literal>--entity-name</literal> to the name of your topic.</simpara>
</listitem>
<listitem>
<simpara>Use <literal>--describe</literal> option to get the current configuration.</simpara>
<programlisting language="shell" linenumbering="unnumbered">bin/kafka-configs.sh --zookeeper <emphasis>&lt;ZooKeeperAddress&gt;</emphasis> --entity-type topics --entity-name <emphasis>&lt;TopicName&gt;</emphasis> --describe</programlisting>
<formalpara>
<title>Example of the command to get configuration of a topic named <literal>mytopic</literal></title>
<para>
<programlisting language="shell" linenumbering="unnumbered">bin/kafka-configs.sh --zookeeper zoo1.my-domain.com:2181 --entity-type topics --entity-name mytopic --describe</programlisting>
</para>
</formalpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>Use the <literal>kafka-configs.sh</literal> tool to change the configuration.</simpara>
<itemizedlist>
<listitem>
<simpara>Specify the ZooKeeper URL in the <literal>--zookeeper</literal> options.</simpara>
</listitem>
<listitem>
<simpara>Set the <literal>--entity-type</literal> as <literal>topic</literal> and <literal>--entity-name</literal> to the name of your topic.</simpara>
</listitem>
<listitem>
<simpara>Use <literal>--alter</literal> option to modify the current configuration.</simpara>
</listitem>
<listitem>
<simpara>Specify the options you want to add or change in the option <literal>--add-config</literal>.</simpara>
<programlisting language="shell" linenumbering="unnumbered">bin/kafka-configs.sh --zookeeper <emphasis>&lt;ZooKeeperAddress&gt;</emphasis> --entity-type topics --entity-name <emphasis>&lt;TopicName&gt;</emphasis> --alter --add-config <emphasis>&lt;Option&gt;</emphasis>=<emphasis>&lt;Value&gt;</emphasis></programlisting>
<formalpara>
<title>Example of the command to change configuration of a topic named <literal>mytopic</literal></title>
<para>
<programlisting language="shell" linenumbering="unnumbered">bin/kafka-configs.sh --zookeeper zoo1.my-domain.com:2181 --entity-type topics --entity-name mytopic --alter --add-config min.insync.replicas=1</programlisting>
</para>
</formalpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>Use the <literal>kafka-configs.sh</literal> tool to delete an existing configuration option.</simpara>
<itemizedlist>
<listitem>
<simpara>Specify the ZooKeeper URL in the <literal>--zookeeper</literal> options.</simpara>
</listitem>
<listitem>
<simpara>Set the <literal>--entity-type</literal> as <literal>topic</literal> and <literal>--entity-name</literal> to the name of your topic.</simpara>
</listitem>
<listitem>
<simpara>Use <literal>--delete-config</literal> option to remove existing configuration option.</simpara>
</listitem>
<listitem>
<simpara>Specify the options you want to remove in the option <literal>--remove-config</literal>.</simpara>
<programlisting language="shell" linenumbering="unnumbered">bin/kafka-configs.sh --zookeeper <emphasis>&lt;ZooKeeperAddress&gt;</emphasis> --entity-type topics --entity-name <emphasis>&lt;TopicName&gt;</emphasis> --alter --delete-config <emphasis>&lt;Option&gt;</emphasis></programlisting>
<formalpara>
<title>Example of the command to change configuration of a topic named <literal>mytopic</literal></title>
<para>
<programlisting language="shell" linenumbering="unnumbered">bin/kafka-configs.sh --zookeeper zoo1.my-domain.com:2181 --entity-type topics --entity-name mytopic --alter --delete-config min.insync.replicas</programlisting>
</para>
</formalpara>
</listitem>
</itemizedlist>
</listitem>
</orderedlist>
<itemizedlist>
<title>Additional resources</title>
<listitem>
<simpara>For more information about topic configuration, see <xref linkend="ref-topic-configuration-str"/>.</simpara>
</listitem>
<listitem>
<simpara>For more information about creating topics, see <xref linkend="proc-creating-a-topic-str"/>.</simpara>
</listitem>
<listitem>
<simpara>For list of all supported topic configuration options, see <xref linkend="topic-configuration-parameters-str"/>.</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="proc-deleting-a-topic-str">
<title>Deleting a topic</title>
<simpara>The <literal>kafka-topics.sh</literal> tool can be used to manage topics.
<literal>kafka-topics.sh</literal> is part of the AMQ Streams distribution and can be found in the <literal>bin</literal> directory.</simpara>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>AMQ Streams cluster is installed and running</simpara>
</listitem>
<listitem>
<simpara>Topic <literal>mytopic</literal> exists</simpara>
</listitem>
</itemizedlist>
<orderedlist numeration="arabic">
<title>Deleting a topic</title>
<listitem>
<simpara>Delete a topic using the <literal>kafka-topics.sh</literal> utility.</simpara>
<itemizedlist>
<listitem>
<simpara>Specify the ZooKeeper URL in the <literal>--zookeeper</literal> option.</simpara>
</listitem>
<listitem>
<simpara>Use <literal>--delete</literal> option to specify that an existing topic should be deleted.</simpara>
</listitem>
<listitem>
<simpara>Topic name has to be specified in the <literal>--topic</literal> option.</simpara>
<programlisting language="shell" linenumbering="unnumbered">bin/kafka-topics.sh --zookeeper  <emphasis>&lt;ZooKeeperAddress&gt;</emphasis> --delete --topic <emphasis>&lt;TopicName&gt;</emphasis></programlisting>
<formalpara>
<title>Example of the command to create a topic named <literal>mytopic</literal></title>
<para>
<programlisting language="shell" linenumbering="unnumbered">bin/kafka-topics.sh --zookeeper zoo1.my-domain.com:2181 --delete --topic mytopic</programlisting>
</para>
</formalpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>Verify that the topic was deleted using <literal>kafka-topics.sh</literal>.</simpara>
<programlisting language="shell" linenumbering="unnumbered">bin/kafka-topics.sh --zookeeper  <emphasis>&lt;ZooKeeperAddress&gt;</emphasis> --list</programlisting>
<formalpara>
<title>Example of the command to list all topics</title>
<para>
<programlisting language="shell" linenumbering="unnumbered">bin/kafka-topics.sh --zookeeper zoo1.my-domain.com:2181 --list</programlisting>
</para>
</formalpara>
</listitem>
</orderedlist>
<itemizedlist>
<title>Additional resources</title>
<listitem>
<simpara>For more information about creating topics, see <xref linkend="proc-creating-a-topic-str"/>.</simpara>
</listitem>
</itemizedlist>
</section>
</chapter>
<chapter xml:id="scaling_clusters" remap="_scaling_clusters">
<title>Scaling Clusters</title>
<section xml:id="con-scaling-kafka-clusters-str">
<title>Scaling Kafka clusters</title>
<section xml:id="adding_brokers_to_a_cluster" remap="_adding_brokers_to_a_cluster">
<title>Adding brokers to a cluster</title>
<simpara>The primary way of increasing throughput for a topic is to increase the number of partitions for that topic.
That works because the partitions allow the load for that topic to be shared between the brokers in the cluster.
When the brokers are all constrained by some resource (typically I/O), then using more partitions will not yield an increase in throughput.
Instead, you must add brokers to the cluster.</simpara>
<simpara>When you add an extra broker to the cluster, AMQ Streams does not assign any partitions to it automatically.
You have to decide which partitions to move from the existing brokers to the new broker.</simpara>
<simpara>Once the partitions have been redistributed between all brokers, each broker should have a lower resource utilization.</simpara>
</section>
<section xml:id="removing_brokers_from_the_cluster" remap="_removing_brokers_from_the_cluster">
<title>Removing brokers from the cluster</title>
<simpara>Before you remove a broker from a cluster, you must ensure that it is not assigned to any partitions.
You should decide which remaining brokers will be responsible for each of the partitions on the broker being decommissioned.
Once the broker has no assigned partitions, you can stop it.</simpara>
</section>
</section>
<section xml:id="con-reassignment-of-partitions-str">
<title>Reassignment of partitions</title>
<simpara>The <literal>kafka-reassign-partitions.sh</literal> utility is used to reassign partitions to different brokers.</simpara>
<simpara>It has three different modes:</simpara>
<variablelist>
<varlistentry>
<term><literal>--generate</literal></term>
<listitem>
<simpara>Takes a set of topics and brokers and generates a <emphasis>reassignment JSON file</emphasis> which will result in the partitions of those topics being assigned to those brokers.
It is an easy way to generate a <emphasis>reassignment JSON file</emphasis>, but it operates on whole topics, so its use is not always appropriate.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>--execute</literal></term>
<listitem>
<simpara>Takes a <emphasis>reassignment JSON file</emphasis> and applies it to the partitions and brokers in the cluster.
Brokers which are gaining partitions will become followers of the partition leader.
For a given partition, once the new broker has caught up and joined the ISR the old broker will stop being a follower and will delete its replica.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>--verify</literal></term>
<listitem>
<simpara>Using the same <emphasis>reassignment JSON file</emphasis> as the <literal>--execute</literal> step, <literal>--verify</literal> checks whether all of the partitions in the file have been moved to their intended brokers.
If the reassignment is complete it will also remove any <link linkend="con-reassignment-throttles-str">throttles</link> which are in effect.
Unless removed, throttles will continue to affect the cluster even after the reassignment has finished.</simpara>
</listitem>
</varlistentry>
</variablelist>
<simpara>It is only possible to have one reassignment running in the cluster at any given time, and it is not possible to cancel a running reassignment.
If you need to cancel a reassignment you have to wait for it to complete and then perform another reassignment to revert the effects of the first one.
The <literal>kafka-reassign-partitions.sh</literal> will print the reassignment JSON for this reversion as part of its output.
Very large reassignments should be broken down into a number of smaller reassignments in case there is a need to stop in-progress reassignment.</simpara>
<section xml:id="reassignment_json_file" remap="_reassignment_json_file">
<title>Reassignment JSON file</title>
<simpara>The <emphasis>reassignment JSON file</emphasis> has a specific structure:</simpara>
<screen>{
  "version": 1,
  "partitions": [
    <emphasis>&lt;PartitionObjects&gt;</emphasis>
  ]
}</screen>
<simpara>Where <emphasis>&lt;PartitionObjects&gt;</emphasis> is a comma-separated list of objects like:</simpara>
<screen>{
  "topic": <emphasis>&lt;TopicName&gt;</emphasis>,
  "partition": <emphasis>&lt;Partition&gt;</emphasis>,
  "replicas": [ <emphasis>&lt;AssignedBrokerIds&gt;</emphasis> ],
  "log_dirs": [<emphasis>&lt;LogDirs&gt;</emphasis>]
}</screen>
<simpara>The <literal>"log_dirs"</literal> property is optional and is used to move the partition to a specific log directory.</simpara>
<simpara>The following is an example reassignment JSON file that assigns topic <literal>topic-a</literal>, partition <literal>4</literal> to brokers <literal>2</literal>, <literal>4</literal> and <literal>7</literal>, and topic <literal>topic-b</literal> partition <literal>2</literal> to brokers <literal>1</literal>, <literal>5</literal> and <literal>7</literal>:</simpara>
<programlisting language="json" linenumbering="unnumbered">{
  "version": 1,
  "partitions": [
    {
      "topic": "topic-a",
      "partition": 4,
      "replicas": [2,4,7]
    },
    {
      "topic": "topic-b",
      "partition": 2,
      "replicas": [1,5,7]
    }
  ]
}</programlisting>
<simpara>Partitions not included in the JSON are not changed.</simpara>
</section>
<section xml:id="generating_reassignment_json_files" remap="_generating_reassignment_json_files">
<title>Generating reassignment JSON files</title>
<simpara>The easiest way to assign all the partitions for a given set of topics to a given set of brokers is to generate a reassignment JSON file using the <literal>kafka-reassign-partitions.sh --generate</literal>, command.</simpara>
<programlisting language="shell" linenumbering="unnumbered">bin/kafka-reassign-partitions.sh --zookeeper <emphasis>&lt;ZooKeeper&gt;</emphasis> --topics-to-move-json-file <emphasis>&lt;TopicsFile&gt;</emphasis> --broker-list <emphasis>&lt;BrokerList&gt;</emphasis> --generate</programlisting>
<simpara>The <literal><emphasis>&lt;TopicsFile&gt;</emphasis></literal> is a JSON file which lists the topics to move.
It has the following structure:</simpara>
<screen>{
  "version": 1,
  "topics": [
    <emphasis>&lt;TopicObjects&gt;</emphasis>
  ]
}</screen>
<simpara>where <emphasis>&lt;TopicObjects&gt;</emphasis> is a comma-separated list of objects like:</simpara>
<screen>{
  "topic": <emphasis>&lt;TopicName&gt;</emphasis>
}</screen>
<simpara>For example to move all the partitions of <literal>topic-a</literal> and <literal>topic-b</literal> to brokers <literal>4</literal> and <literal>7</literal></simpara>
<programlisting language="shell" linenumbering="unnumbered">bin/kafka-reassign-partitions.sh --zookeeper localhost:2181 --topics-to-move-json-file topics-to-be-moved.json --broker-list 4,7 --generate</programlisting>
<simpara>where <literal>topics-to-be-moved.json</literal> has contents:</simpara>
<programlisting language="json" linenumbering="unnumbered">{
  "version": 1,
  "topics": [
    { "topic": "topic-a"},
    { "topic": "topic-b"}
  ]
}</programlisting>
</section>
<section xml:id="creating_reassignment_json_files_manually" remap="_creating_reassignment_json_files_manually">
<title>Creating reassignment JSON files manually</title>
<simpara>You can manually create the reassignment JSON file if you want to move specific partitions.</simpara>
</section>
</section>
<section xml:id="con-reassignment-throttles-str">
<title>Reassignment throttles</title>
<simpara>Reassigning partitions can be a slow process because it can require moving lots of data between brokers.
To avoid this having a detrimental impact on clients it is possible to <emphasis>throttle</emphasis> the reassignment.
Using a throttle can mean the reassignment takes longer.
If the throttle is too low then the newly assigned brokers will not be able to keep up with records being published and the reassignment will never complete.
If the throttle is too high then clients will be impacted.
For example, for producers, this could manifest as higher than normal latency waiting for acknowledgement. For consumers, this could manifest as a drop in throughput caused by higher latency between polls.</simpara>
</section>
<section xml:id="proc-scaling-up-a-kafka-cluster-str">
<title>Scaling up a Kafka cluster</title>
<simpara>This procedure describes how to increase the number of brokers in a Kafka cluster.</simpara>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>An existing Kafka cluster.</simpara>
</listitem>
<listitem>
<simpara>A new machine with the AMQ broker  <link linkend="proc-installing-amq-streams-str">installed</link>.</simpara>
</listitem>
<listitem>
<simpara>A <emphasis>reassignment JSON file</emphasis> of how partitions should be reassigned to brokers in the enlarged cluster.</simpara>
</listitem>
</itemizedlist>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>Create a configuration file for the new broker using the same settings as for the other brokers in your cluster, except for <literal>broker.id</literal> which should be a number that is not already used by any of the other brokers.</simpara>
</listitem>
<listitem>
<simpara>Start the new Kafka broker passing the configuration file you created in the previous step as the argument to the <literal>kafka-server-start.sh</literal> script:</simpara>
<programlisting language="shell" linenumbering="unnumbered">su - kafka
/opt/kafka/bin/kafka-server-start.sh -daemon /opt/kafka/config/server.properties</programlisting>
</listitem>
<listitem>
<simpara>Verify that the Kafka broker is running.</simpara>
<programlisting language="shell" linenumbering="unnumbered">jcmd | grep Kafka</programlisting>
</listitem>
<listitem>
<simpara>Repeat the above steps for each new broker.</simpara>
</listitem>
<listitem>
<simpara>Execute the partition reassignment using the <literal>kafka-reassign-partitions.sh</literal> command line tool.</simpara>
<programlisting language="shell" linenumbering="unnumbered">kafka-reassign-partitions.sh --zookeeper <emphasis>&lt;ZooKeeperHostAndPort&gt;</emphasis> --reassignment-json-file <emphasis>&lt;ReassignmentJsonFile&gt;</emphasis> --execute</programlisting>
<simpara>If you are going to throttle replication you can also pass the <literal>--throttle</literal> option with an inter-broker throttled rate in bytes per second. For example:</simpara>
<programlisting language="shell" linenumbering="unnumbered">kafka-reassign-partitions.sh --zookeeper zookeeper1:2181 --reassignment-json-file reassignment.json --throttle 5000000 --execute</programlisting>
<simpara>This command will print out two reassignment JSON objects.
The first records the current assignment for the partitions being moved.
You should save this to a file in case you need to revert the reassignment later on.
The second JSON object is the target reassignment you have passed in your reassignment JSON file.</simpara>
</listitem>
<listitem>
<simpara>If you need to change the throttle during reassignment you can use the same command line with a different throttled rate. For example:</simpara>
<programlisting language="shell" linenumbering="unnumbered">kafka-reassign-partitions.sh --zookeeper zookeeper1:2181 --reassignment-json-file reassignment.json --throttle 10000000 --execute</programlisting>
</listitem>
<listitem>
<simpara>Periodically verify whether the reassignment has completed using the <literal>kafka-reassign-partitions.sh</literal> command line tool. This is the same command as the previous step but with the <literal>--verify</literal> option instead of the <literal>--execute</literal> option.</simpara>
<programlisting language="shell" linenumbering="unnumbered">kafka-reassign-partitions.sh --zookeeper <emphasis>&lt;ZooKeeperHostAndPort&gt;</emphasis> --reassignment-json-file <emphasis>&lt;ReassignmentJsonFile&gt;</emphasis> --verify</programlisting>
<simpara>For example:</simpara>
<programlisting language="shell" linenumbering="unnumbered">kafka-reassign-partitions.sh --zookeeper zookeeper1:2181 --reassignment-json-file reassignment.json --verify</programlisting>
</listitem>
<listitem>
<simpara>The reassignment has finished when the <literal>--verify</literal> command reports each of  the partitions being moved as completed successfully.
This final <literal>--verify</literal> will also have the effect of removing any reassignment throttles.
You can now delete the revert file if you saved the JSON for reverting the assignment to their original brokers.</simpara>
</listitem>
</orderedlist>
</section>
<section xml:id="proc-scaling-down-a-kafka-cluster-str">
<title>Scaling down a Kafka cluster</title>
<formalpara>
<title>Additional resources</title>
<para>This procedure describes how to decrease the number of brokers in a Kafka cluster.</para>
</formalpara>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>An existing Kafka cluster.</simpara>
</listitem>
<listitem>
<simpara>A <emphasis>reassignment JSON file</emphasis> of how partitions should be reassigned to brokers in the cluster once the broker(s) have been removed.</simpara>
</listitem>
</itemizedlist>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>Execute the partition reassignment using the <literal>kafka-reassign-partitions.sh</literal> command line tool.</simpara>
<programlisting language="shell" linenumbering="unnumbered">kafka-reassign-partitions.sh --zookeeper <emphasis>&lt;ZooKeeperHostAndPort&gt;</emphasis> --reassignment-json-file <emphasis>&lt;ReassignmentJsonFile&gt;</emphasis> --execute</programlisting>
<simpara>If you are going to throttle replication you can also pass the <literal>--throttle</literal> option with an inter-broker throttled rate in bytes per second. For example:</simpara>
<programlisting language="shell" linenumbering="unnumbered">kafka-reassign-partitions.sh --zookeeper zookeeper1:2181 --reassignment-json-file reassignment.json --throttle 5000000 --execute</programlisting>
<simpara>This command will print out two reassignment JSON objects.
The first records the current assignment for the partitions being moved.
You should save this to a file in case you need to revert the reassignment later on.
The second JSON object is the target reassignment you have passed in your reassignment JSON file.</simpara>
</listitem>
<listitem>
<simpara>If you need to change the throttle during reassignment you can use the same command line with a different throttled rate. For example:</simpara>
<programlisting language="shell" linenumbering="unnumbered">kafka-reassign-partitions.sh --zookeeper zookeeper1:2181 --reassignment-json-file reassignment.json --throttle 10000000 --execute</programlisting>
</listitem>
<listitem>
<simpara>Periodically verify whether the reassignment has completed using the <literal>kafka-reassign-partitions.sh</literal> command line tool. This is the same command as the previous step but with the <literal>--verify</literal> option instead of the <literal>--execute</literal> option.</simpara>
<programlisting language="shell" linenumbering="unnumbered">kafka-reassign-partitions.sh --zookeeper <emphasis>&lt;ZooKeeperHostAndPort&gt;</emphasis> --reassignment-json-file <emphasis>&lt;ReassignmentJsonFile&gt;</emphasis> --verify</programlisting>
<simpara>For example:</simpara>
<programlisting language="shell" linenumbering="unnumbered">kafka-reassign-partitions.sh --zookeeper zookeeper1:2181 --reassignment-json-file reassignment.json --verify</programlisting>
</listitem>
<listitem>
<simpara>The reassignment has finished when the <literal>--verify</literal> command reports each of  the partitions being moved as completed successfully.
This final <literal>--verify</literal> will also have the effect of removing any reassignment throttles.
You can now delete the revert file if you saved the JSON for reverting the assignment to their original brokers.</simpara>
</listitem>
<listitem>
<simpara>Once all the partition reassignments have finished, the broker being removed should not have responsibility for any of the partitions in the cluster.
You can verify this by checking each of the directories given in the broker’s <literal>log.dirs</literal> configuration parameters.
If any of the log directories on the broker contains a directory that does not match the extended regular expression <literal><phrase role="a-zA-Z0-9.-">\.[a-z0-9]</phrase>-delete$</literal> then the broker still has live partitions and it should not be stopped.</simpara>
<simpara>You can check this by executing the command:</simpara>
<programlisting language="shell" linenumbering="unnumbered">ls -l <emphasis>&lt;LogDir&gt;</emphasis> | grep -E '^d' | grep -vE '[a-zA-Z0-9.-]+\.[a-z0-9]+-delete$'</programlisting>
<simpara>If the above command prints any output then the broker still has live partitions.
In this case, either the reassignment has not finished, or the reassignment JSON file was incorrect.</simpara>
</listitem>
<listitem>
<simpara>Once you have confirmed that the broker has no live partitions you can stop it.</simpara>
<programlisting language="shell" linenumbering="unnumbered">su - kafka
/opt/kafka/bin/kafka-server-stop.sh</programlisting>
</listitem>
<listitem>
<simpara>Confirm that the Kafka broker is stopped.</simpara>
<programlisting language="shell" linenumbering="unnumbered">jcmd | grep kafka</programlisting>
</listitem>
</orderedlist>
</section>
</chapter>
<chapter xml:id="monitoring-str">
<title>Monitoring your cluster using JMX</title>
<simpara>ZooKeeper, the Kafka broker, Kafka Connect, and the Kafka clients all expose management information using <link xlink:href="https://www.oracle.com/technetwork/articles/java/javamanagement-140525.html">Java Management Extensions</link> (JMX). Most management information is in the form of metrics that are useful for monitoring the condition and performance of your Kafka cluster. Like other Java applications, Kafka provides this management information through managed beans or MBeans.</simpara>
<simpara>JMX works at the level of the JVM (Java Virtual Machine). To obtain management information, external tools can connect to the JVM that is running ZooKeeper, the Kafka broker, and so on. By default, only tools on the same machine and running as the same user as the JVM are able to connect.</simpara>
<note>
<simpara>Management information for ZooKeeper is not documented here. You can view ZooKeeper metrics in JConsole. For more information, see <link linkend="con-monitoring-using-jconsole-str">Monitoring using JConsole</link>.</simpara>
</note>
<section xml:id="con-jmx-configuration-options-str">
<title>JMX configuration options</title>
<simpara>You configure JMX using JVM system properties.
The scripts provided with AMQ Streams (<literal>bin/kafka-server-start.sh</literal> and <literal>bin/connect-distributed.sh</literal>, and so on) use the <literal>KAFKA_JMX_OPTS</literal> environment variable to set these system properties.
The system properties for configuring JMX are the same, even though Kafka producer, consumer, and streams applications typically start the JVM in different ways.</simpara>
</section>
<section xml:id="proc-disabling-jmx-agent-str">
<title>Disabling the JMX agent</title>
<simpara>You can prevent local JMX tools from connecting to the JVM (for example, for compliance reasons) by disabling the JMX agent for an AMQ Streams component. The following procedure explains how to disable the JMX agent for a Kafka broker.</simpara>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>Use the <literal>KAFKA_JMX_OPTS</literal> environment variable to set <literal>com.sun.management.jmxremote</literal> to <literal>false</literal>.</simpara>
<programlisting language="shell" linenumbering="unnumbered">export KAFKA_JMX_OPTS=-Dcom.sun.management.jmxremote=false
bin/kafka-server-start.sh</programlisting>
</listitem>
<listitem>
<simpara>Start the JVM.</simpara>
</listitem>
</orderedlist>
</section>
<section xml:id="proc-connecting-to-jvm-from-different-machine-str">
<title>Connecting to the JVM from a different machine</title>
<simpara>You can connect to the JVM from a different machine by configuring the port that the JMX agent listens on. This is insecure because it allows JMX tools to connect from anywhere, with no authentication.</simpara>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>Use the <literal>KAFKA_JMX_OPTS</literal> environment variable to set <literal>-Dcom.sun.management.jmxremote.port=<emphasis>&lt;port&gt;</emphasis></literal>. For <literal><emphasis>&lt;port&gt;</emphasis></literal>, enter the name of the port on which you want the Kafka broker to listen for JMX connections.</simpara>
<programlisting language="shell" linenumbering="unnumbered">export KAFKA_JMX_OPTS="-Dcom.sun.management.jmxremote=true
  -Dcom.sun.management.jmxremote.port=<emphasis>&lt;port&gt;</emphasis>
  -Dcom.sun.management.jmxremote.authenticate=false
  -Dcom.sun.management.jmxremote.ssl=false"
bin/kafka-server-start.sh</programlisting>
</listitem>
<listitem>
<simpara>Start the JVM.</simpara>
</listitem>
</orderedlist>
<important>
<simpara>It is recommended that you configure authentication and SSL to ensure that the remote JMX connection is secure.
For more information about the system properties needed to do this, see the <link xlink:href="https://docs.oracle.com/javase/6/docs/technotes/guides/management/agent.html">JMX documentation</link>.</simpara>
</important>
</section>
<section xml:id="con-monitoring-using-jconsole-str">
<title>Monitoring using JConsole</title>
<simpara>The JConsole tool is distributed with the Java Development Kit (JDK). You can use JConsole to connect to a local or remote JVM and discover and display management information from Java applications.
If using JConsole to connect to a local JVM, the names of the JVM processes corresponding to the different components of AMQ Streams are as follows:</simpara>
<informaltable frame="all" rowsep="1" colsep="1">
<tgroup cols="2">
<colspec colname="col_1" colwidth="50*"/>
<colspec colname="col_2" colwidth="50*"/>
<thead>
<row>
<entry align="left" valign="top">AMQ Streams component</entry>
<entry align="left" valign="top">JVM process</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left" valign="top"><simpara>ZooKeeper</simpara></entry>
<entry align="left" valign="top"><simpara><literal>org.apache.zookeeper.server.quorum.QuorumPeerMain</literal></simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>Kafka broker</simpara></entry>
<entry align="left" valign="top"><simpara><literal>kafka.Kafka</literal></simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>Kafka Connect standalone</simpara></entry>
<entry align="left" valign="top"><simpara><literal>org.apache.kafka.connect.cli.ConnectStandalone</literal></simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>Kafka Connect distributed</simpara></entry>
<entry align="left" valign="top"><simpara><literal>org.apache.kafka.connect.cli.ConnectDistributed</literal></simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>A Kafka producer, consumer, or Streams application</simpara></entry>
<entry align="left" valign="top"><simpara>The name of the class containing the <literal>main</literal> method for the application.</simpara></entry>
</row>
</tbody>
</tgroup>
</informaltable>
<simpara>When using JConsole to connect to a remote JVM, use the appropriate host name and JMX port.</simpara>
<simpara>Many other tools and monitoring products can be used to fetch the metrics using JMX and provide monitoring and alerting based on those metrics.
Refer to the product documentation for those tools.</simpara>
</section>
<section xml:id="con-important-broker-metrics-str">
<title>Important Kafka broker metrics</title>
<simpara>Kafka provides many MBeans for monitoring the performance of the brokers in your Kafka cluster. These apply to an individual broker rather than the entire cluster.</simpara>
<simpara>The following tables present a selection of these broker-level MBeans organized into server, network, logging, and controller metrics.</simpara>
<section xml:id="kafka_server_metrics" remap="_kafka_server_metrics">
<title>Kafka server metrics</title>
<simpara>The following table shows a selection of metrics that report information about the Kafka server.</simpara>
<informaltable frame="all" rowsep="1" colsep="1">
<tgroup cols="4">
<colspec colname="col_1" colwidth="25*"/>
<colspec colname="col_2" colwidth="25*"/>
<colspec colname="col_3" colwidth="25*"/>
<colspec colname="col_4" colwidth="25*"/>
<thead>
<row>
<entry align="left" valign="top">Metric</entry>
<entry align="left" valign="top">MBean</entry>
<entry align="left" valign="top">Description</entry>
<entry align="left" valign="top">Expected value</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left" valign="top"><simpara>Messages in per second</simpara></entry>
<entry align="left" valign="top"><simpara><literal>kafka.server:type=BrokerTopicMetrics,name=MessagesInPerSec</literal></simpara></entry>
<entry align="left" valign="top"><simpara>The rate at which individual messages are consumed by the broker.</simpara></entry>
<entry align="left" valign="top"><simpara>Approximately the same as the other brokers in the cluster.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>Bytes in per second</simpara></entry>
<entry align="left" valign="top"><simpara><literal>kafka.server:type=BrokerTopicMetrics,name=BytesInPerSec</literal></simpara></entry>
<entry align="left" valign="top"><simpara>The rate at which data sent from producers is consumed by the broker.</simpara></entry>
<entry align="left" valign="top"><simpara>Approximately the same as the other brokers in the cluster.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>Replication bytes in per second</simpara></entry>
<entry align="left" valign="top"><simpara><literal>kafka.server:type=BrokerTopicMetrics,name=ReplicationBytesInPerSec</literal></simpara></entry>
<entry align="left" valign="top"><simpara>The rate at which data sent from other brokers is consumed by the follower broker.</simpara></entry>
<entry align="left" valign="top"><simpara>N/A</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>Bytes out per second</simpara></entry>
<entry align="left" valign="top"><simpara><literal>kafka.server:type=BrokerTopicMetrics,name=BytesOutPerSec</literal></simpara></entry>
<entry align="left" valign="top"><simpara>The rate at which data is fetched and read from the broker by consumers.</simpara></entry>
<entry align="left" valign="top"><simpara>N/A</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>Replication bytes out per second</simpara></entry>
<entry align="left" valign="top"><simpara><literal>kafka.server:type=BrokerTopicMetrics,name=ReplicationBytesOutPerSec</literal></simpara></entry>
<entry align="left" valign="top"><simpara>The rate at which data is sent from the broker to other brokers. This metric is useful to monitor if the broker is a leader for a group of partitions.</simpara></entry>
<entry align="left" valign="top"><simpara>N/A</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>Under-replicated partitions</simpara></entry>
<entry align="left" valign="top"><simpara><literal>kafka.server:type=ReplicaManager,name=UnderReplicatedPartitions</literal></simpara></entry>
<entry align="left" valign="top"><simpara>The number of partitions that have not been fully replicated in the follower replicas.</simpara></entry>
<entry align="left" valign="top"><simpara>Zero</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>Under minimum ISR partition count</simpara></entry>
<entry align="left" valign="top"><simpara><literal>kafka.server:type=ReplicaManager,name=UnderMinIsrPartitionCount</literal></simpara></entry>
<entry align="left" valign="top"><simpara>The number of partitions under the minimum In-Sync Replica (ISR) count. The ISR count indicates the set of replicas that are up-to-date with the leader.</simpara></entry>
<entry align="left" valign="top"><simpara>Zero</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>Partition count</simpara></entry>
<entry align="left" valign="top"><simpara><literal>kafka.server:type=ReplicaManager,name=PartitionCount</literal></simpara></entry>
<entry align="left" valign="top"><simpara>The number of partitions in the broker.</simpara></entry>
<entry align="left" valign="top"><simpara>Approximately even when compared with the other brokers.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>Leader count</simpara></entry>
<entry align="left" valign="top"><simpara><literal>kafka.server:type=ReplicaManager,name=LeaderCount</literal></simpara></entry>
<entry align="left" valign="top"><simpara>The number of replicas for which this broker is the leader.</simpara></entry>
<entry align="left" valign="top"><simpara>Approximately the same as the other brokers in the cluster.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>ISR shrinks per second</simpara></entry>
<entry align="left" valign="top"><simpara><literal>kafka.server:type=ReplicaManager,name=IsrShrinksPerSec</literal></simpara></entry>
<entry align="left" valign="top"><simpara>The rate at which the number of ISRs in the broker decreases</simpara></entry>
<entry align="left" valign="top"><simpara>Zero</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>ISR expands per second</simpara></entry>
<entry align="left" valign="top"><simpara><literal>kafka.server:type=ReplicaManager,name=IsrExpandsPerSec</literal></simpara></entry>
<entry align="left" valign="top"><simpara>The rate at which the number of ISRs in the broker increases.</simpara></entry>
<entry align="left" valign="top"><simpara>Zero</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>Maximum lag</simpara></entry>
<entry align="left" valign="top"><simpara><literal>kafka.server:type=ReplicaFetcherManager,name=MaxLag,clientId=Replica</literal></simpara></entry>
<entry align="left" valign="top"><simpara>The maximum lag between the time that messages are received by the leader replica and by the follower replicas.</simpara></entry>
<entry align="left" valign="top"><simpara>Proportional to the maximum batch size of a produce request.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>Requests in producer purgatory</simpara></entry>
<entry align="left" valign="top"><simpara><literal>kafka.server:type=DelayedOperationPurgatory,name=PurgatorySize,delayedOperation=Produce</literal></simpara></entry>
<entry align="left" valign="top"><simpara>The number of send requests in the producer purgatory.</simpara></entry>
<entry align="left" valign="top"><simpara>N/A</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>Requests in fetch purgatory</simpara></entry>
<entry align="left" valign="top"><simpara><literal>kafka.server:type=DelayedOperationPurgatory,name=PurgatorySize,delayedOperation=Fetch</literal></simpara></entry>
<entry align="left" valign="top"><simpara>The number of fetch requests in the fetch purgatory.</simpara></entry>
<entry align="left" valign="top"><simpara>N/A</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>Request handler average idle percent</simpara></entry>
<entry align="left" valign="top"><simpara><literal>kafka.server:type=KafkaRequestHandlerPool,name=RequestHandlerAvgIdlePercent</literal></simpara></entry>
<entry align="left" valign="top"><simpara>Indicates the percentage of time that the request handler (IO) threads are not in use.</simpara></entry>
<entry align="left" valign="top"><simpara>A lower value indicates that the workload of the broker is high.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>Request (Requests exempt from throttling)</simpara></entry>
<entry align="left" valign="top"><simpara><literal>kafka.server:type=Request</literal></simpara></entry>
<entry align="left" valign="top"><simpara>The number of requests that are exempt from throttling.</simpara></entry>
<entry align="left" valign="top"><simpara>N/A</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>ZooKeeper request latency in milliseconds</simpara></entry>
<entry align="left" valign="top"><simpara><literal>kafka.server:type=ZooKeeperClientMetrics,name=ZooKeeperRequestLatencyMs</literal></simpara></entry>
<entry align="left" valign="top"><simpara>The latency for ZooKeeper requests from the broker, in milliseconds.</simpara></entry>
<entry align="left" valign="top"><simpara>N/A</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>ZooKeeper session state</simpara></entry>
<entry align="left" valign="top"><simpara><literal>kafka.server:type=SessionExpireListener,name=SessionState</literal></simpara></entry>
<entry align="left" valign="top"><simpara>The status of the broker’s connection to ZooKeeper.</simpara></entry>
<entry align="left" valign="top"><simpara>CONNECTED</simpara></entry>
</row>
</tbody>
</tgroup>
</informaltable>
</section>
<section xml:id="kafka_network_metrics" remap="_kafka_network_metrics">
<title>Kafka network metrics</title>
<simpara>The following table shows a selection of metrics that report information about requests.</simpara>
<informaltable frame="all" rowsep="1" colsep="1">
<tgroup cols="4">
<colspec colname="col_1" colwidth="25*"/>
<colspec colname="col_2" colwidth="25*"/>
<colspec colname="col_3" colwidth="25*"/>
<colspec colname="col_4" colwidth="25*"/>
<thead>
<row>
<entry align="left" valign="top">Metric</entry>
<entry align="left" valign="top">MBean</entry>
<entry align="left" valign="top">Description</entry>
<entry align="left" valign="top">Expected value</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left" valign="top"><simpara>Requests per second</simpara></entry>
<entry align="left" valign="top"><simpara><literal>kafka.network:type=RequestMetrics,name=RequestsPerSec,request={Produce|FetchConsumer|FetchFollower}</literal></simpara></entry>
<entry align="left" valign="top"><simpara>The total number of requests made for the request type per second. The <literal>Produce</literal>, <literal>FetchConsumer</literal>, and <literal>FetchFollower</literal> request types each have their own MBeans.</simpara></entry>
<entry align="left" valign="top"><simpara>N/A</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>Request bytes (request size in bytes)</simpara></entry>
<entry align="left" valign="top"><simpara><literal>kafka.network:type=RequestMetrics,name=RequestBytes,request=([-.\w]+)</literal></simpara></entry>
<entry align="left" valign="top"><simpara>The size of requests, in bytes, made for the request type identified by the <literal>request</literal> property of the MBean name. Separate MBeans for all available request types are listed under the <literal>RequestBytes</literal> node.</simpara></entry>
<entry align="left" valign="top"><simpara>N/A</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>Temporary memory size in bytes</simpara></entry>
<entry align="left" valign="top"><simpara><literal>kafka.network:type=RequestMetrics,name=TemporaryMemoryBytes,request={Produce|Fetch}</literal></simpara></entry>
<entry align="left" valign="top"><simpara>The amount of temporary memory used for converting message formats and decompressing messages.</simpara></entry>
<entry align="left" valign="top"><simpara>N/A</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>Message conversions time</simpara></entry>
<entry align="left" valign="top"><simpara><literal>kafka.network:type=RequestMetrics,name=MessageConversionsTimeMs,request={Produce|Fetch}</literal></simpara></entry>
<entry align="left" valign="top"><simpara>Time, in milliseconds, spent on converting message formats.</simpara></entry>
<entry align="left" valign="top"><simpara>N/A</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>Total request time in milliseconds</simpara></entry>
<entry align="left" valign="top"><simpara><literal>kafka.network:type=RequestMetrics,name=TotalTimeMs,request={Produce|FetchConsumer|FetchFollower}</literal></simpara></entry>
<entry align="left" valign="top"><simpara>Total time, in milliseconds, spent processing requests.</simpara></entry>
<entry align="left" valign="top"><simpara>N/A</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>Request queue time in milliseconds</simpara></entry>
<entry align="left" valign="top"><simpara><literal>kafka.network:type=RequestMetrics,name=RequestQueueTimeMs,request={Produce|FetchConsumer|FetchFollower}</literal></simpara></entry>
<entry align="left" valign="top"><simpara>The time, in milliseconds, that a request currently spends in the queue for the request type given in the <literal>request</literal> property.</simpara></entry>
<entry align="left" valign="top"><simpara>N/A</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>Local time (leader local processing time) in milliseconds</simpara></entry>
<entry align="left" valign="top"><simpara><literal>kafka.network:type=RequestMetrics,name=LocalTimeMs,request={Produce|FetchConsumer|FetchFollower}</literal></simpara></entry>
<entry align="left" valign="top"><simpara>The time taken, in milliseconds, for the leader to process the request.</simpara></entry>
<entry align="left" valign="top"><simpara>N/A</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>Remote time (leader remote processing time) in milliseconds</simpara></entry>
<entry align="left" valign="top"><simpara><literal>kafka.network:type=RequestMetrics,name=RemoteTimeMs,request={Produce|FetchConsumer|FetchFollower}</literal></simpara></entry>
<entry align="left" valign="top"><simpara>The length of time, in milliseconds, that the request waits for the follower. Separate MBeans for all available request types are listed under the <literal>RemoteTimeMs</literal> node.</simpara></entry>
<entry align="left" valign="top"><simpara>N/A</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>Response queue time in milliseconds</simpara></entry>
<entry align="left" valign="top"><simpara><literal>kafka.network:type=RequestMetrics,name=ResponseQueueTimeMs,request={Produce|FetchConsumer|FetchFollower}</literal></simpara></entry>
<entry align="left" valign="top"><simpara>The length of time, in milliseconds, that the request waits in the response queue.</simpara></entry>
<entry align="left" valign="top"><simpara>N/A</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>Response send time in milliseconds</simpara></entry>
<entry align="left" valign="top"><simpara><literal>kafka.network:type=RequestMetrics,name=ResponseSendTimeMs,request={Produce|FetchConsumer|FetchFollower}</literal></simpara></entry>
<entry align="left" valign="top"><simpara>The time taken, in milliseconds, to send the response.</simpara></entry>
<entry align="left" valign="top"><simpara>N/A</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>Network processor average idle percent</simpara></entry>
<entry align="left" valign="top"><simpara><literal>kafka.network:type=SocketServer,name=NetworkProcessorAvgIdlePercent</literal></simpara></entry>
<entry align="left" valign="top"><simpara>The average percentage of time that the network processors are idle.</simpara></entry>
<entry align="left" valign="top"><simpara>Between zero and one.</simpara></entry>
</row>
</tbody>
</tgroup>
</informaltable>
</section>
<section xml:id="kafka_log_metrics" remap="_kafka_log_metrics">
<title>Kafka log metrics</title>
<simpara>The following table shows a selection of metrics that report information about logging.</simpara>
<informaltable frame="all" rowsep="1" colsep="1">
<tgroup cols="4">
<colspec colname="col_1" colwidth="25*"/>
<colspec colname="col_2" colwidth="25*"/>
<colspec colname="col_3" colwidth="25*"/>
<colspec colname="col_4" colwidth="25*"/>
<thead>
<row>
<entry align="left" valign="top">Metric</entry>
<entry align="left" valign="top">MBean</entry>
<entry align="left" valign="top">Description</entry>
<entry align="left" valign="top">Expected Value</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left" valign="top"><simpara>Log flush rate and time in milliseconds</simpara></entry>
<entry align="left" valign="top"><simpara><literal>kafka.log:type=LogFlushStats,name=LogFlushRateAndTimeMs</literal></simpara></entry>
<entry align="left" valign="top"><simpara>The rate at which log data is written to disk, in milliseconds.</simpara></entry>
<entry align="left" valign="top"><simpara>N/A</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>Offline log directory count</simpara></entry>
<entry align="left" valign="top"><simpara><literal>kafka.log:type=LogManager,name=OfflineLogDirectoryCount</literal></simpara></entry>
<entry align="left" valign="top"><simpara>The number of offline log directories (for example, after a hardware failure).</simpara></entry>
<entry align="left" valign="top"><simpara>Zero</simpara></entry>
</row>
</tbody>
</tgroup>
</informaltable>
</section>
<section xml:id="kafka_controller_metrics" remap="_kafka_controller_metrics">
<title>Kafka controller metrics</title>
<simpara>The following table shows a selection of metrics that report information about the controller of the cluster.</simpara>
<informaltable frame="all" rowsep="1" colsep="1">
<tgroup cols="4">
<colspec colname="col_1" colwidth="25*"/>
<colspec colname="col_2" colwidth="25*"/>
<colspec colname="col_3" colwidth="25*"/>
<colspec colname="col_4" colwidth="25*"/>
<thead>
<row>
<entry align="left" valign="top">Metric</entry>
<entry align="left" valign="top">MBean</entry>
<entry align="left" valign="top">Description</entry>
<entry align="left" valign="top">Expected Value</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left" valign="top"><simpara>Active controller count</simpara></entry>
<entry align="left" valign="top"><simpara><literal>kafka.controller:type=KafkaController,name=ActiveControllerCount</literal></simpara></entry>
<entry align="left" valign="top"><simpara>The number of brokers designated as controllers.</simpara></entry>
<entry align="left" valign="top"><simpara>One indicates that the broker is the controller for the cluster.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>Leader election rate and time in milliseconds</simpara></entry>
<entry align="left" valign="top"><simpara><literal>kafka.controller:type=ControllerStats,name=LeaderElectionRateAndTimeMs</literal></simpara></entry>
<entry align="left" valign="top"><simpara>The rate at which new leader replicas are elected.</simpara></entry>
<entry align="left" valign="top"><simpara>Zero</simpara></entry>
</row>
</tbody>
</tgroup>
</informaltable>
</section>
<section xml:id="yammer_metrics" remap="_yammer_metrics">
<title>Yammer metrics</title>
<simpara>Metrics that express a rate or unit of time are provided as Yammer metrics. The class name of an MBean that uses Yammer metrics is prefixed with <literal>com.yammer.metrics</literal>.</simpara>
<simpara>Yammer rate metrics have the following attributes for monitoring requests:</simpara>
<itemizedlist>
<listitem>
<simpara>Count</simpara>
</listitem>
<listitem>
<simpara>EventType (Bytes)</simpara>
</listitem>
<listitem>
<simpara>FifteenMinuteRate</simpara>
</listitem>
<listitem>
<simpara>RateUnit (Seconds)</simpara>
</listitem>
<listitem>
<simpara>MeanRate</simpara>
</listitem>
<listitem>
<simpara>OneMinuteRate</simpara>
</listitem>
<listitem>
<simpara>FiveMinuteRate</simpara>
</listitem>
</itemizedlist>
<simpara>Yammer time metrics have the following attributes for monitoring requests:</simpara>
<itemizedlist>
<listitem>
<simpara>Max</simpara>
</listitem>
<listitem>
<simpara>Min</simpara>
</listitem>
<listitem>
<simpara>Mean</simpara>
</listitem>
<listitem>
<simpara>StdDev</simpara>
</listitem>
<listitem>
<simpara>75/95/98/99/99.9<superscript>th</superscript> Percentile</simpara>
</listitem>
</itemizedlist>
</section>
</section>
<section xml:id="producer-mbeans-str">
<title>Producer MBeans</title>
<simpara>The following MBeans will exist in Kafka producer applications, including Kafka Streams applications and
Kafka Connect with source connectors.</simpara>
<section xml:id="producer-mbeans-producer-metrics-client-id-str">
<title>MBeans matching <literal>kafka.producer:type=producer-metrics,client-id=*</literal></title>
<simpara>These are metrics at the producer level.</simpara>
<informaltable frame="all" rowsep="1" colsep="1">
<tgroup cols="2">
<colspec colname="col_1" colwidth="50*"/>
<colspec colname="col_2" colwidth="50*"/>
<thead>
<row>
<entry align="left" valign="top">Attribute</entry>
<entry align="left" valign="top">Description</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left" valign="top"><simpara>batch-size-avg</simpara></entry>
<entry align="left" valign="top"><simpara>The average number of bytes sent per partition per-request.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>batch-size-max</simpara></entry>
<entry align="left" valign="top"><simpara>The max number of bytes sent per partition per-request.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>batch-split-rate</simpara></entry>
<entry align="left" valign="top"><simpara>The average number of batch splits per second.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>batch-split-total</simpara></entry>
<entry align="left" valign="top"><simpara>The total number of batch splits.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>buffer-available-bytes</simpara></entry>
<entry align="left" valign="top"><simpara>The total amount of buffer memory that is not being used (either unallocated or in the free list).</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>buffer-total-bytes</simpara></entry>
<entry align="left" valign="top"><simpara>The maximum amount of buffer memory the client can use (whether or not it is currently used).</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>bufferpool-wait-time</simpara></entry>
<entry align="left" valign="top"><simpara>The fraction of time an appender waits for space allocation.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>compression-rate-avg</simpara></entry>
<entry align="left" valign="top"><simpara>The average compression rate of record batches.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>connection-close-rate</simpara></entry>
<entry align="left" valign="top"><simpara>Connections closed per second in the window.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>connection-count</simpara></entry>
<entry align="left" valign="top"><simpara>The current number of active connections.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>connection-creation-rate</simpara></entry>
<entry align="left" valign="top"><simpara>New connections established per second in the window.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>failed-authentication-rate</simpara></entry>
<entry align="left" valign="top"><simpara>Connections that failed authentication.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>incoming-byte-rate</simpara></entry>
<entry align="left" valign="top"><simpara>Bytes/second read off all sockets.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>io-ratio</simpara></entry>
<entry align="left" valign="top"><simpara>The fraction of time the I/O thread spent doing I/O.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>io-time-ns-avg</simpara></entry>
<entry align="left" valign="top"><simpara>The average length of time for I/O per select call in nanoseconds.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>io-wait-ratio</simpara></entry>
<entry align="left" valign="top"><simpara>The fraction of time the I/O thread spent waiting.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>io-wait-time-ns-avg</simpara></entry>
<entry align="left" valign="top"><simpara>The average length of time the I/O thread spent waiting for a socket ready for reads or writes in nanoseconds.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>metadata-age</simpara></entry>
<entry align="left" valign="top"><simpara>The age in seconds of the current producer metadata being used.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>network-io-rate</simpara></entry>
<entry align="left" valign="top"><simpara>The average number of network operations (reads or writes) on all connections per second.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>outgoing-byte-rate</simpara></entry>
<entry align="left" valign="top"><simpara>The average number of outgoing bytes sent per second to all servers.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>produce-throttle-time-avg</simpara></entry>
<entry align="left" valign="top"><simpara>The average time in ms a request was throttled by a broker.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>produce-throttle-time-max</simpara></entry>
<entry align="left" valign="top"><simpara>The maximum time in ms a request was throttled by a broker.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>record-error-rate</simpara></entry>
<entry align="left" valign="top"><simpara>The average per-second number of record sends that resulted in errors.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>record-error-total</simpara></entry>
<entry align="left" valign="top"><simpara>The total number of record sends that resulted in errors.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>record-queue-time-avg</simpara></entry>
<entry align="left" valign="top"><simpara>The average time in ms record batches spent in the send buffer.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>record-queue-time-max</simpara></entry>
<entry align="left" valign="top"><simpara>The maximum time in ms record batches spent in the send buffer.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>record-retry-rate</simpara></entry>
<entry align="left" valign="top"><simpara>The average per-second number of retried record sends.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>record-retry-total</simpara></entry>
<entry align="left" valign="top"><simpara>The total number of retried record sends.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>record-send-rate</simpara></entry>
<entry align="left" valign="top"><simpara>The average number of records sent per second.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>record-send-total</simpara></entry>
<entry align="left" valign="top"><simpara>The total number of records sent.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>record-size-avg</simpara></entry>
<entry align="left" valign="top"><simpara>The average record size.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>record-size-max</simpara></entry>
<entry align="left" valign="top"><simpara>The maximum record size.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>records-per-request-avg</simpara></entry>
<entry align="left" valign="top"><simpara>The average number of records per request.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>request-latency-avg</simpara></entry>
<entry align="left" valign="top"><simpara>The average request latency in ms.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>request-latency-max</simpara></entry>
<entry align="left" valign="top"><simpara>The maximum request latency in ms.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>request-rate</simpara></entry>
<entry align="left" valign="top"><simpara>The average number of requests sent per second.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>request-size-avg</simpara></entry>
<entry align="left" valign="top"><simpara>The average size of all requests in the window.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>request-size-max</simpara></entry>
<entry align="left" valign="top"><simpara>The maximum size of any request sent in the window.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>requests-in-flight</simpara></entry>
<entry align="left" valign="top"><simpara>The current number of in-flight requests awaiting a response.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>response-rate</simpara></entry>
<entry align="left" valign="top"><simpara>Responses received sent per second.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>select-rate</simpara></entry>
<entry align="left" valign="top"><simpara>Number of times the I/O layer checked for new I/O to perform per second.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>successful-authentication-rate</simpara></entry>
<entry align="left" valign="top"><simpara>Connections that were successfully authenticated using SASL or SSL.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>waiting-threads</simpara></entry>
<entry align="left" valign="top"><simpara>The number of user threads blocked waiting for buffer memory to enqueue their records.</simpara></entry>
</row>
</tbody>
</tgroup>
</informaltable>
</section>
<section xml:id="producer-mbeans-producer-metrics-client-id-node-id-str">
<title>MBeans matching <literal>kafka.producer:type=producer-metrics,client-id=*,node-id=*</literal></title>
<simpara>These are metrics at the producer level about connection to each broker.</simpara>
<informaltable frame="all" rowsep="1" colsep="1">
<tgroup cols="2">
<colspec colname="col_1" colwidth="50*"/>
<colspec colname="col_2" colwidth="50*"/>
<thead>
<row>
<entry align="left" valign="top">Attribute</entry>
<entry align="left" valign="top">Description</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left" valign="top"><simpara>incoming-byte-rate</simpara></entry>
<entry align="left" valign="top"><simpara>The average number of responses received per second for a node.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>outgoing-byte-rate</simpara></entry>
<entry align="left" valign="top"><simpara>The average number of outgoing bytes sent per second for a node.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>request-latency-avg</simpara></entry>
<entry align="left" valign="top"><simpara>The average request latency in ms for a node.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>request-latency-max</simpara></entry>
<entry align="left" valign="top"><simpara>The maximum request latency in ms for a node.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>request-rate</simpara></entry>
<entry align="left" valign="top"><simpara>The average number of requests sent per second for a node.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>request-size-avg</simpara></entry>
<entry align="left" valign="top"><simpara>The average size of all requests in the window for a node.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>request-size-max</simpara></entry>
<entry align="left" valign="top"><simpara>The maximum size of any request sent in the window for a node.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>response-rate</simpara></entry>
<entry align="left" valign="top"><simpara>Responses received sent per second for a node.</simpara></entry>
</row>
</tbody>
</tgroup>
</informaltable>
</section>
<section xml:id="producer-mbeans-producer-metrics-client-id-topic-str">
<title>MBeans matching <literal>kafka.producer:type=producer-topic-metrics,client-id=*,topic=*</literal></title>
<simpara>These are metrics at the topic level about topics the producer is sending messages to.</simpara>
<informaltable frame="all" rowsep="1" colsep="1">
<tgroup cols="2">
<colspec colname="col_1" colwidth="50*"/>
<colspec colname="col_2" colwidth="50*"/>
<thead>
<row>
<entry align="left" valign="top">Attribute</entry>
<entry align="left" valign="top">Description</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left" valign="top"><simpara>byte-rate</simpara></entry>
<entry align="left" valign="top"><simpara>The average number of bytes sent per second for a topic.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>byte-total</simpara></entry>
<entry align="left" valign="top"><simpara>The total number of bytes sent for a topic.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>compression-rate</simpara></entry>
<entry align="left" valign="top"><simpara>The average compression rate of record batches for a topic.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>record-error-rate</simpara></entry>
<entry align="left" valign="top"><simpara>The average per-second number of record sends that resulted in errors for a topic.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>record-error-total</simpara></entry>
<entry align="left" valign="top"><simpara>The total number of record sends that resulted in errors for a topic.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>record-retry-rate</simpara></entry>
<entry align="left" valign="top"><simpara>The average per-second number of retried record sends for a topic.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>record-retry-total</simpara></entry>
<entry align="left" valign="top"><simpara>The total number of retried record sends for a topic.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>record-send-rate</simpara></entry>
<entry align="left" valign="top"><simpara>The average number of records sent per second for a topic.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>record-send-total</simpara></entry>
<entry align="left" valign="top"><simpara>The total number of records sent for a topic.</simpara></entry>
</row>
</tbody>
</tgroup>
</informaltable>
</section>
</section>
<section xml:id="consumer-mbeans-str">
<title>Consumer MBeans</title>
<simpara>The following MBeans will exist in Kafka consumer applications, including Kafka Streams applications and
Kafka Connect with sink connectors.</simpara>
<section xml:id="consumer-mbeans-consumer-metrics-client-id-str">
<title>MBeans matching <literal>kafka.consumer:type=consumer-metrics,client-id=*</literal></title>
<simpara>These are metrics at the consumer level.</simpara>
<informaltable frame="all" rowsep="1" colsep="1">
<tgroup cols="2">
<colspec colname="col_1" colwidth="50*"/>
<colspec colname="col_2" colwidth="50*"/>
<thead>
<row>
<entry align="left" valign="top">Attribute</entry>
<entry align="left" valign="top">Description</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left" valign="top"><simpara>connection-close-rate</simpara></entry>
<entry align="left" valign="top"><simpara>Connections closed per second in the window.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>connection-count</simpara></entry>
<entry align="left" valign="top"><simpara>The current number of active connections.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>connection-creation-rate</simpara></entry>
<entry align="left" valign="top"><simpara>New connections established per second in the window.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>failed-authentication-rate</simpara></entry>
<entry align="left" valign="top"><simpara>Connections that failed authentication.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>incoming-byte-rate</simpara></entry>
<entry align="left" valign="top"><simpara>Bytes/second read off all sockets.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>io-ratio</simpara></entry>
<entry align="left" valign="top"><simpara>The fraction of time the I/O thread spent doing I/O.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>io-time-ns-avg</simpara></entry>
<entry align="left" valign="top"><simpara>The average length of time for I/O per select call in nanoseconds.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>io-wait-ratio</simpara></entry>
<entry align="left" valign="top"><simpara>The fraction of time the I/O thread spent waiting.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>io-wait-time-ns-avg</simpara></entry>
<entry align="left" valign="top"><simpara>The average length of time the I/O thread spent waiting for a socket ready for reads or writes in nanoseconds.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>network-io-rate</simpara></entry>
<entry align="left" valign="top"><simpara>The average number of network operations (reads or writes) on all connections per second.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>outgoing-byte-rate</simpara></entry>
<entry align="left" valign="top"><simpara>The average number of outgoing bytes sent per second to all servers.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>request-rate</simpara></entry>
<entry align="left" valign="top"><simpara>The average number of requests sent per second.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>request-size-avg</simpara></entry>
<entry align="left" valign="top"><simpara>The average size of all requests in the window.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>request-size-max</simpara></entry>
<entry align="left" valign="top"><simpara>The maximum size of any request sent in the window.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>response-rate</simpara></entry>
<entry align="left" valign="top"><simpara>Responses received sent per second.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>select-rate</simpara></entry>
<entry align="left" valign="top"><simpara>Number of times the I/O layer checked for new I/O to perform per second.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>successful-authentication-rate</simpara></entry>
<entry align="left" valign="top"><simpara>Connections that were successfully authenticated using SASL or SSL.</simpara></entry>
</row>
</tbody>
</tgroup>
</informaltable>
</section>
<section xml:id="consumer-mbeans-consumer-metrics-client-id-node-id-str">
<title>MBeans matching <literal>kafka.consumer:type=consumer-metrics,client-id=*,node-id=*</literal></title>
<simpara>These are metrics at the consumer level about connection to each broker.</simpara>
<informaltable frame="all" rowsep="1" colsep="1">
<tgroup cols="2">
<colspec colname="col_1" colwidth="50*"/>
<colspec colname="col_2" colwidth="50*"/>
<thead>
<row>
<entry align="left" valign="top">Attribute</entry>
<entry align="left" valign="top">Description</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left" valign="top"><simpara>incoming-byte-rate</simpara></entry>
<entry align="left" valign="top"><simpara>The average number of responses received per second for a node.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>outgoing-byte-rate</simpara></entry>
<entry align="left" valign="top"><simpara>The average number of outgoing bytes sent per second for a node.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>request-latency-avg</simpara></entry>
<entry align="left" valign="top"><simpara>The average request latency in ms for a node.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>request-latency-max</simpara></entry>
<entry align="left" valign="top"><simpara>The maximum request latency in ms for a node.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>request-rate</simpara></entry>
<entry align="left" valign="top"><simpara>The average number of requests sent per second for a node.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>request-size-avg</simpara></entry>
<entry align="left" valign="top"><simpara>The average size of all requests in the window for a node.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>request-size-max</simpara></entry>
<entry align="left" valign="top"><simpara>The maximum size of any request sent in the window for a node.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>response-rate</simpara></entry>
<entry align="left" valign="top"><simpara>Responses received sent per second for a node.</simpara></entry>
</row>
</tbody>
</tgroup>
</informaltable>
</section>
<section xml:id="consumer-mbeans-consumer-coordinator-metrics-client-id-str">
<title>MBeans matching <literal>kafka.consumer:type=consumer-coordinator-metrics,client-id=*</literal></title>
<simpara>These are metrics at the consumer level about the consumer group.</simpara>
<informaltable frame="all" rowsep="1" colsep="1">
<tgroup cols="2">
<colspec colname="col_1" colwidth="50*"/>
<colspec colname="col_2" colwidth="50*"/>
<thead>
<row>
<entry align="left" valign="top">Attribute</entry>
<entry align="left" valign="top">Description</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left" valign="top"><simpara>assigned-partitions</simpara></entry>
<entry align="left" valign="top"><simpara>The number of partitions currently assigned to this consumer.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>commit-latency-avg</simpara></entry>
<entry align="left" valign="top"><simpara>The average time taken for a commit request.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>commit-latency-max</simpara></entry>
<entry align="left" valign="top"><simpara>The max time taken for a commit request.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>commit-rate</simpara></entry>
<entry align="left" valign="top"><simpara>The number of commit calls per second.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>heartbeat-rate</simpara></entry>
<entry align="left" valign="top"><simpara>The average number of heartbeats per second.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>heartbeat-response-time-max</simpara></entry>
<entry align="left" valign="top"><simpara>The max time taken to receive a response to a heartbeat request.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>join-rate</simpara></entry>
<entry align="left" valign="top"><simpara>The number of group joins per second.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>join-time-avg</simpara></entry>
<entry align="left" valign="top"><simpara>The average time taken for a group rejoin.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>join-time-max</simpara></entry>
<entry align="left" valign="top"><simpara>The max time taken for a group rejoin.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>last-heartbeat-seconds-ago</simpara></entry>
<entry align="left" valign="top"><simpara>The number of seconds since the last controller heartbeat.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>sync-rate</simpara></entry>
<entry align="left" valign="top"><simpara>The number of group syncs per second.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>sync-time-avg</simpara></entry>
<entry align="left" valign="top"><simpara>The average time taken for a group sync.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>sync-time-max</simpara></entry>
<entry align="left" valign="top"><simpara>The max time taken for a group sync.</simpara></entry>
</row>
</tbody>
</tgroup>
</informaltable>
</section>
<section xml:id="consumer-mbeans-consumer-fetch-manager-metrics-client-id-str">
<title>MBeans matching <literal>kafka.consumer:type=consumer-fetch-manager-metrics,client-id=*</literal></title>
<simpara>These are metrics at the consumer level about the consumer's fetcher.</simpara>
<informaltable frame="all" rowsep="1" colsep="1">
<tgroup cols="2">
<colspec colname="col_1" colwidth="50*"/>
<colspec colname="col_2" colwidth="50*"/>
<thead>
<row>
<entry align="left" valign="top">Attribute</entry>
<entry align="left" valign="top">Description</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left" valign="top"><simpara>bytes-consumed-rate</simpara></entry>
<entry align="left" valign="top"><simpara>The average number of bytes consumed per second.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>bytes-consumed-total</simpara></entry>
<entry align="left" valign="top"><simpara>The total number of bytes consumed.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>fetch-latency-avg</simpara></entry>
<entry align="left" valign="top"><simpara>The average time taken for a fetch request.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>fetch-latency-max</simpara></entry>
<entry align="left" valign="top"><simpara>The max time taken for any fetch request.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>fetch-rate</simpara></entry>
<entry align="left" valign="top"><simpara>The number of fetch requests per second.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>fetch-size-avg</simpara></entry>
<entry align="left" valign="top"><simpara>The average number of bytes fetched per request.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>fetch-size-max</simpara></entry>
<entry align="left" valign="top"><simpara>The maximum number of bytes fetched per request.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>fetch-throttle-time-avg</simpara></entry>
<entry align="left" valign="top"><simpara>The average throttle time in ms.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>fetch-throttle-time-max</simpara></entry>
<entry align="left" valign="top"><simpara>The maximum throttle time in ms.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>fetch-total</simpara></entry>
<entry align="left" valign="top"><simpara>The total number of fetch requests.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>records-consumed-rate</simpara></entry>
<entry align="left" valign="top"><simpara>The average number of records consumed per second.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>records-consumed-total</simpara></entry>
<entry align="left" valign="top"><simpara>The total number of records consumed.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>records-lag-max</simpara></entry>
<entry align="left" valign="top"><simpara>The maximum lag in terms of number of records for any partition in this window.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>records-lead-min</simpara></entry>
<entry align="left" valign="top"><simpara>The minimum lead in terms of number of records for any partition in this window.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>records-per-request-avg</simpara></entry>
<entry align="left" valign="top"><simpara>The average number of records in each request.</simpara></entry>
</row>
</tbody>
</tgroup>
</informaltable>
</section>
<section xml:id="consumer-mbeans-consumer-fetch-manager-metrics-client-id-topic-str">
<title>MBeans matching <literal>kafka.consumer:type=consumer-fetch-manager-metrics,client-id=*,topic=*</literal></title>
<simpara>These are metrics at the topic level about the consumer's fetcher.</simpara>
<informaltable frame="all" rowsep="1" colsep="1">
<tgroup cols="2">
<colspec colname="col_1" colwidth="50*"/>
<colspec colname="col_2" colwidth="50*"/>
<thead>
<row>
<entry align="left" valign="top">Attribute</entry>
<entry align="left" valign="top">Description</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left" valign="top"><simpara>bytes-consumed-rate</simpara></entry>
<entry align="left" valign="top"><simpara>The average number of bytes consumed per second for a topic.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>bytes-consumed-total</simpara></entry>
<entry align="left" valign="top"><simpara>The total number of bytes consumed for a topic.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>fetch-size-avg</simpara></entry>
<entry align="left" valign="top"><simpara>The average number of bytes fetched per request for a topic.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>fetch-size-max</simpara></entry>
<entry align="left" valign="top"><simpara>The maximum number of bytes fetched per request for a topic.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>records-consumed-rate</simpara></entry>
<entry align="left" valign="top"><simpara>The average number of records consumed per second for a topic.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>records-consumed-total</simpara></entry>
<entry align="left" valign="top"><simpara>The total number of records consumed for a topic.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>records-per-request-avg</simpara></entry>
<entry align="left" valign="top"><simpara>The average number of records in each request for a topic.</simpara></entry>
</row>
</tbody>
</tgroup>
</informaltable>
</section>
<section xml:id="consumer-mbeans-consumer-fetch-manager-metrics-client-id-topic-partition-str">
<title>MBeans matching <literal>kafka.consumer:type=consumer-fetch-manager-metrics,client-id=*,topic=*,partition=*</literal></title>
<simpara>These are metrics at the partition level about the consumer's fetcher.</simpara>
<informaltable frame="all" rowsep="1" colsep="1">
<tgroup cols="2">
<colspec colname="col_1" colwidth="50*"/>
<colspec colname="col_2" colwidth="50*"/>
<thead>
<row>
<entry align="left" valign="top">Attribute</entry>
<entry align="left" valign="top">Description</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left" valign="top"><simpara>records-lag</simpara></entry>
<entry align="left" valign="top"><simpara>The latest lag of the partition.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>records-lag-avg</simpara></entry>
<entry align="left" valign="top"><simpara>The average lag of the partition.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>records-lag-max</simpara></entry>
<entry align="left" valign="top"><simpara>The max lag of the partition.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>records-lead</simpara></entry>
<entry align="left" valign="top"><simpara>The latest lead of the partition.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>records-lead-avg</simpara></entry>
<entry align="left" valign="top"><simpara>The average lead of the partition.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>records-lead-min</simpara></entry>
<entry align="left" valign="top"><simpara>The min lead of the partition.</simpara></entry>
</row>
</tbody>
</tgroup>
</informaltable>
</section>
</section>
<section xml:id="kafka-connect-mbeans-str">
<title>Kafka Connect MBeans</title>
<note>
<simpara>Kafka Connect will contain the <link linkend="producer-mbeans-str">producer</link> MBeans for source connectors and <link linkend="consumer-mbeans-str">consumer</link> MBeans for sink connectors in addition to those documented here.</simpara>
</note>
<section xml:id="connect-mbeans-connect-metrics-client-id-str">
<title>MBeans matching <literal>kafka.connect:type=connect-metrics,client-id=*</literal></title>
<simpara>These are metrics at the connect level.</simpara>
<informaltable frame="all" rowsep="1" colsep="1">
<tgroup cols="2">
<colspec colname="col_1" colwidth="50*"/>
<colspec colname="col_2" colwidth="50*"/>
<thead>
<row>
<entry align="left" valign="top">Attribute</entry>
<entry align="left" valign="top">Description</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left" valign="top"><simpara>connection-close-rate</simpara></entry>
<entry align="left" valign="top"><simpara>Connections closed per second in the window.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>connection-count</simpara></entry>
<entry align="left" valign="top"><simpara>The current number of active connections.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>connection-creation-rate</simpara></entry>
<entry align="left" valign="top"><simpara>New connections established per second in the window.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>failed-authentication-rate</simpara></entry>
<entry align="left" valign="top"><simpara>Connections that failed authentication.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>incoming-byte-rate</simpara></entry>
<entry align="left" valign="top"><simpara>Bytes/second read off all sockets.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>io-ratio</simpara></entry>
<entry align="left" valign="top"><simpara>The fraction of time the I/O thread spent doing I/O.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>io-time-ns-avg</simpara></entry>
<entry align="left" valign="top"><simpara>The average length of time for I/O per select call in nanoseconds.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>io-wait-ratio</simpara></entry>
<entry align="left" valign="top"><simpara>The fraction of time the I/O thread spent waiting.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>io-wait-time-ns-avg</simpara></entry>
<entry align="left" valign="top"><simpara>The average length of time the I/O thread spent waiting for a socket ready for reads or writes in nanoseconds.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>network-io-rate</simpara></entry>
<entry align="left" valign="top"><simpara>The average number of network operations (reads or writes) on all connections per second.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>outgoing-byte-rate</simpara></entry>
<entry align="left" valign="top"><simpara>The average number of outgoing bytes sent per second to all servers.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>request-rate</simpara></entry>
<entry align="left" valign="top"><simpara>The average number of requests sent per second.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>request-size-avg</simpara></entry>
<entry align="left" valign="top"><simpara>The average size of all requests in the window.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>request-size-max</simpara></entry>
<entry align="left" valign="top"><simpara>The maximum size of any request sent in the window.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>response-rate</simpara></entry>
<entry align="left" valign="top"><simpara>Responses received sent per second.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>select-rate</simpara></entry>
<entry align="left" valign="top"><simpara>Number of times the I/O layer checked for new I/O to perform per second.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>successful-authentication-rate</simpara></entry>
<entry align="left" valign="top"><simpara>Connections that were successfully authenticated using SASL or SSL.</simpara></entry>
</row>
</tbody>
</tgroup>
</informaltable>
</section>
<section xml:id="connect-mbeans-connect-metrics-client-id-node-id-str">
<title>MBeans matching <literal>kafka.connect:type=connect-metrics,client-id=*,node-id=*</literal></title>
<simpara>These are metrics at the connect level about connection to each broker.</simpara>
<informaltable frame="all" rowsep="1" colsep="1">
<tgroup cols="2">
<colspec colname="col_1" colwidth="50*"/>
<colspec colname="col_2" colwidth="50*"/>
<thead>
<row>
<entry align="left" valign="top">Attribute</entry>
<entry align="left" valign="top">Description</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left" valign="top"><simpara>incoming-byte-rate</simpara></entry>
<entry align="left" valign="top"><simpara>The average number of responses received per second for a node.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>outgoing-byte-rate</simpara></entry>
<entry align="left" valign="top"><simpara>The average number of outgoing bytes sent per second for a node.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>request-latency-avg</simpara></entry>
<entry align="left" valign="top"><simpara>The average request latency in ms for a node.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>request-latency-max</simpara></entry>
<entry align="left" valign="top"><simpara>The maximum request latency in ms for a node.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>request-rate</simpara></entry>
<entry align="left" valign="top"><simpara>The average number of requests sent per second for a node.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>request-size-avg</simpara></entry>
<entry align="left" valign="top"><simpara>The average size of all requests in the window for a node.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>request-size-max</simpara></entry>
<entry align="left" valign="top"><simpara>The maximum size of any request sent in the window for a node.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>response-rate</simpara></entry>
<entry align="left" valign="top"><simpara>Responses received sent per second for a node.</simpara></entry>
</row>
</tbody>
</tgroup>
</informaltable>
</section>
<section xml:id="connect-mbeans-connect-worker-metrics-str">
<title>MBeans matching <literal>kafka.connect:type=connect-worker-metrics</literal></title>
<simpara>These are metrics at the connect level.</simpara>
<informaltable frame="all" rowsep="1" colsep="1">
<tgroup cols="2">
<colspec colname="col_1" colwidth="50*"/>
<colspec colname="col_2" colwidth="50*"/>
<thead>
<row>
<entry align="left" valign="top">Attribute</entry>
<entry align="left" valign="top">Description</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left" valign="top"><simpara>connector-count</simpara></entry>
<entry align="left" valign="top"><simpara>The number of connectors run in this worker.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>connector-startup-attempts-total</simpara></entry>
<entry align="left" valign="top"><simpara>The total number of connector startups that this worker has attempted.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>connector-startup-failure-percentage</simpara></entry>
<entry align="left" valign="top"><simpara>The average percentage of this worker’s connectors starts that failed.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>connector-startup-failure-total</simpara></entry>
<entry align="left" valign="top"><simpara>The total number of connector starts that failed.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>connector-startup-success-percentage</simpara></entry>
<entry align="left" valign="top"><simpara>The average percentage of this worker’s connectors starts that succeeded.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>connector-startup-success-total</simpara></entry>
<entry align="left" valign="top"><simpara>The total number of connector starts that succeeded.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>task-count</simpara></entry>
<entry align="left" valign="top"><simpara>The number of tasks run in this worker.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>task-startup-attempts-total</simpara></entry>
<entry align="left" valign="top"><simpara>The total number of task startups that this worker has attempted.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>task-startup-failure-percentage</simpara></entry>
<entry align="left" valign="top"><simpara>The average percentage of this worker’s tasks starts that failed.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>task-startup-failure-total</simpara></entry>
<entry align="left" valign="top"><simpara>The total number of task starts that failed.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>task-startup-success-percentage</simpara></entry>
<entry align="left" valign="top"><simpara>The average percentage of this worker’s tasks starts that succeeded.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>task-startup-success-total</simpara></entry>
<entry align="left" valign="top"><simpara>The total number of task starts that succeeded.</simpara></entry>
</row>
</tbody>
</tgroup>
</informaltable>
</section>
<section xml:id="connect-mbeans-connect-worker-rebalance-metrics-str">
<title>MBeans matching <literal>kafka.connect:type=connect-worker-rebalance-metrics</literal></title>
<informaltable frame="all" rowsep="1" colsep="1">
<tgroup cols="2">
<colspec colname="col_1" colwidth="50*"/>
<colspec colname="col_2" colwidth="50*"/>
<thead>
<row>
<entry align="left" valign="top">Attribute</entry>
<entry align="left" valign="top">Description</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left" valign="top"><simpara>completed-rebalances-total</simpara></entry>
<entry align="left" valign="top"><simpara>The total number of rebalances completed by this worker.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>epoch</simpara></entry>
<entry align="left" valign="top"><simpara>The epoch or generation number of this worker.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>leader-name</simpara></entry>
<entry align="left" valign="top"><simpara>The name of the group leader.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>rebalance-avg-time-ms</simpara></entry>
<entry align="left" valign="top"><simpara>The average time in milliseconds spent by this worker to rebalance.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>rebalance-max-time-ms</simpara></entry>
<entry align="left" valign="top"><simpara>The maximum time in milliseconds spent by this worker to rebalance.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>rebalancing</simpara></entry>
<entry align="left" valign="top"><simpara>Whether this worker is currently rebalancing.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>time-since-last-rebalance-ms</simpara></entry>
<entry align="left" valign="top"><simpara>The time in milliseconds since this worker completed the most recent rebalance.</simpara></entry>
</row>
</tbody>
</tgroup>
</informaltable>
</section>
<section xml:id="connect-mbeans-connector-metrics-connector-str">
<title>MBeans matching <literal>kafka.connect:type=connector-metrics,connector=*</literal></title>
<informaltable frame="all" rowsep="1" colsep="1">
<tgroup cols="2">
<colspec colname="col_1" colwidth="50*"/>
<colspec colname="col_2" colwidth="50*"/>
<thead>
<row>
<entry align="left" valign="top">Attribute</entry>
<entry align="left" valign="top">Description</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left" valign="top"><simpara>connector-class</simpara></entry>
<entry align="left" valign="top"><simpara>The name of the connector class.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>connector-type</simpara></entry>
<entry align="left" valign="top"><simpara>The type of the connector. One of 'source' or 'sink'.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>connector-version</simpara></entry>
<entry align="left" valign="top"><simpara>The version of the connector class, as reported by the connector.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>status</simpara></entry>
<entry align="left" valign="top"><simpara>The status of the connector. One of 'unassigned', 'running', 'paused', 'failed', or 'destroyed'.</simpara></entry>
</row>
</tbody>
</tgroup>
</informaltable>
</section>
<section xml:id="connect-mbeans-connector-task-metrics-metrics-connector-task-str">
<title>MBeans matching <literal>kafka.connect:type=connector-task-metrics,connector=*,task=*</literal></title>
<informaltable frame="all" rowsep="1" colsep="1">
<tgroup cols="2">
<colspec colname="col_1" colwidth="50*"/>
<colspec colname="col_2" colwidth="50*"/>
<thead>
<row>
<entry align="left" valign="top">Attribute</entry>
<entry align="left" valign="top">Description</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left" valign="top"><simpara>batch-size-avg</simpara></entry>
<entry align="left" valign="top"><simpara>The average size of the batches processed by the connector.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>batch-size-max</simpara></entry>
<entry align="left" valign="top"><simpara>The maximum size of the batches processed by the connector.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>offset-commit-avg-time-ms</simpara></entry>
<entry align="left" valign="top"><simpara>The average time in milliseconds taken by this task to commit offsets.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>offset-commit-failure-percentage</simpara></entry>
<entry align="left" valign="top"><simpara>The average percentage of this task’s offset commit attempts that failed.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>offset-commit-max-time-ms</simpara></entry>
<entry align="left" valign="top"><simpara>The maximum time in milliseconds taken by this task to commit offsets.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>offset-commit-success-percentage</simpara></entry>
<entry align="left" valign="top"><simpara>The average percentage of this task’s offset commit attempts that succeeded.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>pause-ratio</simpara></entry>
<entry align="left" valign="top"><simpara>The fraction of time this task has spent in the pause state.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>running-ratio</simpara></entry>
<entry align="left" valign="top"><simpara>The fraction of time this task has spent in the running state.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>status</simpara></entry>
<entry align="left" valign="top"><simpara>The status of the connector task. One of 'unassigned', 'running', 'paused', 'failed', or 'destroyed'.</simpara></entry>
</row>
</tbody>
</tgroup>
</informaltable>
</section>
<section xml:id="connect-mbeans-sink-task-metrics-connector-task-str">
<title>MBeans matching <literal>kafka.connect:type=sink-task-metrics,connector=*,task=*</literal></title>
<informaltable frame="all" rowsep="1" colsep="1">
<tgroup cols="2">
<colspec colname="col_1" colwidth="50*"/>
<colspec colname="col_2" colwidth="50*"/>
<thead>
<row>
<entry align="left" valign="top">Attribute</entry>
<entry align="left" valign="top">Description</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left" valign="top"><simpara>offset-commit-completion-rate</simpara></entry>
<entry align="left" valign="top"><simpara>The average per-second number of offset commit completions that were completed successfully.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>offset-commit-completion-total</simpara></entry>
<entry align="left" valign="top"><simpara>The total number of offset commit completions that were completed successfully.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>offset-commit-seq-no</simpara></entry>
<entry align="left" valign="top"><simpara>The current sequence number for offset commits.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>offset-commit-skip-rate</simpara></entry>
<entry align="left" valign="top"><simpara>The average per-second number of offset commit completions that were received too late and skipped/ignored.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>offset-commit-skip-total</simpara></entry>
<entry align="left" valign="top"><simpara>The total number of offset commit completions that were received too late and skipped/ignored.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>partition-count</simpara></entry>
<entry align="left" valign="top"><simpara>The number of topic partitions assigned to this task belonging to the named sink connector in this worker.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>put-batch-avg-time-ms</simpara></entry>
<entry align="left" valign="top"><simpara>The average time taken by this task to put a batch of sinks records.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>put-batch-max-time-ms</simpara></entry>
<entry align="left" valign="top"><simpara>The maximum time taken by this task to put a batch of sinks records.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>sink-record-active-count</simpara></entry>
<entry align="left" valign="top"><simpara>The number of records that have been read from Kafka but not yet completely committed/flushed/acknowledged by the sink task.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>sink-record-active-count-avg</simpara></entry>
<entry align="left" valign="top"><simpara>The average number of records that have been read from Kafka but not yet completely committed/flushed/acknowledged by the sink task.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>sink-record-active-count-max</simpara></entry>
<entry align="left" valign="top"><simpara>The maximum number of records that have been read from Kafka but not yet completely committed/flushed/acknowledged by the sink task.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>sink-record-lag-max</simpara></entry>
<entry align="left" valign="top"><simpara>The maximum lag in terms of number of records that the sink task is behind the consumer’s position for any topic partitions.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>sink-record-read-rate</simpara></entry>
<entry align="left" valign="top"><simpara>The average per-second number of records read from Kafka for this task belonging to the named sink connector in this worker. This is before transformations are applied.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>sink-record-read-total</simpara></entry>
<entry align="left" valign="top"><simpara>The total number of records read from Kafka by this task belonging to the named sink connector in this worker, since the task was last restarted.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>sink-record-send-rate</simpara></entry>
<entry align="left" valign="top"><simpara>The average per-second number of records output from the transformations and sent/put to this task belonging to the named sink connector in this worker. This is after transformations are applied and excludes any records filtered out by the transformations.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>sink-record-send-total</simpara></entry>
<entry align="left" valign="top"><simpara>The total number of records output from the transformations and sent/put to this task belonging to the named sink connector in this worker, since the task was last restarted.</simpara></entry>
</row>
</tbody>
</tgroup>
</informaltable>
</section>
<section xml:id="connect-mbeans-source-task-metrics-connector-task-str">
<title>MBeans matching <literal>kafka.connect:type=source-task-metrics,connector=*,task=*</literal></title>
<informaltable frame="all" rowsep="1" colsep="1">
<tgroup cols="2">
<colspec colname="col_1" colwidth="50*"/>
<colspec colname="col_2" colwidth="50*"/>
<thead>
<row>
<entry align="left" valign="top">Attribute</entry>
<entry align="left" valign="top">Description</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left" valign="top"><simpara>poll-batch-avg-time-ms</simpara></entry>
<entry align="left" valign="top"><simpara>The average time in milliseconds taken by this task to poll for a batch of source records.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>poll-batch-max-time-ms</simpara></entry>
<entry align="left" valign="top"><simpara>The maximum time in milliseconds taken by this task to poll for a batch of source records.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>source-record-active-count</simpara></entry>
<entry align="left" valign="top"><simpara>The number of records that have been produced by this task but not yet completely written to Kafka.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>source-record-active-count-avg</simpara></entry>
<entry align="left" valign="top"><simpara>The average number of records that have been produced by this task but not yet completely written to Kafka.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>source-record-active-count-max</simpara></entry>
<entry align="left" valign="top"><simpara>The maximum number of records that have been produced by this task but not yet completely written to Kafka.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>source-record-poll-rate</simpara></entry>
<entry align="left" valign="top"><simpara>The average per-second number of records produced/polled (before transformation) by this task belonging to the named source connector in this worker.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>source-record-poll-total</simpara></entry>
<entry align="left" valign="top"><simpara>The total number of records produced/polled (before transformation) by this task belonging to the named source connector in this worker.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>source-record-write-rate</simpara></entry>
<entry align="left" valign="top"><simpara>The average per-second number of records output from the transformations and written to Kafka for this task belonging to the named source connector in this worker. This is after transformations are applied and excludes any records filtered out by the transformations.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>source-record-write-total</simpara></entry>
<entry align="left" valign="top"><simpara>The number of records output from the transformations and written to Kafka for this task belonging to the named source connector in this worker, since the task was last restarted.</simpara></entry>
</row>
</tbody>
</tgroup>
</informaltable>
</section>
<section xml:id="connect-mbeans-task-error-metrics-connector-task-str">
<title>MBeans matching <literal>kafka.connect:type=task-error-metrics,connector=*,task=*</literal></title>
<informaltable frame="all" rowsep="1" colsep="1">
<tgroup cols="2">
<colspec colname="col_1" colwidth="50*"/>
<colspec colname="col_2" colwidth="50*"/>
<thead>
<row>
<entry align="left" valign="top">Attribute</entry>
<entry align="left" valign="top">Description</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left" valign="top"><simpara>deadletterqueue-produce-failures</simpara></entry>
<entry align="left" valign="top"><simpara>The number of failed writes to the dead letter queue.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>deadletterqueue-produce-requests</simpara></entry>
<entry align="left" valign="top"><simpara>The number of attempted writes to the dead letter queue.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>last-error-timestamp</simpara></entry>
<entry align="left" valign="top"><simpara>The epoch timestamp when this task last encountered an error.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>total-errors-logged</simpara></entry>
<entry align="left" valign="top"><simpara>The number of errors that were logged.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>total-record-errors</simpara></entry>
<entry align="left" valign="top"><simpara>The number of record processing errors in this task.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>total-record-failures</simpara></entry>
<entry align="left" valign="top"><simpara>The number of record processing failures in this task.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>total-records-skipped</simpara></entry>
<entry align="left" valign="top"><simpara>The number of records skipped due to errors.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>total-retries</simpara></entry>
<entry align="left" valign="top"><simpara>The number of operations retried.</simpara></entry>
</row>
</tbody>
</tgroup>
</informaltable>
</section>
</section>
<section xml:id="kafka-streams-mbeans-str">
<title>Kafka Streams MBeans</title>
<note>
<simpara>A Streams application will contain the <link linkend="producer-mbeans-str">producer</link> and <link linkend="consumer-mbeans-str">consumer</link> MBeans in addition to those documented here.</simpara>
</note>
<section xml:id="mbeans_matching_literal_kafka_streams_type_stream_metrics_client_id_literal" remap="_mbeans_matching_literal_kafka_streams_type_stream_metrics_client_id_literal">
<title>MBeans matching <literal>kafka.streams:type=stream-metrics,client-id=*</literal></title>
<simpara>These metrics are collected when the <literal>metrics.recording.level</literal> configuration parameter is <literal>info</literal> or <literal>debug</literal>.</simpara>
<informaltable frame="all" rowsep="1" colsep="1">
<tgroup cols="2">
<colspec colname="col_1" colwidth="50*"/>
<colspec colname="col_2" colwidth="50*"/>
<thead>
<row>
<entry align="left" valign="top">Attribute</entry>
<entry align="left" valign="top">Description</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left" valign="top"><simpara>commit-latency-avg</simpara></entry>
<entry align="left" valign="top"><simpara>The average execution time in ms for committing, across all running tasks of this thread.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>commit-latency-max</simpara></entry>
<entry align="left" valign="top"><simpara>The maximum execution time in ms for committing across all running tasks of this thread.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>commit-rate</simpara></entry>
<entry align="left" valign="top"><simpara>The average number of commits per second.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>commit-total</simpara></entry>
<entry align="left" valign="top"><simpara>The total number of commit calls across all tasks.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>poll-latency-avg</simpara></entry>
<entry align="left" valign="top"><simpara>The average execution time in ms for polling, across all running tasks of this thread.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>poll-latency-max</simpara></entry>
<entry align="left" valign="top"><simpara>The maximum execution time in ms for polling across all running tasks of this thread.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>poll-rate</simpara></entry>
<entry align="left" valign="top"><simpara>The average number of polls per second.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>poll-total</simpara></entry>
<entry align="left" valign="top"><simpara>The total number of poll calls across all tasks.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>process-latency-avg</simpara></entry>
<entry align="left" valign="top"><simpara>The average execution time in ms for processing, across all running tasks of this thread.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>process-latency-max</simpara></entry>
<entry align="left" valign="top"><simpara>The maximum execution time in ms for processing across all running tasks of this thread.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>process-rate</simpara></entry>
<entry align="left" valign="top"><simpara>The average number of process calls per second.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>process-total</simpara></entry>
<entry align="left" valign="top"><simpara>The total number of process calls across all tasks.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>punctuate-latency-avg</simpara></entry>
<entry align="left" valign="top"><simpara>The average execution time in ms for punctuating, across all running tasks of this thread.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>punctuate-latency-max</simpara></entry>
<entry align="left" valign="top"><simpara>The maximum execution time in ms for punctuating across all running tasks of this thread.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>punctuate-rate</simpara></entry>
<entry align="left" valign="top"><simpara>The average number of punctuates per second.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>punctuate-total</simpara></entry>
<entry align="left" valign="top"><simpara>The total number of punctuate calls across all tasks.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>skipped-records-rate</simpara></entry>
<entry align="left" valign="top"><simpara>The average number of skipped records per second.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>skipped-records-total</simpara></entry>
<entry align="left" valign="top"><simpara>The total number of skipped records.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>task-closed-rate</simpara></entry>
<entry align="left" valign="top"><simpara>The average number of tasks closed per second.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>task-closed-total</simpara></entry>
<entry align="left" valign="top"><simpara>The total number of tasks closed.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>task-created-rate</simpara></entry>
<entry align="left" valign="top"><simpara>The average number of newly created tasks per second.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>task-created-total</simpara></entry>
<entry align="left" valign="top"><simpara>The total number of tasks created.</simpara></entry>
</row>
</tbody>
</tgroup>
</informaltable>
</section>
<section xml:id="mbeans_matching_literal_kafka_streams_type_stream_task_metrics_client_id_task_id_literal" remap="_mbeans_matching_literal_kafka_streams_type_stream_task_metrics_client_id_task_id_literal">
<title>MBeans matching <literal>kafka.streams:type=stream-task-metrics,client-id=*,task-id=*</literal></title>
<simpara>Task metrics.</simpara>
<simpara>These metrics are collected when the <literal>metrics.recording.level</literal> configuration parameter is <literal>debug</literal>.</simpara>
<informaltable frame="all" rowsep="1" colsep="1">
<tgroup cols="2">
<colspec colname="col_1" colwidth="50*"/>
<colspec colname="col_2" colwidth="50*"/>
<thead>
<row>
<entry align="left" valign="top">Attribute</entry>
<entry align="left" valign="top">Description</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left" valign="top"><simpara>commit-latency-avg</simpara></entry>
<entry align="left" valign="top"><simpara>The average commit time in ns for this task.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>commit-latency-max</simpara></entry>
<entry align="left" valign="top"><simpara>The maximum commit time in ns for this task.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>commit-rate</simpara></entry>
<entry align="left" valign="top"><simpara>The average number of commit calls per second.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>commit-total</simpara></entry>
<entry align="left" valign="top"><simpara>The total number of commit calls.</simpara></entry>
</row>
</tbody>
</tgroup>
</informaltable>
</section>
<section xml:id="mbeans_matching_literal_kafka_streams_type_stream_processor_node_metrics_client_id_task_id_processor_node_id_literal" remap="_mbeans_matching_literal_kafka_streams_type_stream_processor_node_metrics_client_id_task_id_processor_node_id_literal">
<title>MBeans matching <literal>kafka.streams:type=stream-processor-node-metrics,client-id=*,task-id=*,processor-node-id=*</literal></title>
<simpara>Processor node metrics.</simpara>
<simpara>These metrics are collected when the <literal>metrics.recording.level</literal> configuration parameter is <literal>debug</literal>.</simpara>
<informaltable frame="all" rowsep="1" colsep="1">
<tgroup cols="2">
<colspec colname="col_1" colwidth="50*"/>
<colspec colname="col_2" colwidth="50*"/>
<thead>
<row>
<entry align="left" valign="top">Attribute</entry>
<entry align="left" valign="top">Description</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left" valign="top"><simpara>create-latency-avg</simpara></entry>
<entry align="left" valign="top"><simpara>The average create execution time in ns.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>create-latency-max</simpara></entry>
<entry align="left" valign="top"><simpara>The maximum create execution time in ns.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>create-rate</simpara></entry>
<entry align="left" valign="top"><simpara>The average number of create operations per second.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>create-total</simpara></entry>
<entry align="left" valign="top"><simpara>The total number of create operations called.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>destroy-latency-avg</simpara></entry>
<entry align="left" valign="top"><simpara>The average destroy execution time in ns.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>destroy-latency-max</simpara></entry>
<entry align="left" valign="top"><simpara>The maximum destroy execution time in ns.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>destroy-rate</simpara></entry>
<entry align="left" valign="top"><simpara>The average number of destroy operations per second.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>destroy-total</simpara></entry>
<entry align="left" valign="top"><simpara>The total number of destroy operations called.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>forward-rate</simpara></entry>
<entry align="left" valign="top"><simpara>The average rate of records being forwarded downstream, from source nodes only, per second.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>forward-total</simpara></entry>
<entry align="left" valign="top"><simpara>The total number of of records being forwarded downstream, from source nodes only.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>process-latency-avg</simpara></entry>
<entry align="left" valign="top"><simpara>The average process execution time in ns.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>process-latency-max</simpara></entry>
<entry align="left" valign="top"><simpara>The maximum process execution time in ns.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>process-rate</simpara></entry>
<entry align="left" valign="top"><simpara>The average number of process operations per second.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>process-total</simpara></entry>
<entry align="left" valign="top"><simpara>The total number of process operations called.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>punctuate-latency-avg</simpara></entry>
<entry align="left" valign="top"><simpara>The average punctuate execution time in ns.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>punctuate-latency-max</simpara></entry>
<entry align="left" valign="top"><simpara>The maximum punctuate execution time in ns.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>punctuate-rate</simpara></entry>
<entry align="left" valign="top"><simpara>The average number of punctuate operations per second.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>punctuate-total</simpara></entry>
<entry align="left" valign="top"><simpara>The total number of punctuate operations called.</simpara></entry>
</row>
</tbody>
</tgroup>
</informaltable>
</section>
<section xml:id="mbeans_matching_literal_kafka_streams_type_stream_store_scope_metrics_client_id_task_id_store_scope_id_literal" remap="_mbeans_matching_literal_kafka_streams_type_stream_store_scope_metrics_client_id_task_id_store_scope_id_literal">
<title>MBeans matching <literal>kafka.streams:type=stream-[store-scope]-metrics,client-id=*,task-id=*,[store-scope]-id=*</literal></title>
<simpara>State store metrics.</simpara>
<simpara>These metrics are collected when the <literal>metrics.recording.level</literal> configuration parameter is <literal>debug</literal>.</simpara>
<informaltable frame="all" rowsep="1" colsep="1">
<tgroup cols="2">
<colspec colname="col_1" colwidth="50*"/>
<colspec colname="col_2" colwidth="50*"/>
<thead>
<row>
<entry align="left" valign="top">Attribute</entry>
<entry align="left" valign="top">Description</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left" valign="top"><simpara>all-latency-avg</simpara></entry>
<entry align="left" valign="top"><simpara>The average all operation execution time in ns.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>all-latency-max</simpara></entry>
<entry align="left" valign="top"><simpara>The maximum all operation execution time in ns.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>all-rate</simpara></entry>
<entry align="left" valign="top"><simpara>The average all operation rate for this store.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>all-total</simpara></entry>
<entry align="left" valign="top"><simpara>The total number of all operation calls for this store.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>delete-latency-avg</simpara></entry>
<entry align="left" valign="top"><simpara>The average delete execution time in ns.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>delete-latency-max</simpara></entry>
<entry align="left" valign="top"><simpara>The maximum delete execution time in ns.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>delete-rate</simpara></entry>
<entry align="left" valign="top"><simpara>The average delete rate for this store.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>delete-total</simpara></entry>
<entry align="left" valign="top"><simpara>The total number of delete calls for this store.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>flush-latency-avg</simpara></entry>
<entry align="left" valign="top"><simpara>The average flush execution time in ns.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>flush-latency-max</simpara></entry>
<entry align="left" valign="top"><simpara>The maximum flush execution time in ns.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>flush-rate</simpara></entry>
<entry align="left" valign="top"><simpara>The average flush rate for this store.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>flush-total</simpara></entry>
<entry align="left" valign="top"><simpara>The total number of flush calls for this store.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>get-latency-avg</simpara></entry>
<entry align="left" valign="top"><simpara>The average get execution time in ns.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>get-latency-max</simpara></entry>
<entry align="left" valign="top"><simpara>The maximum get execution time in ns.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>get-rate</simpara></entry>
<entry align="left" valign="top"><simpara>The average get rate for this store.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>get-total</simpara></entry>
<entry align="left" valign="top"><simpara>The total number of get calls for this store.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>put-all-latency-avg</simpara></entry>
<entry align="left" valign="top"><simpara>The average put-all execution time in ns.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>put-all-latency-max</simpara></entry>
<entry align="left" valign="top"><simpara>The maximum put-all execution time in ns.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>put-all-rate</simpara></entry>
<entry align="left" valign="top"><simpara>The average put-all rate for this store.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>put-all-total</simpara></entry>
<entry align="left" valign="top"><simpara>The total number of put-all calls for this store.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>put-if-absent-latency-avg</simpara></entry>
<entry align="left" valign="top"><simpara>The average put-if-absent execution time in ns.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>put-if-absent-latency-max</simpara></entry>
<entry align="left" valign="top"><simpara>The maximum put-if-absent execution time in ns.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>put-if-absent-rate</simpara></entry>
<entry align="left" valign="top"><simpara>The average put-if-absent rate for this store.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>put-if-absent-total</simpara></entry>
<entry align="left" valign="top"><simpara>The total number of put-if-absent calls for this store.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>put-latency-avg</simpara></entry>
<entry align="left" valign="top"><simpara>The average put execution time in ns.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>put-latency-max</simpara></entry>
<entry align="left" valign="top"><simpara>The maximum put execution time in ns.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>put-rate</simpara></entry>
<entry align="left" valign="top"><simpara>The average put rate for this store.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>put-total</simpara></entry>
<entry align="left" valign="top"><simpara>The total number of put calls for this store.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>range-latency-avg</simpara></entry>
<entry align="left" valign="top"><simpara>The average range execution time in ns.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>range-latency-max</simpara></entry>
<entry align="left" valign="top"><simpara>The maximum range execution time in ns.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>range-rate</simpara></entry>
<entry align="left" valign="top"><simpara>The average range rate for this store.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>range-total</simpara></entry>
<entry align="left" valign="top"><simpara>The total number of range calls for this store.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>restore-latency-avg</simpara></entry>
<entry align="left" valign="top"><simpara>The average restore execution time in ns.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>restore-latency-max</simpara></entry>
<entry align="left" valign="top"><simpara>The maximum restore execution time in ns.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>restore-rate</simpara></entry>
<entry align="left" valign="top"><simpara>The average restore rate for this store.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>restore-total</simpara></entry>
<entry align="left" valign="top"><simpara>The total number of restore calls for this store.</simpara></entry>
</row>
</tbody>
</tgroup>
</informaltable>
</section>
<section xml:id="mbeans_matching_literal_kafka_streams_type_stream_record_cache_metrics_client_id_task_id_record_cache_id_literal" remap="_mbeans_matching_literal_kafka_streams_type_stream_record_cache_metrics_client_id_task_id_record_cache_id_literal">
<title>MBeans matching <literal>kafka.streams:type=stream-record-cache-metrics,client-id=*,task-id=*,record-cache-id=*</literal></title>
<simpara>Record cache metrics.</simpara>
<simpara>These metrics are collected when the <literal>metrics.recording.level</literal> configuration parameter is <literal>debug</literal>.</simpara>
<informaltable frame="all" rowsep="1" colsep="1">
<tgroup cols="2">
<colspec colname="col_1" colwidth="50*"/>
<colspec colname="col_2" colwidth="50*"/>
<thead>
<row>
<entry align="left" valign="top">Attribute</entry>
<entry align="left" valign="top">Description</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left" valign="top"><simpara>hitRatio-avg</simpara></entry>
<entry align="left" valign="top"><simpara>The average cache hit ratio defined as the ratio of cache read hits over the total cache read requests.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>hitRatio-max</simpara></entry>
<entry align="left" valign="top"><simpara>The maximum cache hit ratio.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>hitRatio-min</simpara></entry>
<entry align="left" valign="top"><simpara>The mininum cache hit ratio.</simpara></entry>
</row>
</tbody>
</tgroup>
</informaltable>
</section>
</section>
</chapter>
<chapter xml:id="assembly-kafka-connect-str">
<title>Kafka Connect</title>
<simpara>Kafka Connect is a tool for streaming data between Apache Kafka and external systems.
It provides a framework for moving large amounts of data while maintaining scalability and reliability.
Kafka Connect is typically used to integrate Kafka with database, storage, and messaging systems that are external to your Kafka cluster.</simpara>
<simpara>Kafka Connect uses connector plug-ins that implement connectivity for different types of external systems.
There are two types of connector plug-ins: sink and source.
Sink connectors stream data from Kafka to external systems.
Source connectors stream data from external systems into Kafka.</simpara>
<simpara>Kafka Connect can run in standalone or distributed modes.</simpara>
<variablelist>
<varlistentry>
<term>Standalone mode</term>
<listitem>
<simpara>In standalone mode, Kafka Connect runs on a single node with user-defined configuration read from a properties file.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>Distributed mode</term>
<listitem>
<simpara>In distributed mode, Kafka Connect runs across one or more worker nodes and the workloads are distributed among them.
You manage connectors and their configuration using an HTTP REST interface.</simpara>
</listitem>
</varlistentry>
</variablelist>
<section xml:id="assembly-kafka-connect-standalone-str">
<title>Kafka Connect in standalone mode</title>
<simpara>In standalone mode, Kafka Connect runs as a single process, on a single node. You manage the configuration of standalone mode using properties files.</simpara>
<section xml:id="ref-kafka-connect-standalone-configuration-str">
<title>Configuring Kafka Connect in standalone mode</title>
<simpara>To configure Kafka Connect in standalone mode, edit the <literal>config/connect-standalone.properties</literal> configuration file.
The following options are the most important.</simpara>
<variablelist>
<varlistentry>
<term><literal>bootstrap.servers</literal></term>
<listitem>
<simpara>A list of Kafka broker addresses used as bootstrap connections to Kafka. For example, <literal>kafka0.my-domain.com:9092,kafka1.my-domain.com:9092,kafka2.my-domain.com:9092</literal>.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>key.converter</literal></term>
<listitem>
<simpara>The class used to convert message keys to and from Kafka format. For example, <literal>org.apache.kafka.connect.json.JsonConverter</literal>.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>value.converter</literal></term>
<listitem>
<simpara>The class used to convert message payloads to and from Kafka format. For example, <literal>org.apache.kafka.connect.json.JsonConverter</literal>.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>offset.storage.file.filename</literal></term>
<listitem>
<simpara>Specifies the file in which the offset data is stored.</simpara>
</listitem>
</varlistentry>
</variablelist>
<simpara>An example configuration file is provided in the installation directory at <literal>config/connect-standalone.properties</literal>.
For a complete list of all supported Kafka Connect configuration options, see [kafka-connect-configuration-parameters-str].</simpara>
<simpara>Connector plug-ins open client connections to the Kafka brokers using the bootstrap address.
To configure these connections, use the standard Kafka producer and consumer configuration options prefixed by <literal>producer.</literal> or <literal>consumer.</literal>.</simpara>
<simpara>For more information on configuring Kafka producers and consumers, see:</simpara>
<itemizedlist>
<listitem>
<simpara><xref linkend="producer-configuration-parameters-str"/></simpara>
</listitem>
<listitem>
<simpara><xref linkend="consumer-configuration-parameters-str"/></simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="ref-kafka-connect-standalone-connector-configuration-str">
<title>Configuring connectors in Kafka Connect in standalone mode</title>
<simpara>You can configure connector plug-ins for Kafka Connect in standalone mode using properties files. Most configuration options are specific to each connector. The following options apply to all connectors:</simpara>
<variablelist>
<varlistentry>
<term><literal>name</literal></term>
<listitem>
<simpara>The name of the connector, which must be unique within the current Kafka Connect instance.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>connector.class</literal></term>
<listitem>
<simpara>The class of the connector plug-in. For example, <literal>org.apache.kafka.connect.file.FileStreamSinkConnector</literal>.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>tasks.max</literal></term>
<listitem>
<simpara>The maximum number of tasks that the specified connector can use. Tasks enable the connector to perform work in parallel. The connector might create fewer tasks than specified.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>key.converter</literal></term>
<listitem>
<simpara>The class used to convert message keys to and from Kafka format. This overrides the default value set by the Kafka Connect configuration. For example, <literal>org.apache.kafka.connect.json.JsonConverter</literal>.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>value.converter</literal></term>
<listitem>
<simpara>The class used to convert message payloads to and from Kafka format. This overrides the default value set by the Kafka Connect configuration. For example, <literal>org.apache.kafka.connect.json.JsonConverter</literal>.</simpara>
</listitem>
</varlistentry>
</variablelist>
<simpara>Additionally, you must set at least one of the following options for sink connectors:</simpara>
<variablelist>
<varlistentry>
<term><literal>topics</literal></term>
<listitem>
<simpara>A comma-separated list of topics used as input.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>topics.regex</literal></term>
<listitem>
<simpara>A Java regular expression of topics used as input.</simpara>
</listitem>
</varlistentry>
</variablelist>
<simpara>For all other options, see the documentation for the available connectors.</simpara>
<simpara>AMQ Streams includes example connector configuration files – see <literal>config/connect-file-sink.properties</literal> and <literal>config/connect-file-source.properties</literal> in the AMQ Streams installation directory.</simpara>
</section>
<section xml:id="proc-running-kafka-connect-standalone-str">
<title>Running Kafka Connect in standalone mode</title>
<simpara>This procedure describes how to configure and run Kafka Connect in standalone mode.</simpara>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>An installed and running AMQ Streams} cluster.</simpara>
</listitem>
</itemizedlist>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>Edit the <literal>/opt/kafka/config/connect-standalone.properties</literal> Kafka Connect configuration file and set <literal>bootstrap.server</literal> to point to your Kafka brokers. For example:</simpara>
<programlisting language="ini" linenumbering="unnumbered">bootstrap.servers=kafka0.my-domain.com:9092,kafka1.my-domain.com:9092,kafka2.my-domain.com:9092</programlisting>
</listitem>
<listitem>
<simpara>Start Kafka Connect with the configuration file and specify one or more connector configurations.</simpara>
<programlisting language="shell" linenumbering="unnumbered">su - kafka
/opt/kafka/bin/connect-standalone.sh /opt/kafka/config/connect-standalone.properties connector1.properties
[connector2.properties ...]</programlisting>
</listitem>
<listitem>
<simpara>Verify that Kafka Connect is running.</simpara>
<programlisting language="shell" linenumbering="unnumbered">   jcmd | grep ConnectStandalone</programlisting>
</listitem>
</orderedlist>
<itemizedlist>
<title>Additional resources</title>
<listitem>
<simpara>For more information on installing AMQ Streams, see <xref linkend="proc-installing-amq-streams-str"/>.</simpara>
</listitem>
<listitem>
<simpara>For more information on configuring AMQ Streams, see <xref linkend="proc-configuring-amq-streams-str"/>.</simpara>
</listitem>
<listitem>
<simpara>For a complete list of supported Kafka Connect configuration options, see <xref linkend="kafka-connect-configuration-parameters-str"/>.</simpara>
</listitem>
</itemizedlist>
</section>
</section>
<section xml:id="assembly-kafka-connect-distributed-str">
<title>Kafka Connect in distributed mode</title>
<simpara>In distributed mode, Kafka Connect runs across one or more worker nodes and the workloads are distributed among them. You manage connector plug-ins and their configuration using the HTTP REST interface.</simpara>
<section xml:id="ref-kafka-connect-distributed-configuration-str">
<title>Configuring Kafka Connect in distributed mode</title>
<simpara>To configure Kafka Connect in distributed mode, edit the <literal>config/connect-distributed.properties</literal> configuration file.
The following options are the most important.</simpara>
<variablelist>
<varlistentry>
<term><literal>bootstrap.servers</literal></term>
<listitem>
<simpara>A list of Kafka broker addresses used as bootstrap connections to Kafka. For example, <literal>kafka0.my-domain.com:9092,kafka1.my-domain.com:9092,kafka2.my-domain.com:9092</literal>.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>key.converter</literal></term>
<listitem>
<simpara>The class used to convert message keys to and from Kafka format.
For example, <literal>org.apache.kafka.connect.json.JsonConverter</literal>.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>value.converter</literal></term>
<listitem>
<simpara>The class used to convert message payloads to and from Kafka format.
For example, <literal>org.apache.kafka.connect.json.JsonConverter</literal>.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>group.id</literal></term>
<listitem>
<simpara>The name of the distributed Kafka Connect cluster.
This must be unique and must not conflict with another consumer group ID.
The default value is <literal>connect-cluster</literal>.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>config.storage.topic</literal></term>
<listitem>
<simpara>The Kafka topic used to store connector configurations.
The default value is <literal>connect-configs</literal>.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>offset.storage.topic</literal></term>
<listitem>
<simpara>The Kafka topic used to store offsets.
The default value is <literal>connect-offset</literal>.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>status.storage.topic</literal></term>
<listitem>
<simpara>The Kafka topic used for worker node statuses. The default value is <literal>connect-status</literal>.</simpara>
</listitem>
</varlistentry>
</variablelist>
<simpara>AMQ Streams includes an example configuration file for Kafka Connect in distributed mode – see <literal>config/connect-distributed.properties</literal> in the AMQ Streams installation directory.</simpara>
<simpara>For a complete list of all supported Kafka Connect configuration options, see <xref linkend="kafka-connect-configuration-parameters-str"/>.</simpara>
<simpara>Connector plug-ins open client connections to the Kafka brokers using the bootstrap address.
To configure these connections, use the standard Kafka producer and consumer configuration options prefixed by <literal>producer.</literal> or <literal>consumer.</literal>.</simpara>
<simpara>For more information on configuring Kafka producers and consumers, see:</simpara>
<itemizedlist>
<listitem>
<simpara><xref linkend="producer-configuration-parameters-str"/></simpara>
</listitem>
<listitem>
<simpara><xref linkend="consumer-configuration-parameters-str"/></simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="ref-kafka-connect-distributed-connector-configuration-str">
<title>Configuring connectors in distributed Kafka Connect</title>
<formalpara>
<title>HTTP REST Interface</title>
<para>Connectors for distributed Kafka Connect are configured using HTTP REST interface.
The REST interface listens on port 8083 by default.
It supports following endpoints:</para>
</formalpara>
<variablelist>
<varlistentry>
<term><literal>GET /connectors</literal></term>
<listitem>
<simpara>Return a list of existing connectors.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>POST /connectors</literal></term>
<listitem>
<simpara>Create a connector.
The request body has to be a JSON object with the connector configuration.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>GET /connectors/<emphasis>&lt;name&gt;</emphasis></literal></term>
<listitem>
<simpara>Get information about a specific connector.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>GET /connectors/<emphasis>&lt;name&gt;</emphasis>/config</literal></term>
<listitem>
<simpara>Get configuration of a specific connector.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>PUT /connectors/<emphasis>&lt;name&gt;</emphasis>/config</literal></term>
<listitem>
<simpara>Update the configuration of a specific connector.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>GET /connectors/<emphasis>&lt;name&gt;</emphasis>/status</literal></term>
<listitem>
<simpara>Get the status of a specific connector.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>PUT /connectors/<emphasis>&lt;name&gt;</emphasis>/pause</literal></term>
<listitem>
<simpara>Pause the connector and all its tasks.
The connector will stop processing any messages.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>PUT /connectors/<emphasis>&lt;name&gt;</emphasis>/resume</literal></term>
<listitem>
<simpara>Resume a paused connector.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>POST /connectors/<emphasis>&lt;name&gt;</emphasis>/restart</literal></term>
<listitem>
<simpara>Restart a connector in case it has failed.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>DELETE /connectors/<emphasis>&lt;name&gt;</emphasis></literal></term>
<listitem>
<simpara>Delete a connector.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>GET /connector-plugins</literal></term>
<listitem>
<simpara>Get a list of all supported connector plugins.</simpara>
</listitem>
</varlistentry>
</variablelist>
<formalpara>
<title>Connector configuration</title>
<para>Most configuration options are connector specific and included in the documentation for the connectors. The following fields are common for all connectors.</para>
</formalpara>
<variablelist>
<varlistentry>
<term><literal>name</literal></term>
<listitem>
<simpara>Name of the connector.
Must be unique within a given Kafka Connect instance.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>connector.class</literal></term>
<listitem>
<simpara>Class of the connector plugin.
For example <literal>org.apache.kafka.connect.file.FileStreamSinkConnector</literal>.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>tasks.max</literal></term>
<listitem>
<simpara>The maximum number of tasks used by this connector.
Tasks are used by the connector to parallelise its work.
Connetors may create fewer tasks than specified.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>key.converter</literal></term>
<listitem>
<simpara>Class used to convert message keys to and from Kafka format.
This overrides the default value set by the Kafka Connect configuration.
For example, <literal>org.apache.kafka.connect.json.JsonConverter</literal>.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>value.converter</literal></term>
<listitem>
<simpara>Class used to convert message payloads to and from Kafka format.
This overrides the default value set by the Kafka Connect configuration.
For example, <literal>org.apache.kafka.connect.json.JsonConverter</literal>.</simpara>
</listitem>
</varlistentry>
</variablelist>
<simpara>Additionally, one of the following options must be set for sink connectors:</simpara>
<variablelist>
<varlistentry>
<term><literal>topics</literal></term>
<listitem>
<simpara>A comma-separated list of topics used as input.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>topics.regex</literal></term>
<listitem>
<simpara>A Java regular expression of topics used as input.</simpara>
</listitem>
</varlistentry>
</variablelist>
<simpara>For all other options, see the documentation for the specific connector.</simpara>
<simpara>AMQ Streams includes example connector configuration files.
They can be found in <literal>config/connect-file-sink.properties</literal> and <literal>config/connect-file-source.properties</literal> in the AMQ Streams installation directory.</simpara>
</section>
<section xml:id="proc-running-kafka-connect-distributed-str">
<title>Running distributed Kafka Connect</title>
<simpara>This procedure describes how to configure and run Kafka Connect in distributed mode.</simpara>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>An installed and running AMQ Streams cluster.</simpara>
</listitem>
</itemizedlist>
<orderedlist numeration="arabic">
<title>Running the cluster</title>
<listitem>
<simpara>Edit the <literal>/opt/kafka/config/connect-distributed.properties</literal> Kafka Connect configuration file on all Kafka Connect worker nodes.</simpara>
<itemizedlist>
<listitem>
<simpara>Set the <literal>bootstrap.server</literal> option to point to your Kafka brokers.</simpara>
</listitem>
<listitem>
<simpara>Set the <literal>group.id</literal> option.</simpara>
</listitem>
<listitem>
<simpara>Set the <literal>config.storage.topic</literal> option.</simpara>
</listitem>
<listitem>
<simpara>Set the <literal>offset.storage.topic</literal> option.</simpara>
</listitem>
<listitem>
<simpara>Set the <literal>status.storage.topic</literal> option.</simpara>
<simpara>For example:</simpara>
<programlisting language="ini" linenumbering="unnumbered">bootstrap.servers=kafka0.my-domain.com:9092,kafka1.my-domain.com:9092,kafka2.my-domain.com:9092
group.id=my-group-id
config.storage.topic=my-group-id-configs
offset.storage.topic=my-group-id-offsets
status.storage.topic=my-group-id-status</programlisting>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>Start the Kafka Connect workers with the <literal>/opt/kafka/config/connect-distributed.properties</literal> configuration file on all Kafka Connect nodes.</simpara>
<programlisting language="shell" linenumbering="unnumbered">su - kafka
/opt/kafka/bin/connect-distributed.sh /opt/kafka/config/connect-distributed.properties</programlisting>
</listitem>
<listitem>
<simpara>Verify that Kafka Connect is running.</simpara>
<programlisting language="shell" linenumbering="unnumbered">jcmd | grep ConnectDistributed</programlisting>
</listitem>
</orderedlist>
<itemizedlist>
<title>Additional resources</title>
<listitem>
<simpara>For more information about installing AMQ Streams, see <xref linkend="proc-installing-amq-streams-str"/>.</simpara>
</listitem>
<listitem>
<simpara>For more information about configuring AMQ Streams, see <xref linkend="proc-configuring-amq-streams-str"/>.</simpara>
</listitem>
<listitem>
<simpara>For a complete list of supported Kafka Connect configuration options, see <xref linkend="kafka-connect-configuration-parameters-str"/>.</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="proc-creating-connector-kafka-connect-distributed-str">
<title>Creating connectors</title>
<simpara>This procedure describes how to use the Kafka Connect REST API to create a connector plug-in for use with Kafka Connect in distributed mode.</simpara>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>A Kafka Connect installation running in distributed mode.</simpara>
</listitem>
</itemizedlist>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>Prepare a JSON payload with the connector configuration. For example:</simpara>
<programlisting language="json" linenumbering="unnumbered">{
  "name": "my-connector",
  "config": {
  "connector.class": "org.apache.kafka.connect.file.FileStreamSinkConnector",
    "tasks.max": "1",
    "topics": "my-topic-1,my-topic-2",
    "file": "/tmp/output-file.txt"
  }
}</programlisting>
</listitem>
<listitem>
<simpara>Send a POST request to <literal><emphasis>&lt;KafkaConnectAddress&gt;</emphasis>:8083/connectors</literal> to create the connector. The following example uses <literal>curl</literal>:</simpara>
<programlisting language="shell" linenumbering="unnumbered">curl -X POST -H "Content-Type: application/json" --data @sink-connector.json http://connect0.my-domain.com:8083/connectors</programlisting>
</listitem>
<listitem>
<simpara>Verify that the connector was deployed by sending a GET request to <literal><emphasis>&lt;KafkaConnectAddress&gt;</emphasis>:8083/connectors</literal>. The following example uses <literal>curl</literal>:</simpara>
<programlisting language="shell" linenumbering="unnumbered">curl http://connect0.my-domain.com:8083/connectors</programlisting>
</listitem>
</orderedlist>
</section>
<section xml:id="proc-deleting-connector-kafka-connect-distributed-str">
<title>Deleting connectors</title>
<simpara>This procedure describes how to use the Kafka Connect REST API to delete a connector plug-in from Kafka Connect in distributed mode.</simpara>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>A Kafka Connect installation running in distributed mode.</simpara>
</listitem>
</itemizedlist>
<orderedlist numeration="arabic">
<title>Deleting connectors</title>
<listitem>
<simpara>Verify that the connector exists by sending a <literal>GET</literal> request to <literal><emphasis>&lt;KafkaConnectAddress&gt;</emphasis>:8083/connectors/<emphasis>&lt;ConnectorName&gt;</emphasis></literal>.
The following example uses <literal>curl</literal>:</simpara>
<programlisting language="shell" linenumbering="unnumbered">curl http://connect0.my-domain.com:8083/connectors</programlisting>
</listitem>
<listitem>
<simpara>To delete the connector, send a <literal>DELETE</literal> request to <literal><emphasis>&lt;KafkaConnectAddress&gt;</emphasis>:8083/connectors</literal>.
The following example uses <literal>curl</literal>:</simpara>
<programlisting language="shell" linenumbering="unnumbered">curl -X DELETE http://connect0.my-domain.com:8083/connectors/my-connector</programlisting>
</listitem>
<listitem>
<simpara>Verify that the connector was deleted by sending a GET request to <literal><emphasis>&lt;KafkaConnectAddress&gt;</emphasis>:8083/connectors</literal>.
The following example uses <literal>curl</literal>:</simpara>
<programlisting language="shell" linenumbering="unnumbered">curl http://connect0.my-domain.com:8083/connectors</programlisting>
</listitem>
</orderedlist>
</section>
</section>
<section xml:id="con-kafka-connect-connector-plugins-str">
<title>Connector plug-ins</title>
<simpara>The following connector plug-ins are included with AMQ Streams.</simpara>
<simpara><literal>FileStreamSink</literal>
Reads data from Kafka topics and writes the data to a file.</simpara>
<simpara><literal>FileStreamSource</literal>
Reads data from a file and sends the data to Kafka topics.</simpara>
<simpara>You can add more connector plug-ins if needed. Kafka Connect searches for and runs additional connector plug-ins at startup. To define the path that kafka Connect searches for plug-ins, set the <literal>plugin.path configuration</literal> option:</simpara>
<programlisting language="ini" linenumbering="unnumbered">plugin.path=/opt/kafka/connector-plugins,/opt/connectors</programlisting>
<simpara>The <literal>plugin.path</literal> configuration option can contain a comma-separated list of paths.</simpara>
<simpara>When running Kafka Connect in distributed mode, plug-ins must be made available on all worker nodes.</simpara>
</section>
<section xml:id="proc-adding-connector-plugins-str">
<title>Adding connector plugins</title>
<simpara>This procedure shows you how to add additional connector plug-ins.</simpara>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>An installed and running AMQ Streams cluster.</simpara>
</listitem>
</itemizedlist>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>Create the <literal>/opt/kafka/connector-plugins</literal> directory.</simpara>
<programlisting language="shell" linenumbering="unnumbered">su - kafka
mkdir /opt/kafka/connector-plugins</programlisting>
</listitem>
<listitem>
<simpara>Edit the <literal>/opt/kafka/config/connect-standalone.properties</literal> or <literal>/opt/kafka/config/connect-distributed.properties</literal> Kafka Connect configuration file, and set the <literal>plugin.path</literal> option to <literal>/opt/kafka/connector-plugins</literal>. For example:</simpara>
<programlisting language="init" linenumbering="unnumbered">plugin.path=/opt/kafka/connector-plugins</programlisting>
</listitem>
<listitem>
<simpara>Copy your connector plug-ins to <literal>/opt/kafka/connector-plugins</literal>.</simpara>
</listitem>
<listitem>
<simpara>Start or restart the Kafka Connect workers.</simpara>
</listitem>
</orderedlist>
<itemizedlist>
<title>Additional resources</title>
<listitem>
<simpara>For more information on installing AMQ Streams, see <xref linkend="proc-installing-amq-streams-str"/>.</simpara>
</listitem>
<listitem>
<simpara>For more information on configuring AMQ Streams, see <xref linkend="proc-configuring-amq-streams-str"/>.</simpara>
</listitem>
<listitem>
<simpara>For more information on running Kafka Connect in standalone mode, see <xref linkend="proc-running-kafka-connect-standalone-str"/>.</simpara>
</listitem>
<listitem>
<simpara>For more information on running Kafka Connect in distributed mode, see <xref linkend="proc-running-kafka-connect-distributed-str"/>.</simpara>
</listitem>
<listitem>
<simpara>For a complete list of supported Kafka Connect configuration options, see <xref linkend="kafka-connect-configuration-parameters-str"/>.</simpara>
</listitem>
</itemizedlist>
</section>
</chapter>
<chapter xml:id="assembly-kafka-clients-str">
<title>Kafka clients</title>
<simpara>The <literal>kafka-clients</literal> JAR file contains the Kafka Producer and Consumer APIs together with the Kafka AdminClient API.</simpara>
<itemizedlist>
<listitem>
<simpara>The Producer API allows applications to send data to a Kafka broker.</simpara>
</listitem>
<listitem>
<simpara>The Consumer API allows applications to consume data from a Kafka broker.</simpara>
</listitem>
<listitem>
<simpara>The AdminClient API provides functionality for managing Kafka clusters, including topics, brokers, and other components.</simpara>
</listitem>
</itemizedlist>
<section xml:id="proc-adding-clients-dependency-to-maven-project-str">
<title>Adding Kafka clients as a dependency to your Maven project</title>
<simpara>This procedure shows you how to add the AMQ Streams Java clients as a dependency to your Maven project.</simpara>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>A Maven project with an existing <literal>pom.xml</literal>.</simpara>
</listitem>
</itemizedlist>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>Add the Red Hat Maven repository to the <literal>&lt;repositories&gt;</literal> section of your <literal>pom.xml</literal> file.</simpara>
<screen>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"&gt;

    &lt;!-- ... --&gt;

    &lt;repositories&gt;
        &lt;repository&gt;
            &lt;id&gt;redhat-maven&lt;/id&gt;
            &lt;url&gt;https://maven.repository.redhat.com/ga/&lt;/url&gt;
        &lt;/repository&gt;
    &lt;/repositories&gt;

    &lt;!-- ... --&gt;

&lt;/project&gt;</screen>
</listitem>
<listitem>
<simpara>Add the clients to the <literal>&lt;dependencies&gt;</literal> section of your <literal>pom.xml</literal> file.</simpara>
<screen>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"&gt;

    &lt;!-- ... --&gt;

    &lt;dependencies&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;org.apache.kafka&lt;/groupId&gt;
            &lt;artifactId&gt;kafka-clients&lt;/artifactId&gt;
            &lt;version&gt;2.3.0.redhat-00003&lt;/version&gt;
        &lt;/dependency&gt;
    &lt;/dependencies&gt;

    &lt;!-- ... --&gt;
&lt;/project&gt;</screen>
</listitem>
<listitem>
<simpara>Build your Maven project.</simpara>
</listitem>
</orderedlist>
</section>
</chapter>
<chapter xml:id="assembly-kafka-streams-str">
<title>Kafka Streams API overview</title>
<simpara>The Kafka Streams API allows applications to receive data from one or more input streams, execute complex operations like mapping, filtering or joining, and write the results into one or more output streams.
It is part of the <literal>kafka-streams</literal> JAR package that is available in the Red Hat Maven repository.</simpara>
<section xml:id="proc-adding-clients-dependency-str">
<title>Adding the Kafka Streams API as a dependency to your Maven project</title>
<simpara>This procedure shows you how to add the AMQ Streams Java clients as a dependency to your Maven project.</simpara>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>A Maven project with an existing <literal>pom.xml</literal>.</simpara>
</listitem>
</itemizedlist>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>Add the Red Hat Maven repository to the <literal>&lt;repositories&gt;</literal> section of your <literal>pom.xml</literal> file.</simpara>
<screen>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"&gt;

    &lt;!-- ... --&gt;

    &lt;repositories&gt;
        &lt;repository&gt;
            &lt;id&gt;redhat-maven&lt;/id&gt;
            &lt;url&gt;https://maven.repository.redhat.com/ga/&lt;/url&gt;
        &lt;/repository&gt;
    &lt;/repositories&gt;

    &lt;!-- ... --&gt;

&lt;/project&gt;</screen>
</listitem>
<listitem>
<simpara>Add <literal>kafka-streams</literal> to the <literal>&lt;dependencies&gt;</literal> section of your <literal>pom.xml</literal> file.</simpara>
<screen>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"&gt;

    &lt;!-- ... --&gt;

    &lt;dependencies&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;org.apache.kafka&lt;/groupId&gt;
            &lt;artifactId&gt;kafka-streams&lt;/artifactId&gt;
            &lt;version&gt;2.3.0.redhat-00003&lt;/version&gt;
        &lt;/dependency&gt;
    &lt;/dependencies&gt;

    &lt;!-- ... --&gt;
&lt;/project&gt;</screen>
</listitem>
<listitem>
<simpara>Build your Maven project.</simpara>
</listitem>
</orderedlist>
</section>
</chapter>
<chapter xml:id="kafka-bridge-concepts-str">
<title>Kafka Bridge</title>
<simpara>This chapter provides an overview of the AMQ Streams Kafka Bridge on Red Hat Enterprise Linux and helps you get started using its REST API to interact with AMQ Streams. To try out the Kafka Bridge in your local environment, see the <xref linkend="assembly-kafka-bridge-quickstart-str"/> later in this chapter.</simpara>
<itemizedlist>
<title>Additional resources</title>
<listitem>
<simpara>To view the API documentation, including example requests and responses, see the <link xlink:href="https://strimzi.io/docs/bridge/latest/">Kafka Bridge API reference</link>[Kafka Bridge API reference^].</simpara>
</listitem>
<listitem>
<simpara>To configure the Kafka Bridge for distributed tracing, see <xref linkend="proc-enabling-tracing-for-kafka-bridge-str"/>.</simpara>
</listitem>
</itemizedlist>
<section xml:id="assembly-kafka-bridge-overview-str">
<title>Kafka Bridge overview</title>
<simpara>The AMQ Streams Kafka Bridge provides an API for integrating HTTP-based clients with a Kafka cluster running on Red Hat Enterprise Linux. The API enables such clients to produce and consume messages without the requirement to use the native Kafka protocol.</simpara>
<simpara>The API has two main resources — <literal>consumers</literal> and <literal>topics</literal> — that are exposed and made accessible through endpoints to interact with consumers and producers in your Kafka cluster. The resources relate only to the Kafka Bridge, not the consumers and producers connected directly to Kafka.</simpara>
<simpara>You can:</simpara>
<itemizedlist>
<listitem>
<simpara>Send messages to a topic.</simpara>
</listitem>
<listitem>
<simpara>Create and delete consumers.</simpara>
</listitem>
<listitem>
<simpara>Subscribe consumers to topics, so that they start receiving messages from those topics.</simpara>
</listitem>
<listitem>
<simpara>Retrieve a list of the topics to which a consumer is subscribed.</simpara>
</listitem>
<listitem>
<simpara>Unsubscribe consumers from topics.</simpara>
</listitem>
<listitem>
<simpara>Assign partitions to consumers.</simpara>
</listitem>
<listitem>
<simpara>Retrieve messages from topics.</simpara>
</listitem>
<listitem>
<simpara>Commit a list of consumer offsets.</simpara>
</listitem>
<listitem>
<simpara>Seek on a partition, so that a consumer starts receiving messages from the first or last offset position, or a given offset position.</simpara>
</listitem>
</itemizedlist>
<simpara>Similar to an AMQ Streams installation, you can download the Kafka Bridge files for installation on Red Hat Enterprise Linux. See <xref linkend="proc-downloading-kafka-bridge-kafka-bridge-overview"/>.</simpara>
<simpara>For more information on configuring the host and port for the <literal>KafkaBridge</literal> resource, see <xref linkend="proc-configuring-kafka-bridge-kafka-bridge-overview"/>.</simpara>
<section xml:id="con-requests-kafka-bridge-kafka-bridge-overview">
<title>Requests to the Kafka Bridge</title>
<section xml:id="authentication_and_encryption" remap="_authentication_and_encryption">
<title>Authentication and encryption</title>
<simpara>Authentication and encryption between HTTP clients and the Kafka Bridge is not yet supported. This means that requests sent from clients to the Kafka Bridge are:</simpara>
<itemizedlist>
<listitem>
<simpara>Not encrypted, and must use HTTP rather than HTTPS</simpara>
</listitem>
<listitem>
<simpara>Sent without authentication</simpara>
</listitem>
</itemizedlist>
<simpara>You can configure <link linkend="assembly-kafka-encryption-and-authentication-str">TLS or SASL-based authentication</link> between the Kafka Bridge and your Kafka cluster.</simpara>
<simpara>You configure the Kafka Bridge for authentication through its <link linkend="proc-configuring-kafka-bridge-kafka-bridge-overview">properties file</link>.</simpara>
</section>
<section xml:id="data_formats_and_headers" remap="_data_formats_and_headers">
<title>Data formats and headers</title>
<simpara>Specify data formats and HTTP headers to ensure valid requests are submitted to the Kafka Bridge.</simpara>
<simpara>API request and response bodies are always encoded as JSON.</simpara>
<section xml:id="content_type_headers" remap="_content_type_headers">
<title>Content Type headers</title>
<simpara>A <literal>Content-Type</literal> header must be submitted for all requests (apart from the exception described below).</simpara>
<simpara>Consumer operations (<literal>/consumers</literal> endpoints) and producer operations (<literal>/topics</literal> endpoints) require different <literal>Content-Type</literal> headers.</simpara>
<formalpara>
<title>Content-Type headers for consumer operations</title>
<para>Regardless of the <link xlink:href="#embedded-data-format">embedded data format</link>, <literal>POST</literal> requests for consumer operations must provide the following <literal>Content-Type</literal> header if the request body contains data:</para>
</formalpara>
<programlisting language="http" linenumbering="unnumbered">Content-Type: application/vnd.kafka.v2+json</programlisting>
<simpara>Do not send a <literal>Content-Type</literal> header if the <literal>POST</literal> request body is empty, or the request will fail.</simpara>
<formalpara>
<title>Content-Type headers for producer operations</title>
<para>When performing producer operations, <literal>POST</literal> requests must provide the following <literal>Content-Type</literal> header specifying the desired <emphasis>embedded data format</emphasis>, either <literal>json</literal> or <literal>binary</literal>, as shown in the following table.</para>
</formalpara>
<informaltable frame="all" rowsep="1" colsep="1">
<tgroup cols="2">
<colspec colname="col_1" colwidth="50*"/>
<colspec colname="col_2" colwidth="50*"/>
<thead>
<row>
<entry align="left" valign="top">Embedded data format</entry>
<entry align="left" valign="top">Content-Type header</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left" valign="top"><simpara>JSON</simpara></entry>
<entry align="left" valign="top"><simpara><literal>Content-Type: application/vnd.kafka.json.v2+json</literal></simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>Binary</simpara></entry>
<entry align="left" valign="top"><simpara><literal>Content-Type: application/vnd.kafka.binary.v2+json</literal></simpara></entry>
</row>
</tbody>
</tgroup>
</informaltable>
<simpara>You set the embedded data format when creating a consumer using the <literal>consumers/groupid</literal> endpoint—​for more information, see the next section.</simpara>
<simpara>The <literal>Content-Type</literal> must not be set if the <literal>POST</literal> request has an empty body. An empty body can be used to create a consumer with the default values.</simpara>
</section>
<section xml:id="embedded-data-format">
<title>Embedded data format</title>
<simpara>The embedded data format is the format of the Kafka messages that are transmitted, over HTTP, from a producer to a consumer using the Kafka Bridge. Two embedded data formats are supported: JSON or binary.</simpara>
<simpara>When creating a consumer using the <literal>/consumers/groupid</literal> endpoint, the <literal>POST</literal> request body must specify an embedded data format of either JSON or binary. This is specified in the <literal>format</literal> field in the request body, for example:</simpara>
<programlisting language="json" linenumbering="unnumbered">{
  "name": "my-consumer",
  "format": "binary", <co xml:id="CO8-1"/>
...
}</programlisting>
<calloutlist>
<callout arearefs="CO8-1">
<para>A binary embedded data format.</para>
</callout>
</calloutlist>
<simpara>If an embedded data format for the consumer is not specified, then a binary format is set.</simpara>
<simpara>The embedded data format specified when creating a consumer must match the data format of the Kafka messages it will consume.</simpara>
<simpara>If you choose to specify a binary embedded data format, subsequent producer requests must provide the binary data in the request body as Base64-encoded strings. For example, when sending messages by making <literal>POST</literal> requests to the <literal>/topics/<emphasis>topicname</emphasis></literal> endpoint, the <literal>value</literal> must be encoded in Base64:</simpara>
<programlisting language="json" linenumbering="unnumbered">{
  "records": [
    {
      "key": "my-key",
      "value": "ZWR3YXJkdGhldGhyZWVsZWdnZWRjYXQ="
    },
  ]
}</programlisting>
<simpara>Producer requests must also provide a <literal>Content-Type</literal> header that corresponds to the embedded data format, for example, <literal>Content-Type: application/vnd.kafka.binary.v2+json</literal>.</simpara>
</section>
<section xml:id="accept_headers" remap="_accept_headers">
<title>Accept headers</title>
<simpara>After creating a consumer, all subsequent GET requests must provide an <literal>Accept</literal> header in the following format:</simpara>
<programlisting language="http" linenumbering="unnumbered">Accept: application/vnd.kafka.<emphasis>embedded-data-format</emphasis>.v2+json</programlisting>
<simpara>The <emphasis>embedded-data-format</emphasis> is either <literal>json</literal> or <literal>binary</literal>.</simpara>
<simpara>For example, when retrieving records for a subscribed consumer using an embedded data format of JSON, include this Accept header:</simpara>
<programlisting language="http" linenumbering="unnumbered">Accept: application/vnd.kafka.json.v2+json</programlisting>
</section>
</section>
</section>
<section xml:id="con-loggers-kafka-bridge-kafka-bridge-overview">
<title>Configuring loggers for the Kafka Bridge</title>
<simpara>The AMQ Streams Kafka bridge allows you to set a different log level for each operation that is defined by the related OpenAPI specification.</simpara>
<simpara>Each operation has a corresponding API endpoint through which the bridge receives requests from HTTP clients.
You can change the log level on each endpoint to produce more or less fine-grained logging information about the incoming and outgoing HTTP requests.</simpara>
<simpara>Loggers are defined in the <literal>log4j.properties</literal> file, which has the following default configuration for <literal>healthy</literal> and <literal>ready</literal> endpoints:</simpara>
<screen>log4j.logger.http.openapi.operation.healthy=WARN, out
log4j.additivity.http.openapi.operation.healthy=false
log4j.logger.http.openapi.operation.ready=WARN, out
log4j.additivity.http.openapi.operation.ready=false</screen>
<simpara>The log level of all other operations is set to <literal>INFO</literal> by default.
Loggers are formatted as follows:</simpara>
<screen>log4j.logger.http.openapi.operation.&lt;operation-id&gt;</screen>
<simpara>Where <literal>&lt;operation-id&gt;</literal> is the identifier of the specific operation.
Following is the list of operations defined by the OpenAPI specification:</simpara>
<itemizedlist>
<listitem>
<simpara><literal>createConsumer</literal></simpara>
</listitem>
<listitem>
<simpara><literal>deleteConsumer</literal></simpara>
</listitem>
<listitem>
<simpara><literal>subscribe</literal></simpara>
</listitem>
<listitem>
<simpara><literal>unsubscribe</literal></simpara>
</listitem>
<listitem>
<simpara><literal>poll</literal></simpara>
</listitem>
<listitem>
<simpara><literal>assign</literal></simpara>
</listitem>
<listitem>
<simpara><literal>commit</literal></simpara>
</listitem>
<listitem>
<simpara><literal>send</literal></simpara>
</listitem>
<listitem>
<simpara><literal>sendToPartition</literal></simpara>
</listitem>
<listitem>
<simpara><literal>seekToBeginning</literal></simpara>
</listitem>
<listitem>
<simpara><literal>seekToEnd</literal></simpara>
</listitem>
<listitem>
<simpara><literal>seek</literal></simpara>
</listitem>
<listitem>
<simpara><literal>healthy</literal></simpara>
</listitem>
<listitem>
<simpara><literal>ready</literal></simpara>
</listitem>
<listitem>
<simpara><literal>openapi</literal></simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="ref-api-resources-kafka-bridge-kafka-bridge-overview">
<title>Kafka Bridge API resources</title>
<simpara>For the full list of REST API endpoints and descriptions, including example requests and responses, see the <link xlink:href="https://strimzi.io/docs/bridge/latest/">Kafka Bridge API reference</link>[Kafka Bridge API reference^].</simpara>
</section>
<section xml:id="proc-downloading-kafka-bridge-kafka-bridge-overview">
<title>Downloading a Kafka Bridge archive</title>
<simpara>A zipped distribution of the AMQ Streams Kafka Bridge is available for download from the Red Hat website.</simpara>
<itemizedlist>
<title>Procedure</title>
<listitem>
<simpara>Download the latest version of the Red Hat AMQ Streams Kafka Bridge archive from the <link xlink:href="https://access.redhat.com/jbossnetwork/restricted/listSoftware.html?downloadType=distributions&amp;product=jboss.amq.streams&amp;productChanged=yes">Customer Portal</link>.</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="proc-configuring-kafka-bridge-kafka-bridge-overview">
<title>Configuring Kafka Bridge properties</title>
<simpara>This procedure describes how to configure the properties used by the AMQ Streams Kafka Bridge.</simpara>
<simpara>You configure the Kafka Bridge, as any other Kafka client, using appropriate prefixes for Kafka-related properties.</simpara>
<itemizedlist>
<listitem>
<simpara><literal>kafka.</literal> for general configuration that applies to producers and consumers, such as server connection and security.</simpara>
</listitem>
<listitem>
<simpara><literal>kafka.consumer.</literal> for consumer-specific configuration passed only to the consumer.</simpara>
</listitem>
<listitem>
<simpara><literal>kafka.producer.</literal> for producer-specific configuration passed only to the producer.</simpara>
</listitem>
</itemizedlist>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara><link linkend="proc-installing-amq-streams-str">AMQ Streams is installed on the host</link></simpara>
</listitem>
<listitem>
<simpara><link linkend="proc-downloading-kafka-bridge-kafka-bridge-overview">The Kafka Bridge installation archive is downloaded</link></simpara>
</listitem>
</itemizedlist>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>Edit the <literal>application.properties</literal> file provided with the AMQ Streams Kafka Bridge installation archive.</simpara>
<simpara>Use the properties file to specify Kafka and HTTP-related properties, and to enable and disable distributed tracing.</simpara>
<orderedlist numeration="loweralpha">
<listitem>
<simpara>Configure standard Kafka-related properties, including properties specific to the Kafka consumers and producers.</simpara>
<simpara>Use:</simpara>
<itemizedlist>
<listitem>
<simpara><literal>kafka.bootstrap.servers</literal> to define the host/port connections to the Kafka cluster</simpara>
</listitem>
<listitem>
<simpara><literal>kafka.producer.acks</literal> to provide acknowledgments to the HTTP client</simpara>
</listitem>
<listitem>
<simpara><literal>kafka.consumer.auto.offset.reset</literal> to determine how to manage reset of the offset in Kafka</simpara>
<simpara>For more information on configuration of Kafka properties, see the <link xlink:href="http://kafka.apache.org">Apache Kafka website</link></simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>Configure HTTP-related properties to enable HTTP access to the Kafka cluster.</simpara>
<programlisting language="properties" linenumbering="unnumbered">http.enabled=true
http.host=0.0.0.0
http.port=8080</programlisting>
</listitem>
<listitem>
<simpara>Enable and disable distributed tracing.</simpara>
<programlisting language="properties" linenumbering="unnumbered">bridge.tracing=jaeger</programlisting>
</listitem>
</orderedlist>
</listitem>
</orderedlist>
<itemizedlist>
<title>Additional resources</title>
<listitem>
<simpara><xref linkend="assembly-distributed-tracing-str"/></simpara>
</listitem>
<listitem>
<simpara><xref linkend="proc-enabling-tracing-for-kafka-bridge-str"/></simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="proc-installing-kafka-bridgekafka-bridge-overview">
<title>Installing the Kafka Bridge</title>
<simpara>Follow this procedure to install the AMQ Streams Kafka Bridge on Red Hat Enterprise Linux.</simpara>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara><link linkend="proc-installing-amq-streams-str">AMQ Streams is installed on the host</link></simpara>
</listitem>
<listitem>
<simpara><link linkend="proc-downloading-kafka-bridge-kafka-bridge-overview">The Kafka Bridge installation archive is downloaded</link></simpara>
</listitem>
<listitem>
<simpara><link linkend="proc-configuring-kafka-bridge-kafka-bridge-overview">The Kafka Bridge configuration properties are set</link></simpara>
</listitem>
</itemizedlist>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>If you have not already done so, unzip the AMQ Streams Kafka Bridge installation archive to any directory.</simpara>
</listitem>
<listitem>
<simpara>Run the Kafka Bridge script using the configuration properties as a parameter:</simpara>
<simpara>For example:</simpara>
<programlisting language="shell" linenumbering="unnumbered">./bin/kafka_bridge_run.sh --config-file=_path_/configfile.properties</programlisting>
</listitem>
<listitem>
<simpara>Check to see that the installation was successful in the log.</simpara>
<programlisting language="shell" linenumbering="unnumbered">HTTP-Kafka Bridge started and listening on port 8080
HTTP-Kafka Bridge bootstrap servers localhost:9092</programlisting>
</listitem>
</orderedlist>
</section>
</section>
<section xml:id="assembly-kafka-bridge-quickstart-str">
<title>Kafka Bridge quickstart</title>
<simpara>Use this quickstart to try out the AMQ Streams Kafka Bridge on Red Hat Enterprise Linux. You will learn how to:</simpara>
<itemizedlist>
<listitem>
<simpara>Install the Kafka Bridge</simpara>
</listitem>
<listitem>
<simpara>Produce messages to topics and partitions in your Kafka cluster</simpara>
</listitem>
<listitem>
<simpara>Create a Kafka Bridge consumer</simpara>
</listitem>
<listitem>
<simpara>Perform basic consumer operations, such as subscribing the consumer to topics and retrieving the messages that you produced</simpara>
</listitem>
</itemizedlist>
<simpara>In this quickstart, HTTP requests are formatted as curl commands that you can copy and paste to your terminal.</simpara>
<simpara>Ensure you have the prerequisites and then follow the tasks in the order provided in this chapter.</simpara>
<formalpara>
<title>About data formats</title>
<para>In this quickstart, you will produce and consume messages in JSON format, not binary. For more information on the data formats and HTTP headers used in the example requests, see <xref linkend="con-requests-kafka-bridge-kafka-bridge-overview"/>.</para>
</formalpara>
<itemizedlist>
<title>Prerequisites for the quickstart</title>
<listitem>
<simpara><link linkend="proc-installing-amq-streams-str">AMQ Streams is installed on the host</link></simpara>
</listitem>
<listitem>
<simpara><link linkend="proc-running-single-node-amq-streams-cluster-str">A single node AMQ Streams cluster is running</link></simpara>
</listitem>
<listitem>
<simpara><link linkend="proc-downloading-kafka-bridge-kafka-bridge-overview">The Kafka Bridge installation archive is downloaded</link></simpara>
</listitem>
</itemizedlist>
<section xml:id="proc-deploying-kafka-bridge-quickstart-kafka-bridge-quickstart">
<title>Deploying the Kafka Bridge locally</title>
<simpara>Deploy an instance of the AMQ Streams Kafka Bridge to the host. Use the <literal>application.properties</literal> file provided with the installation archive to apply the default configuration settings.</simpara>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>Open the <literal>application.properties</literal> file and check that the default  <literal>HTTP related settings</literal> are defined:</simpara>
<programlisting language="shell" linenumbering="unnumbered">http.enabled=true
http.host=0.0.0.0
http.port=8080</programlisting>
<simpara>This configures the Kafka Bridge to listen for requests on port 8080.</simpara>
</listitem>
<listitem>
<simpara>Run the Kafka Bridge script using the configuration properties as a parameter:</simpara>
<programlisting language="shell" linenumbering="unnumbered">./bin/kafka_bridge_run.sh --config-file=&lt;path&gt;/application.properties</programlisting>
</listitem>
</orderedlist>
<itemizedlist>
<title>What to do next</title>
<listitem>
<simpara><link linkend="proc-producing-messages-from-bridge-topics-partitions-kafka-bridge-quickstart">Produce messages to topics and partitions</link>.</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="proc-producing-messages-from-bridge-topics-partitions-kafka-bridge-quickstart">
<title>Producing messages to topics and partitions</title>
<simpara>Produce messages to a topic in JSON format by using the <link xlink:href="https://strimzi.io/docs/bridge/latest/#_send">topics</link> endpoint.</simpara>
<simpara>You can specify destination partitions for messages in the request body, as shown below. The <link xlink:href="https://strimzi.io/docs/bridge/latest/#_sendtopartition">partitions</link> endpoint provides an alternative method for specifying a single destination partition for all messages as a path parameter.</simpara>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>Create a Kafka topic using the <literal>kafka-topics.sh</literal> utility:</simpara>
<programlisting language="shell" linenumbering="unnumbered">bin/kafka-topics.sh --zookeeper localhost:2181 --create --topic bridge-quickstart-topic --partitions 3 --replication-factor 1 --config retention.ms=7200000 --config segment.bytes=1073741824</programlisting>
<simpara>Specify three partitions.</simpara>
</listitem>
<listitem>
<simpara>Verify that the topic was created:</simpara>
<programlisting language="shell" linenumbering="unnumbered">bin/kafka-topics.sh --zookeeper localhost:2181 --describe --topic bridge-quickstart-topic</programlisting>
</listitem>
<listitem>
<simpara>Using the Kafka Bridge, produce three messages to the topic you created:</simpara>
<programlisting language="curl" linenumbering="unnumbered">curl -X POST \
  http://localhost:8080/topics/bridge-quickstart-topic \
  -H 'content-type: application/vnd.kafka.json.v2+json' \
  -d '{
    "records": [
        {
            "key": "my-key",
            "value": "sales-lead-0001"
        },
        {
            "value": "sales-lead-0002",
            "partition": 2
        },
        {
            "value": "sales-lead-0003"
        }
    ]
}'</programlisting>
<itemizedlist>
<listitem>
<simpara><literal>sales-lead-0001</literal> is sent to a partition based on the hash of the key.</simpara>
</listitem>
<listitem>
<simpara><literal>sales-lead-0002</literal> is sent directly to partition 2.</simpara>
</listitem>
<listitem>
<simpara><literal>sales-lead-0003</literal> is sent to a partition in the <literal>bridge-quickstart-topic</literal> topic using a round-robin method.</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>If the request is successful, the Kafka Bridge returns an <literal>offsets</literal> array, along with a <literal>200</literal> (OK) code and a <literal>content-type</literal> header of <literal>application/vnd.kafka.v2+json</literal>. For each message, the <literal>offsets</literal> array describes:</simpara>
<itemizedlist>
<listitem>
<simpara>The partition that the message was sent to</simpara>
</listitem>
<listitem>
<simpara>The current message offset of the partition</simpara>
<formalpara>
<title>Example response</title>
<para>
<programlisting language="json" linenumbering="unnumbered">#...
{
  "offsets":[
    {
      "partition":0,
      "offset":0
    },
    {
      "partition":2,
      "offset":0
    },
    {
      "partition":0,
      "offset":1
    }
  ]
}</programlisting>
</para>
</formalpara>
</listitem>
</itemizedlist>
</listitem>
</orderedlist>
<formalpara>
<title>What to do next</title>
<para>After producing messages to topics and partitions, <link linkend="proc-creating-kafka-bridge-consumer-kafka-bridge-quickstart">create a Kafka Bridge consumer</link>.</para>
</formalpara>
<itemizedlist>
<title>Additional resources</title>
<listitem>
<simpara><link xlink:href="https://strimzi.io/docs/bridge/latest/#_send">POST /topics/{topicname}</link> in the API reference documentation.</simpara>
</listitem>
<listitem>
<simpara><link xlink:href="https://strimzi.io/docs/bridge/latest/#_sendtopartition">POST /topics/{topicname}/partitions/{partitionid}</link> in the API reference documentation.</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="proc-creating-kafka-bridge-consumer-kafka-bridge-quickstart">
<title>Creating a Kafka Bridge consumer</title>
<simpara>Before you can perform any consumer operations on the Kafka cluster, you must first create a consumer by using the <link xlink:href="https://strimzi.io/docs/bridge/latest/#_createconsumer">consumers</link> endpoint. The consumer is referred to as a <emphasis>Kafka Bridge consumer</emphasis>.</simpara>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>Create a Kafka Bridge consumer in a new consumer group named <literal>bridge-quickstart-consumer-group</literal>:</simpara>
<programlisting language="curl" linenumbering="unnumbered">curl -X POST http://localhost:8080/consumers/bridge-quickstart-consumer-group \
  -H 'content-type: application/vnd.kafka.v2+json' \
  -d '{
    "name": "bridge-quickstart-consumer",
    "auto.offset.reset": "earliest",
    "format": "json",
    "enable.auto.commit": false,
    "fetch.min.bytes": 512,
    "consumer.request.timeout.ms": 30000
  }'</programlisting>
<itemizedlist>
<listitem>
<simpara>The consumer is named <literal>bridge-quickstart-consumer</literal> and the embedded data format is set as <literal>json</literal>.</simpara>
</listitem>
<listitem>
<simpara>The consumer will not commit offsets to the log automatically because the <literal>enable.auto.commit</literal> setting is <literal>false</literal>. You will commit the offsets manually later in this quickstart.</simpara>
<note>
<simpara>The Kafka Bridge generates a random consumer name if you do not specify a consumer name in the request body.</simpara>
</note>
<simpara>If the request is successful, the Kafka Bridge returns the consumer ID (<literal>instance_id</literal>) and base URL (<literal>base_uri</literal>) in the response body, along with a <literal>200</literal> (OK) code.</simpara>
<formalpara>
<title>Example response</title>
<para>
<programlisting language="json" linenumbering="unnumbered">#...
{
  "instance_id": "bridge-quickstart-consumer",
  "base_uri":"http://&lt;bridge-name&gt;-bridge-service:8080/consumers/bridge-quickstart-consumer-group/instances/bridge-quickstart-consumer"
}</programlisting>
</para>
</formalpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>Copy the base URL (<literal>base_uri</literal>) to use in the other consumer operations in this quickstart.</simpara>
</listitem>
</orderedlist>
<formalpara>
<title>What to do next</title>
<para>Now that you have created a Kafka Bridge consumer, you can  <link linkend="proc-bridge-subscribing-consumer-topics-kafka-bridge-quickstart">subscribe it to topics</link>.</para>
</formalpara>
<itemizedlist>
<title>Additional resources</title>
<listitem>
<simpara><link xlink:href="https://strimzi.io/docs/bridge/latest/#_createconsumer">POST /consumers/{groupid}</link> in the API reference documentation.</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="proc-bridge-subscribing-consumer-topics-kafka-bridge-quickstart">
<title>Subscribing a Kafka Bridge consumer to topics</title>
<simpara>Subscribe the Kafka Bridge consumer to one or more topics by using the <link xlink:href="https://strimzi.io/docs/bridge/latest/#_subscribe">subscription</link> endpoint. Once subscribed, the consumer starts receiving all messages that are produced to the topic.</simpara>
<itemizedlist>
<title>Procedure</title>
<listitem>
<simpara>Subscribe the consumer to the <literal>bridge-quickstart-topic</literal> topic that you created earlier, in <link linkend="proc-producing-messages-from-bridge-topics-partitions-kafka-bridge-quickstart">Producing messages to topics and partitions</link>:</simpara>
<programlisting language="curl" linenumbering="unnumbered">curl -X POST http://localhost:8080/consumers/bridge-quickstart-consumer-group/instances/bridge-quickstart-consumer/subscription \
  -H 'content-type: application/vnd.kafka.v2+json' \
  -d '{
    "topics": [
        "bridge-quickstart-topic"
    ]
}'</programlisting>
<simpara>The <literal>topics</literal> array can contain a single topic (as shown above) or multiple topics. If you want to subscribe the consumer to multiple topics that match a regular expression, you can use the <literal>topic_pattern</literal> string instead of the <literal>topics</literal> array.</simpara>
<simpara>If the request is successful, the Kafka Bridge returns a <literal>204 No Content</literal> code only.</simpara>
</listitem>
</itemizedlist>
<formalpara>
<title>What to do next</title>
<para>After subscribing a Kafka Bridge consumer to topics, you can <link linkend="proc-bridge-retrieving-latest-messages-from-consumer-kafka-bridge-quickstart">retrieve messages from the consumer</link>.</para>
</formalpara>
<itemizedlist>
<title>Additional resources</title>
<listitem>
<simpara><link xlink:href="https://strimzi.io/docs/bridge/latest/#_subscribe">POST /consumers/{groupid}/instances/{name}/subscription</link> in the API reference documentation.</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="proc-bridge-retrieving-latest-messages-from-consumer-kafka-bridge-quickstart">
<title>Retrieving the latest messages from a Kafka Bridge consumer</title>
<simpara>Retrieve the latest messages from the Kafka Bridge consumer by requesting data from the <link xlink:href="https://strimzi.io/docs/bridge/latest/#_poll">records</link> endpoint. In production, HTTP clients can call this endpoint repeatedly (in a loop).</simpara>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>Produce additional messages to the Kafka Bridge consumer, as described in <link linkend="proc-producing-messages-from-bridge-topics-partitions-kafka-bridge-quickstart">Producing messages to topics and partitions</link>.</simpara>
</listitem>
<listitem>
<simpara>Submit a <literal>GET</literal> request to the <literal>records</literal> endpoint:</simpara>
<programlisting language="curl" linenumbering="unnumbered">curl -X GET http://localhost:8080/consumers/bridge-quickstart-consumer-group/instances/bridge-quickstart-consumer/records \
  -H 'accept: application/vnd.kafka.json.v2+json'</programlisting>
<simpara>After creating and subscribing to a Kafka Bridge consumer, a first GET request will return an empty response because the poll operation triggers a rebalancing process to assign partitions.</simpara>
</listitem>
<listitem>
<simpara>Repeat step two to retrieve messages from the Kafka Bridge consumer.</simpara>
<simpara>The Kafka Bridge returns an array of messages — describing the topic name, key, value, partition, and offset — in the response body, along with a <literal>200</literal> (OK) code. Messages are retrieved from the latest offset by default.</simpara>
<programlisting language="json" linenumbering="unnumbered">HTTP/1.1 200 OK
content-type: application/vnd.kafka.json.v2+json
#...
[
  {
    "topic":"bridge-quickstart-topic",
    "key":"my-key",
    "value":"sales-lead-0001",
    "partition":0,
    "offset":0
  },
  {
    "topic":"bridge-quickstart-topic",
    "key":null,
    "value":"sales-lead-0003",
    "partition":0,
    "offset":1
  },
#...</programlisting>
<note>
<simpara>If an empty response is returned, produce more records to the consumer as described in <link linkend="proc-producing-messages-from-bridge-topics-partitions-kafka-bridge-quickstart">Producing messages to topics and partitions</link>, and then try retrieving messages again.</simpara>
</note>
</listitem>
</orderedlist>
<formalpara>
<title>What to do next</title>
<para>After retrieving messages from a Kafka Bridge consumer, try <link linkend="proc-bridge-committing-consumer-offsets-to-log-kafka-bridge-quickstart">committing offsets to the log</link>.</para>
</formalpara>
<itemizedlist>
<title>Additional resources</title>
<listitem>
<simpara><link xlink:href="https://strimzi.io/docs/bridge/latest/#_poll">GET /consumers/{groupid}/instances/{name}/records</link> in the API reference documentation.</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="proc-bridge-committing-consumer-offsets-to-log-kafka-bridge-quickstart">
<title>Commiting offsets to the log</title>
<simpara>Use the <link xlink:href="https://strimzi.io/docs/bridge/latest/#_commit">offsets</link> endpoint to manually commit  offsets to the log for all messages received by the Kafka Bridge consumer. This is required because the Kafka Bridge consumer that you created earlier, in <link linkend="proc-creating-kafka-bridge-consumer-kafka-bridge-quickstart">Creating a Kafka Bridge consumer</link>, was configured with the <literal>enable.auto.commit</literal> setting as <literal>false</literal>.</simpara>
<itemizedlist>
<title>Procedure</title>
<listitem>
<simpara>Commit offsets to the log for the <literal>bridge-quickstart-consumer</literal>:</simpara>
<programlisting language="curl" linenumbering="unnumbered">curl -X POST http://localhost:8080/consumers/bridge-quickstart-consumer-group/instances/bridge-quickstart-consumer/offsets</programlisting>
<simpara>Because no request body is submitted, offsets are committed for all the records that have been received by the consumer. Alternatively, the request body can contain an array (<link xlink:href="https://strimzi.io/docs/bridge/latest/#_offsetcommitseeklist">OffsetCommitSeekList</link>) that specifies the topics and partitions that you want to commit offsets for.</simpara>
<simpara>If the request is successful, the Kafka Bridge returns a <literal>204 No Content</literal> code only.</simpara>
</listitem>
</itemizedlist>
<formalpara>
<title>What to do next</title>
<para>After committing offsets to the log, try out the endpoints for <link linkend="proc-bridge-seeking-offset-for-partition-kafka-bridge-quickstart">seeking to offsets</link>.</para>
</formalpara>
<itemizedlist>
<title>Additional resources</title>
<listitem>
<simpara><link xlink:href="https://strimzi.io/docs/bridge/latest/#_commit">POST /consumers/{groupid}/instances/{name}/offsets</link> in the API reference documentation.</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="proc-bridge-seeking-offset-for-partition-kafka-bridge-quickstart">
<title>Seeking to offsets for a partition</title>
<simpara>Use the <link xlink:href="https://strimzi.io/docs/bridge/latest/#_seek">positions</link> endpoints to configure the Kafka Bridge consumer to retrieve messages for a partition from a specific offset, and then from the latest offset. This is referred to in Apache Kafka as a seek operation.</simpara>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>Seek to a specific offset for partition 0 of the <literal>quickstart-bridge-topic</literal> topic:</simpara>
<programlisting language="curl" linenumbering="unnumbered">curl -X POST http://localhost:8080/consumers/bridge-quickstart-consumer-group/instances/bridge-quickstart-consumer/positions \
  -H 'content-type: application/vnd.kafka.v2+json' \
  -d '{
    "offsets": [
        {
            "topic": "bridge-quickstart-topic",
            "partition": 0,
            "offset": 2
        }
    ]
}'</programlisting>
<simpara>If the request is successful, the Kafka Bridge returns a <literal>204 No Content</literal> code only.</simpara>
</listitem>
<listitem>
<simpara>Submit a <literal>GET</literal> request to the <literal>records</literal> endpoint:</simpara>
<programlisting language="curl" linenumbering="unnumbered">curl -X GET http://localhost:8080/consumers/bridge-quickstart-consumer-group/instances/bridge-quickstart-consumer/records \
  -H 'accept: application/vnd.kafka.json.v2+json'</programlisting>
<simpara>The Kafka Bridge returns messages from the offset that you seeked to.</simpara>
</listitem>
<listitem>
<simpara>Restore the default message retrieval behavior by seeking to the last offset for the same partition. This time, use the <link xlink:href="https://strimzi.io/docs/bridge/latest/#_seektoend">positions/end</link> endpoint.</simpara>
<programlisting language="curl" linenumbering="unnumbered">curl -X POST http://localhost:8080/consumers/bridge-quickstart-consumer-group/instances/bridge-quickstart-consumer/positions/end \
  -H 'content-type: application/vnd.kafka.v2+json' \
  -d '{
    "partitions": [
        {
            "topic": "bridge-quickstart-topic",
            "partition": 0
        }
    ]
}'</programlisting>
<simpara>If the request is successful, the Kafka Bridge returns another <literal>204 No Content</literal> code.</simpara>
</listitem>
</orderedlist>
<note>
<simpara>You can also use the <link xlink:href="https://strimzi.io/docs/bridge/latest/#_seektobeginning">positions/beginning</link> endpoint to seek to the first offset for one or more partitions.</simpara>
</note>
<formalpara>
<title>What to do next</title>
<para>In this quickstart, you have used the AMQ Streams Kafka Bridge to perform several common operations on a Kafka cluster. You can now <link linkend="proc-bridge-deleting-consumer-kafka-bridge-quickstart">delete the Kafka Bridge consumer</link> that you created earlier.</para>
</formalpara>
<itemizedlist>
<title>Additional resources</title>
<listitem>
<simpara><link xlink:href="https://strimzi.io/docs/bridge/latest/#_seek">POST /consumers/{groupid}/instances/{name}/positions</link> in the API reference documentation.</simpara>
</listitem>
<listitem>
<simpara><link xlink:href="https://strimzi.io/docs/bridge/latest/#_seektobeginning">POST /consumers/{groupid}/instances/{name}/positions/beginning</link> in the API reference documentation.</simpara>
</listitem>
<listitem>
<simpara><link xlink:href="https://strimzi.io/docs/bridge/latest/#_seektoend">POST /consumers/{groupid}/instances/{name}/positions/end</link> in the API reference documentation.</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="proc-bridge-deleting-consumer-kafka-bridge-quickstart">
<title>Deleting a Kafka Bridge consumer</title>
<simpara>Finally, delete the Kafa Bridge consumer that you used throughout this quickstart.</simpara>
<itemizedlist>
<title>Procedure</title>
<listitem>
<simpara>Delete the Kafka Bridge consumer by sending a <literal>DELETE</literal> request to the <link xlink:href="https://strimzi.io/docs/bridge/latest/#_deleteconsumer">instances</link> endpoint.</simpara>
<programlisting language="curl" linenumbering="unnumbered">curl -X DELETE http://localhost:8080/consumers/bridge-quickstart-consumer-group/instances/bridge-quickstart-consumer</programlisting>
<simpara>If the request is successful, the Kafka Bridge returns a <literal>204 No Content</literal> code only.</simpara>
</listitem>
</itemizedlist>
<itemizedlist>
<title>Additional resources</title>
<listitem>
<simpara><link xlink:href="https://strimzi.io/docs/bridge/latest/#_deleteconsumer">DELETE /consumers/{groupid}/instances/{name}</link> in the API reference documentation.</simpara>
</listitem>
</itemizedlist>
</section>
</section>
</chapter>
<chapter xml:id="assembly-distributed-tracing-str">
<title>Distributed tracing</title>
<simpara>AMQ Streams on Red Hat Enterprise Linux supports distributed tracing with Jaeger for:</simpara>
<itemizedlist>
<listitem>
<simpara>Kafka Producers, Kafka Consumers, and Kafka Streams applications (referred to as <emphasis>Kafka clients</emphasis>)</simpara>
</listitem>
<listitem>
<simpara>MirrorMaker and Kafka Connect</simpara>
</listitem>
<listitem>
<simpara>Kafka Bridge</simpara>
</listitem>
</itemizedlist>
<simpara>The steps to configure distributed tracing vary by client and component. However, three high-level tasks are involved:</simpara>
<orderedlist numeration="arabic">
<listitem>
<simpara>Enable a Jaeger tracer for the client or component.</simpara>
</listitem>
<listitem>
<simpara>Enable the Interceptors for the client or component.</simpara>
<itemizedlist>
<listitem>
<simpara>For Kafka clients, enabling the Interceptors involves <emphasis>instrumenting</emphasis> your application code for OpenTracing.</simpara>
</listitem>
<listitem>
<simpara>For MirrorMaker, Kafka Connect, and the Kafka Bridge, enabling the Interceptors involves setting configuration properties for each component.</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>Set tracing environment variables before deploying the client or component.</simpara>
</listitem>
</orderedlist>
<simpara>This chapter provides an overview of distributed tracing, as well as instructions for configuring supported clients and components. Setting up distributed tracing for applications and systems beyond AMQ Streams is outside the scope of this chapter. To learn more about this subject, see the <link xlink:href="https://opentracing.io/docs/overview/">OpenTracing documentation</link> and search for "inject and extract".</simpara>
<note>
<simpara>Distributed tracing is not supported for Kafka brokers.</simpara>
</note>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>The Jaeger backend components are deployed to the host operating system. For deployment instructions, see the <link xlink:href="https://www.jaegertracing.io/docs/1.14/deployment/">Jaeger deployment documentation</link>.</simpara>
</listitem>
</itemizedlist>
<section xml:id="con-overview-distributed-tracing-str">
<title>Overview of distributed tracing</title>
<simpara>Distributed tracing allows developers and system administrators to track the progress of transactions between applications (and services in a microservice architecture) in a distributed system. This information is useful for monitoring application performance and investigating issues with target systems and end-user applications.</simpara>
<simpara>In AMQ Streams, distributed tracing facilitates the end-to-end tracking of messages: from source systems to the Kafka cluster and then to target systems and applications.</simpara>
<simpara>As an aspect of system observability, distributed tracing complements the metrics that are available to view in <link linkend="con-metrics-kafka-exporter-grafana-str">Grafana</link> dashboards and the available loggers for each component.</simpara>
<section xml:id="opentracing_and_jaeger" remap="_opentracing_and_jaeger">
<title>OpenTracing and Jaeger</title>
<simpara>The <link xlink:href="https://opentracing.io/">OpenTracing</link> and <link xlink:href="https://www.jaegertracing.io/">Jaeger</link> projects are used to implement distributed tracing in AMQ Streams.</simpara>
<formalpara>
<title>OpenTracing</title>
<para>The OpenTracing specification defines APIs that developers can use to instrument applications for distributed tracing. When you instrument an application, you add instrumentation code in order to monitor the execution of individual transactions. When instrumented, applications generate <emphasis>traces</emphasis> when individual transactions occur. Traces are composed of <emphasis>spans</emphasis>, which define specific units of work.</para>
</formalpara>
<simpara>To simplify the instrumentation of Kafka clients, AMQ Streams includes the <link xlink:href="https://github.com/opentracing-contrib/java-kafka-client/blob/master/README.md">OpenTracing Apache Kafka Client Instrumentation</link> library.</simpara>
<note>
<simpara>The OpenTracing project is merging with the OpenCensus project to form the <link xlink:href="https://opentelemetry.io/">OpenTelemetry</link> project. OpenTelemetry will provide compatibility for applications that are instrumented using the OpenTracing APIs.</simpara>
</note>
<formalpara>
<title>Jaeger</title>
<para>Jaeger, a tracing system, is an implementation of the OpenTracing APIs. Jaeger is used for monitoring and troubleshooting microservices-based distributed systems and provides client libraries for instrumenting applications.</para>
</formalpara>
<simpara>Jaeger samples the total traces generated by an application, based on a set sampling strategy, and then visualizes them in a user interface. This allows you to visualize, query, filter, and analyze trace data.</simpara>
<formalpara>
<title>An example of a query in the Jaeger user interface</title>
<para><inlinemediaobject>
<imageobject>
<imagedata fileref="images/image_con-overview-distributed-tracing.png"/>
</imageobject>
<textobject><phrase>Simple Jaeger query</phrase></textobject>
</inlinemediaobject></para>
</formalpara>
</section>
</section>
<section xml:id="assembly-setting-up-tracing-kafka-clients-str">
<title>Configuring Kafka clients for tracing</title>
<simpara>This section describes how to configure Kafka clients (Kafka Producers, Kafka Consumers, and Kafka Streams applications) for distributed tracing.</simpara>
<section xml:id="proc-configuring-jaeger-tracer-kafka-clients-str">
<title>Enabling a Jaeger tracer for Kafka clients</title>
<simpara>Configure and enable a Jaeger tracer using the <link linkend="ref-tracing-environment-variables-str">tracing environment variables</link>.</simpara>
<formalpara>
<title>Procedure</title>
<para>Perform the following steps for each Kafka client (Kafka Producer, Kafka Consumer, and Kafka Streams application):</para>
</formalpara>
<orderedlist numeration="arabic">
<listitem>
<simpara>Add Maven dependencies for Jaeger to the <literal>pom.xml</literal> file for the client:</simpara>
<programlisting language="xml" linenumbering="unnumbered">&lt;dependency&gt;
    &lt;groupId&gt;io.jaegertracing&lt;/groupId&gt;
    &lt;artifactId&gt;jaeger-client&lt;/artifactId&gt;
    &lt;version&gt;1.0.0&lt;/version&gt;
&lt;/dependency&gt;</programlisting>
</listitem>
<listitem>
<simpara>Define the configuration of the Jaeger tracer using the <link linkend="ref-tracing-environment-variables-str">tracing environment variables</link>.</simpara>
</listitem>
<listitem>
<simpara>Create the Jaeger tracer from the environment variables that you defined in step two:</simpara>
<programlisting language="java" linenumbering="unnumbered">Tracer tracer = Configuration.fromEnv().getTracer();</programlisting>
<note>
<simpara>For alternative ways to initialize a Jaeger tracer, see the <link xlink:href="https://github.com/jaegertracing/jaeger-client-java/tree/master/jaeger-core">Java OpenTracing library</link> documentation.</simpara>
</note>
</listitem>
<listitem>
<simpara>Register the Jaeger tracer as a global tracer:</simpara>
<programlisting language="java" linenumbering="unnumbered">GlobalTracer.register(tracer);</programlisting>
</listitem>
</orderedlist>
<simpara>A Jaeger tracer is now enabled for the Kafka client to use.</simpara>
</section>
<section xml:id="proc-instrumenting-producers-consumers-for-tracing-str">
<title>Instrumenting Kafka Producers and Consumers for tracing</title>
<simpara>Use a Decorator pattern or Interceptors to instrument your Kafka Producer and Consumer application code for distributed tracing. When instrumented, the Interceptors in the Kafka Producer or Consumer are enabled.</simpara>
<formalpara>
<title>Procedure</title>
<para>Perform the following steps in the application code of each Kafka Producer and Consumer:</para>
</formalpara>
<orderedlist numeration="arabic">
<listitem>
<simpara>Add a Maven dependency for OpenTracing to the Producer or Consumer’s <literal>pom.xml</literal> file.</simpara>
<programlisting language="xml" linenumbering="unnumbered">&lt;dependency&gt;
    &lt;groupId&gt;io.opentracing.contrib&lt;/groupId&gt;
    &lt;artifactId&gt;opentracing-kafka-client&lt;/artifactId&gt;
    &lt;version&gt;0.1.4&lt;/version&gt;
&lt;/dependency&gt;</programlisting>
</listitem>
<listitem>
<simpara>Instrument your client application code using either a Decorator pattern or Interceptors.</simpara>
<itemizedlist>
<listitem>
<simpara>If you prefer to use a Decorator pattern, use following example:</simpara>
<programlisting language="java" linenumbering="unnumbered">// Create an instance of the KafkaProducer:
KafkaProducer&lt;Integer, String&gt; producer = new KafkaProducer&lt;&gt;(senderProps);

// Create an instance of the TracingKafkaProducer:
TracingKafkaProducer&lt;Integer, String&gt; tracingProducer = new TracingKafkaProducer&lt;&gt;(producer,
        tracer);

// Send:
tracingProducer.send(...);

// Create an instance of the KafkaConsumer:
KafkaConsumer&lt;Integer, String&gt; consumer = new KafkaConsumer&lt;&gt;(consumerProps);

// Create an instance of the TracingKafkaConsumer:
TracingKafkaConsumer&lt;Integer, String&gt; tracingConsumer = new TracingKafkaConsumer&lt;&gt;(consumer,
        tracer);

// Subscribe:
tracingConsumer.subscribe(Collections.singletonList("messages"));

// Get messages:
ConsumerRecords&lt;Integer, String&gt; records = tracingConsumer.poll(1000);

// Retrieve SpanContext from polled record (consumer side):
ConsumerRecord&lt;Integer, String&gt; record = ...
SpanContext spanContext = TracingKafkaUtils.extractSpanContext(record.headers(), tracer);</programlisting>
</listitem>
<listitem>
<simpara>If you prefer to use Interceptors, use the following example:</simpara>
<programlisting language="java" linenumbering="unnumbered">// Register the tracer with GlobalTracer:
GlobalTracer.register(tracer);

// Add the TracingProducerInterceptor to the sender properties:
senderProps.put(ProducerConfig.INTERCEPTOR_CLASSES_CONFIG,
          TracingProducerInterceptor.class.getName());

// Create an instance of the KafkaProducer:
KafkaProducer&lt;Integer, String&gt; producer = new KafkaProducer&lt;&gt;(senderProps);

// Send:
producer.send(...);

// Add the TracingConsumerInterceptor to the consumer properties:
consumerProps.put(ConsumerConfig.INTERCEPTOR_CLASSES_CONFIG,
          TracingConsumerInterceptor.class.getName());

// Create an instance of the KafkaConsumer:
KafkaConsumer&lt;Integer, String&gt; consumer = new KafkaConsumer&lt;&gt;(consumerProps);

// Subscribe:
consumer.subscribe(Collections.singletonList("messages"));

// Get messages:
ConsumerRecords&lt;Integer, String&gt; records = consumer.poll(1000);

// Retrieve the SpanContext from a polled message (consumer side):
ConsumerRecord&lt;Integer, String&gt; record = ...
SpanContext spanContext = TracingKafkaUtils.extractSpanContext(record.headers(), tracer);</programlisting>
</listitem>
</itemizedlist>
</listitem>
</orderedlist>
<section xml:id="custom_span_names_in_a_decorator_pattern" remap="_custom_span_names_in_a_decorator_pattern">
<title>Custom span names in a Decorator pattern</title>
<simpara>A <emphasis>span</emphasis> is a logical unit of work in Jaeger, with an operation name, start time, and duration.</simpara>
<simpara>If you use a Decorator pattern to instrument your Kafka Producer and Consumer applications, you can define custom span names by passing a <literal>BiFunction</literal> object as an additional argument when creating the <literal>TracingKafkaProducer</literal> and <literal>TracingKafkaConsumer</literal> objects. The OpenTracing Apache Kafka Client Instrumentation library includes several built-in span names, which are described below.</simpara>
<formalpara>
<title>Example: Using custom span names to instrument client application code in a Decorator pattern</title>
<para>
<programlisting language="java" linenumbering="unnumbered">// Create a BiFunction for the KafkaProducer that operates on (String operationName, ProducerRecord consumerRecord) and returns a String to be used as the name:

BiFunction&lt;String, ProducerRecord, String&gt; producerSpanNameProvider =
    (operationName, producerRecord) -&gt; "CUSTOM_PRODUCER_NAME";

// Create an instance of the KafkaProducer:
KafkaProducer&lt;Integer, String&gt; producer = new KafkaProducer&lt;&gt;(senderProps);

// Create an instance of the TracingKafkaProducer
TracingKafkaProducer&lt;Integer, String&gt; tracingProducer = new TracingKafkaProducer&lt;&gt;(producer,
        tracer,
        producerSpanNameProvider);

// Spans created by the tracingProducer will now have "CUSTOM_PRODUCER_NAME" as the span name.

// Create a BiFunction for the KafkaConsumer that operates on (String operationName, ConsumerRecord consumerRecord) and returns a String to be used as the name:

BiFunction&lt;String, ConsumerRecord, String&gt; consumerSpanNameProvider =
    (operationName, consumerRecord) -&gt; operationName.toUpperCase();

// Create an instance of the KafkaConsumer:
KafkaConsumer&lt;Integer, String&gt; consumer = new KafkaConsumer&lt;&gt;(consumerProps);

// Create an instance of the TracingKafkaConsumer, passing in the consumerSpanNameProvider BiFunction:

TracingKafkaConsumer&lt;Integer, String&gt; tracingConsumer = new TracingKafkaConsumer&lt;&gt;(consumer,
        tracer,
        consumerSpanNameProvider);

// Spans created by the tracingConsumer will have the operation name as the span name, in upper-case.
// "receive" -&gt; "RECEIVE"</programlisting>
</para>
</formalpara>
</section>
<section xml:id="built_in_span_names" remap="_built_in_span_names">
<title>Built-in span names</title>
<simpara>When defining custom span names, you can use the following <literal>BiFunctions</literal> in the <literal>ClientSpanNameProvider</literal> class. If no <literal>spanNameProvider</literal> is specified, <literal>CONSUMER_OPERATION_NAME</literal> and <literal>PRODUCER_OPERATION_NAME</literal> are used.</simpara>
<informaltable frame="all" rowsep="1" colsep="1">
<tgroup cols="2">
<colspec colname="col_1" colwidth="50*"/>
<colspec colname="col_2" colwidth="50*"/>
<thead>
<row>
<entry align="left" valign="top">BiFunction</entry>
<entry align="left" valign="top">Description</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left" valign="top"><simpara><literal>CONSUMER_OPERATION_NAME, PRODUCER_OPERATION_NAME</literal></simpara></entry>
<entry align="left" valign="top"><simpara>Returns the <literal>operationName</literal> as the span name: "receive" for Consumers and "send" for Producers.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal>CONSUMER_PREFIXED_OPERATION_NAME(String prefix), PRODUCER_PREFIXED_OPERATION_NAME(String prefix)</literal></simpara></entry>
<entry align="left" valign="top"><simpara>Returns a String concatenation of <literal>prefix</literal> and <literal>operationName</literal>.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal>CONSUMER_TOPIC, PRODUCER_TOPIC</literal></simpara></entry>
<entry align="left" valign="top"><simpara>Returns the name of the topic that the message was sent to or retrieved from in the format <literal>(record.topic())</literal>.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal>PREFIXED_CONSUMER_TOPIC(String prefix), PREFIXED_PRODUCER_TOPIC(String prefix)</literal></simpara></entry>
<entry align="left" valign="top"><simpara>Returns a String concatenation of <literal>prefix</literal> and the topic name in the format <literal>(record.topic())</literal>.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal>CONSUMER_OPERATION_NAME_TOPIC, PRODUCER_OPERATION_NAME_TOPIC</literal></simpara></entry>
<entry align="left" valign="top"><simpara>Returns the operation name and the topic name: <literal>"operationName - record.topic()"</literal>.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal>CONSUMER_PREFIXED_OPERATION_NAME_TOPIC(String prefix), PRODUCER_PREFIXED_OPERATION_NAME_TOPIC(String prefix)</literal></simpara></entry>
<entry align="left" valign="top"><simpara>Returns a String concatenation of <literal>prefix</literal> and <literal>"operationName - record.topic()"</literal>.</simpara></entry>
</row>
</tbody>
</tgroup>
</informaltable>
</section>
</section>
<section xml:id="proc-instrumenting-kafka-streams-with-tracers-str">
<title>Instrumenting Kafka Streams applications for tracing</title>
<simpara>Instrument Kafka Streams applications for distributed tracing using a supplier interface. This enables the Interceptors in the application.</simpara>
<formalpara>
<title>Procedure</title>
<para>Perform the following steps for each Kafka Streams application:</para>
</formalpara>
<orderedlist numeration="arabic">
<listitem>
<simpara>Add the <literal>opentracing-kafka-streams</literal> dependency to the Kafka Streams application’s <literal>pom.xml</literal> file.</simpara>
<programlisting language="xml" linenumbering="unnumbered">&lt;dependency&gt;
    &lt;groupId&gt;io.opentracing.contrib&lt;/groupId&gt;
    &lt;artifactId&gt;opentracing-kafka-streams&lt;/artifactId&gt;
    &lt;version&gt;0.1.4&lt;/version&gt;
&lt;/dependency&gt;</programlisting>
</listitem>
<listitem>
<simpara>Create an instance of the <literal>TracingKafkaClientSupplier</literal> supplier interface:</simpara>
<programlisting language="java" linenumbering="unnumbered">KafkaClientSupplier supplier = new TracingKafkaClientSupplier(tracer);</programlisting>
</listitem>
<listitem>
<simpara>Provide the supplier interface to <literal>KafkaStreams</literal>:</simpara>
<programlisting language="java" linenumbering="unnumbered">KafkaStreams streams = new KafkaStreams(builder.build(), new StreamsConfig(config), supplier);
streams.start();</programlisting>
</listitem>
</orderedlist>
</section>
</section>
<section xml:id="assembly-configuring-mirrormaker-kafka-connect-tracing-str">
<title>Configuring MirrorMaker and Kafka Connect for tracing</title>
<simpara>This section describes how to configure MirrorMaker and Kafka Connect for distributed tracing.</simpara>
<simpara>You must enable a Jaeger tracer for each component.</simpara>
<section xml:id="proc-enabling-tracing-for-mirrormaker-str">
<title>Enabling tracing for MirrorMaker</title>
<simpara>Enable distributed tracing for MirrorMaker by passing the Interceptor properties as consumer and producer configuration parameters.</simpara>
<simpara>Messages are traced from the source cluster to the target cluster; the trace data records messages entering and leaving the Mirror Maker component.</simpara>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>Configure and enable a Jaeger tracer.</simpara>
</listitem>
<listitem>
<simpara>Edit the <literal>/opt/kafka/config/consumer.properties</literal> file.</simpara>
<simpara>Add the following Interceptor property:</simpara>
<programlisting language="properties" linenumbering="unnumbered">consumer.interceptor.classes=io.opentracing.contrib.kafka.TracingConsumerInterceptor</programlisting>
</listitem>
<listitem>
<simpara>Edit the <literal>/opt/kafka/config/producer.properties</literal> file.</simpara>
<simpara>Add the following Interceptor property:</simpara>
<programlisting language="properties" linenumbering="unnumbered">producer.interceptor.classes=io.opentracing.contrib.kafka.TracingProducerInterceptor</programlisting>
</listitem>
<listitem>
<simpara>Start MirrorMaker with the consumer and producer configuration files as parameters:</simpara>
<programlisting language="shell" linenumbering="unnumbered">su - kafka
/opt/kafka/bin/kafka-mirror-maker.sh --consumer.config /opt/kafka/config/consumer.properties --producer.config /opt/kafka/config/producer.properties --num.streams=2</programlisting>
</listitem>
</orderedlist>
</section>
<section xml:id="proc-enabling-tracing-for-kafka-connect-str">
<title>Enabling tracing for Kafka Connect</title>
<simpara>Enable distributed tracing for Kafka Connect using configuration properties.</simpara>
<simpara>Only messages produced and consumed by Kafka Connect itself are traced. To trace messages sent between Kafka Connect and external systems, you must configure tracing in the connectors for those systems.</simpara>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>Configure and enable a Jaeger tracer.</simpara>
</listitem>
<listitem>
<simpara>Edit the relevant Kafka Connect configuration file.</simpara>
<itemizedlist>
<listitem>
<simpara>If you are running Kafka Connect in standalone mode, edit the <literal>/opt/kafka/config/connect-standalone.properties</literal> file.</simpara>
</listitem>
<listitem>
<simpara>If you are running Kafka Connect in distributed mode, edit the <literal>/opt/kafka/config/connect-distributed.properties</literal> file.</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>Add the following properties to the configuration file:</simpara>
<programlisting language="properties" linenumbering="unnumbered">producer.interceptor.classes=io.opentracing.contrib.kafka.TracingProducerInterceptor
consumer.interceptor.classes=io.opentracing.contrib.kafka.TracingConsumerInterceptor</programlisting>
</listitem>
<listitem>
<simpara>Save the configuration file.</simpara>
</listitem>
<listitem>
<simpara>Set tracing environment variables and then run Kafka Connect in standalone or distributed mode.</simpara>
</listitem>
</orderedlist>
<simpara>The Interceptors in Kafka Connect’s internal consumers and producers are now enabled.</simpara>
<itemizedlist>
<title>Additional resources</title>
<listitem>
<simpara><xref linkend="ref-tracing-environment-variables-str"/></simpara>
</listitem>
<listitem>
<simpara><xref linkend="proc-running-kafka-connect-standalone-str"/></simpara>
</listitem>
<listitem>
<simpara><xref linkend="proc-running-kafka-connect-distributed-str"/></simpara>
</listitem>
</itemizedlist>
</section>
</section>
<section xml:id="proc-enabling-tracing-for-kafka-bridge-str">
<title>Enabling tracing for the Kafka Bridge</title>
<simpara>Enable distributed tracing for the Kafka Bridge by editing the Kafka Bridge configuration file. You can then deploy a Kafka Bridge instance that is configured for distributed tracing to the host operating system.</simpara>
<simpara>Traces are generated for the following transactions:</simpara>
<itemizedlist>
<listitem>
<simpara>The Kafka Bridge sends messages to HTTP clients and consumes messages from HTTP clients.</simpara>
</listitem>
<listitem>
<simpara>HTTP clients send HTTP requests to send and receive messages through the Kafka Bridge.</simpara>
</listitem>
</itemizedlist>
<simpara>In order to have end-to-end tracing, you must also configure tracing in your HTTP clients.</simpara>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>Edit the <literal>config/application.properties</literal> file in the Kafka Bridge installation directory.</simpara>
<simpara>Remove the code comments from the following line:</simpara>
<programlisting language="properties" linenumbering="unnumbered">bridge.tracing=jaeger</programlisting>
</listitem>
<listitem>
<simpara>Save the configuration file.</simpara>
</listitem>
<listitem>
<simpara>Run the <literal>bin/kafka_bridge_run.sh</literal> script using the configuration properties as a parameter:</simpara>
<programlisting language="shell" linenumbering="numbered">cd kafka-bridge-0.xy.x.redhat-0000x
./bin/kafka_bridge_run.sh --config-file=config/application.properties</programlisting>
</listitem>
</orderedlist>
<simpara>The Interceptors in the Kafka Bridge’s internal consumers and producers are now enabled.</simpara>
<itemizedlist>
<title>Additional resources</title>
<listitem>
<simpara><xref linkend="proc-configuring-kafka-bridge-kafka-bridge-overview"/></simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="ref-tracing-environment-variables-str">
<title>Tracing environment variables</title>
<simpara>Use these environment variables when configuring a Jaeger tracer for Kafka clients and components.</simpara>
<note>
<simpara>The tracing environment variables are part of the Jaeger project and are subject to change. For the latest environment variables, see the <link xlink:href="https://github.com/jaegertracing/jaeger-client-java/tree/master/jaeger-core#configuration-via-environment">Jaeger documentation</link>.</simpara>
</note>
<informaltable role="stretch" frame="all" rowsep="1" colsep="1">
<tgroup cols="3">
<colspec colname="col_1" colwidth="33*"/>
<colspec colname="col_2" colwidth="33*"/>
<colspec colname="col_3" colwidth="33*"/>
<thead>
<row>
<entry align="left" valign="top">Property</entry>
<entry align="left" valign="top">Required</entry>
<entry align="left" valign="top">Description</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left" valign="top"><simpara><literal>JAEGER_SERVICE_NAME</literal></simpara></entry>
<entry align="left" valign="top"><simpara>Yes</simpara></entry>
<entry align="left" valign="top"><simpara>The name of the Jaeger tracer service.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal>JAEGER_AGENT_HOST</literal></simpara></entry>
<entry align="left" valign="top"><simpara>No</simpara></entry>
<entry align="left" valign="top"><simpara>The hostname for communicating with the <literal>jaeger-agent</literal> through the User Datagram Protocol (UDP).</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal>JAEGER_AGENT_PORT</literal></simpara></entry>
<entry align="left" valign="top"><simpara>No</simpara></entry>
<entry align="left" valign="top"><simpara>The port used for communicating with the <literal>jaeger-agent</literal> through UDP.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal>JAEGER_ENDPOINT</literal></simpara></entry>
<entry align="left" valign="top"><simpara>No</simpara></entry>
<entry align="left" valign="top"><simpara>The traces endpoint. Only define this variable if the client application will bypass the <literal>jaeger-agent</literal> and connect directly to the <literal>jaeger-collector</literal>.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal>JAEGER_AUTH_TOKEN</literal></simpara></entry>
<entry align="left" valign="top"><simpara>No</simpara></entry>
<entry align="left" valign="top"><simpara>The authentication token to send to the endpoint as a bearer token.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal>JAEGER_USER</literal></simpara></entry>
<entry align="left" valign="top"><simpara>No</simpara></entry>
<entry align="left" valign="top"><simpara>The username to send to the endpoint if using basic authentication.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal>JAEGER_PASSWORD</literal></simpara></entry>
<entry align="left" valign="top"><simpara>No</simpara></entry>
<entry align="left" valign="top"><simpara>The password to send to the endpoint if using basic authentication.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal>JAEGER_PROPAGATION</literal></simpara></entry>
<entry align="left" valign="top"><simpara>No</simpara></entry>
<entry align="left" valign="top"><simpara>A comma-separated list of formats to use for propagating the trace context. Defaults to the standard Jaeger format. Valid values are <literal>jaeger</literal> and <literal>b3</literal>.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal>JAEGER_REPORTER_LOG_SPANS</literal></simpara></entry>
<entry align="left" valign="top"><simpara>No</simpara></entry>
<entry align="left" valign="top"><simpara>Indicates whether the reporter should also log the spans.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal>JAEGER_REPORTER_MAX_QUEUE_SIZE</literal></simpara></entry>
<entry align="left" valign="top"><simpara>No</simpara></entry>
<entry align="left" valign="top"><simpara>The reporter’s maximum queue size.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal>JAEGER_REPORTER_FLUSH_INTERVAL</literal></simpara></entry>
<entry align="left" valign="top"><simpara>No</simpara></entry>
<entry align="left" valign="top"><simpara>The reporter’s flush interval, in ms. Defines how frequently the Jaeger reporter flushes span batches.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal>JAEGER_SAMPLER_TYPE</literal></simpara></entry>
<entry align="left" valign="top"><simpara>No</simpara></entry>
<entry align="left" valign="top"><simpara>The sampling strategy to use for client traces: Constant, Probabilistic, Rate Limiting, or Remote (the default type).</simpara><simpara>To sample all traces, use the Constant sampling strategy with a parameter of 1.</simpara><simpara>For more information, see the <link xlink:href="https://www.jaegertracing.io/docs/1.14/sampling/#client-sampling-configuration">Jaeger documentation</link>.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal>JAEGER_SAMPLER_PARAM</literal></simpara></entry>
<entry align="left" valign="top"><simpara>No</simpara></entry>
<entry align="left" valign="top"><simpara>The sampler parameter (number).</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal>JAEGER_SAMPLER_MANAGER_HOST_PORT</literal></simpara></entry>
<entry align="left" valign="top"><simpara>No</simpara></entry>
<entry align="left" valign="top"><simpara>The hostname and port to use if a Remote sampling strategy is selected.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal>JAEGER_TAGS</literal></simpara></entry>
<entry align="left" valign="top"><simpara>No</simpara></entry>
<entry align="left" valign="top"><simpara>A comma-separated list of tracer-level tags that are added to all reported spans.</simpara><simpara>The value can also refer to an environment variable using the format <literal>${envVarName:default}</literal>. <literal>:default</literal> is optional and identifies a value to use if the environment variable cannot be found.</simpara></entry>
</row>
</tbody>
</tgroup>
</informaltable>
</section>
</chapter>
<chapter xml:id="assembly-kafka-exporter-str">
<title>Kafka Exporter</title>
<simpara><link xlink:href="https://github.com/danielqsj/kafka_exporter">Kafka Exporter</link> is an open source project to enhance monitoring of Apache Kafka brokers and clients.</simpara>
<simpara>Kafka Exporter is provided with AMQ Streams for deployment with a Kafka cluster to extract additional metrics data from Kafka brokers related to offsets, consumer groups, consumer lag, and topics.</simpara>
<simpara>The metrics data is used, for example, to help identify slow consumers.</simpara>
<simpara>Lag data is exposed as Prometheus metrics, which can then be presented in Grafana for analysis.</simpara>
<simpara>If you are already using Prometheus and Grafana for monitoring of built-in Kafka metrics, you can configure Prometheus to also scrape the Kafka Exporter Prometheus endpoint.</simpara>
<formalpara>
<title>Additional resources</title>
<para>Kafka exposes metrics through JMX, which can then be exported as Prometheus metrics.</para>
</formalpara>
<itemizedlist>
<listitem>
<simpara><xref linkend="monitoring-str"/></simpara>
</listitem>
</itemizedlist>
<section xml:id="con-metrics-kafka-exporter-lag-str">
<title>Consumer lag</title>
<simpara>Consumer lag indicates the difference in the rate of production and consumption of messages.
Specifically, consumer lag for a given consumer group indicates the delay between the last message in the partition and the message being currently picked up by that consumer.
The lag reflects the position of the consumer offset in relation to the end of the partition log.</simpara>
<simpara>This difference is sometimes referred to as the <emphasis>delta</emphasis> between the producer offset and consumer offset, the read and write positions in the Kafka broker topic partitions.</simpara>
<simpara>Suppose a topic streams 100 messages a second. A lag of 1000 messages between the producer offset (the topic partition head) and the last offset the consumer has read means a 10-second delay.</simpara>
<formalpara>
<title>The importance of monitoring consumer lag</title>
<para>For applications that rely on the processing of (near) real-time data, it is critical to monitor consumer lag to check that it does not become too big.
The greater the lag becomes, the further the process moves from the real-time processing objective.</para>
</formalpara>
<simpara>Consumer lag, for example, might be a result of consuming too much old data that has not been purged, or through unplanned shutdowns.</simpara>
<formalpara>
<title>Reducing consumer lag</title>
<para>Typical actions to reduce lag include:</para>
</formalpara>
<itemizedlist>
<listitem>
<simpara>Scaling-up consumer groups by adding new consumers</simpara>
</listitem>
<listitem>
<simpara>Increasing the retention time for a message to remain in a topic</simpara>
</listitem>
<listitem>
<simpara>Adding more disk capacity to increase the message buffer</simpara>
</listitem>
</itemizedlist>
<simpara>Actions to reduce consumer lag depend on the underlying infrastructure and the use cases AMQ Streams is supporting.
For instance, a lagging consumer is less likely to benefit from the broker being able to service a fetch request from its disk cache.
And in certain cases, it might be acceptable to automatically drop messages until a consumer has caught up.</simpara>
</section>
<section xml:id="con-metrics-kafka-exporter-alerts-str">
<title>Kafka Exporter alerting rule examples</title>
<simpara>The sample alert notification rules specific to Kafka Exporter are as follows:</simpara>
<variablelist>
<varlistentry>
<term><literal>UnderReplicatedPartition</literal></term>
<listitem>
<simpara>An alert to warn that a topic is under-replicated and the broker is not replicating enough partitions.
The default configuration is for an alert if there are one or more under-replicated partitions for a topic.
The alert might signify that a Kafka instance is down or the Kafka cluster is overloaded.
A planned restart of the Kafka broker may be required to restart the replication process.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>TooLargeConsumerGroupLag</literal></term>
<listitem>
<simpara>An alert to warn that the lag on a consumer group is too large for a specific topic partition.
The default configuration is 1000 records.
A large lag might indicate that consumers are too slow and are falling behind the producers.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>NoMessageForTooLong</literal></term>
<listitem>
<simpara>An alert to warn that a topic has not received messages for a period of time.
The default configuration for the time period is 10 minutes.
The delay might be a result of a configuration issue preventing a producer from publishing messages to the topic.</simpara>
</listitem>
</varlistentry>
</variablelist>
<simpara>You can adapt alerting rules according to your specific needs.</simpara>
<formalpara>
<title>Additional resources</title>
<para>For more information about setting up alerting rules, see <link xlink:href="https://prometheus.io/docs/prometheus/latest/configuration/configuration">Configuration</link> in the Prometheus documentation.</para>
</formalpara>
</section>
<section xml:id="ref-metrics-kafka-exporter-str">
<title>Kafka Exporter metrics</title>
<simpara>Lag information is exposed by Kafka Exporter as Prometheus metrics for presentation in Grafana.</simpara>
<simpara>Kafka Exporter exposes metrics data for brokers, topics, and consumer groups.</simpara>
<simpara>The data extracted is described here.</simpara>
<table frame="all" rowsep="1" colsep="1">
<title>Broker metrics output</title>
<tgroup cols="2">
<colspec colname="col_1" colwidth="50*"/>
<colspec colname="col_2" colwidth="50*"/>
<thead>
<row>
<entry align="left" valign="top">Name</entry>
<entry align="left" valign="top">Information</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left" valign="top"><simpara><literal>kafka_brokers</literal></simpara></entry>
<entry align="left" valign="top"><simpara>Number of brokers in the Kafka cluster</simpara></entry>
</row>
</tbody>
</tgroup>
</table>
<table frame="all" rowsep="1" colsep="1">
<title>Topic metrics output</title>
<tgroup cols="2">
<colspec colname="col_1" colwidth="50*"/>
<colspec colname="col_2" colwidth="50*"/>
<thead>
<row>
<entry align="left" valign="top">Name</entry>
<entry align="left" valign="top">Information</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left" valign="top"><simpara><literal>kafka_topic_partitions</literal></simpara></entry>
<entry align="left" valign="top"><simpara>Number of partitions for a topic</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal>kafka_topic_partition_current_offset</literal></simpara></entry>
<entry align="left" valign="top"><simpara>Current topic partition offset for a broker</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal>kafka_topic_partition_oldest_offset</literal></simpara></entry>
<entry align="left" valign="top"><simpara>Oldest topic partition offset for a broker</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal>kafka_topic_partition_in_sync_replica</literal></simpara></entry>
<entry align="left" valign="top"><simpara>Number of in-sync replicas for a topic partition</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal>kafka_topic_partition_leader</literal></simpara></entry>
<entry align="left" valign="top"><simpara>Leader broker ID of a topic partition</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal>kafka_topic_partition_leader_is_preferred</literal></simpara></entry>
<entry align="left" valign="top"><simpara>Shows <literal>1</literal> if a topic partition is using the preferred broker</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal>kafka_topic_partition_replicas</literal></simpara></entry>
<entry align="left" valign="top"><simpara>Number of replicas for this topic partition</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal>kafka_topic_partition_under_replicated_partition</literal></simpara></entry>
<entry align="left" valign="top"><simpara>Shows <literal>1</literal> if a topic partition is under-replicated</simpara></entry>
</row>
</tbody>
</tgroup>
</table>
<table frame="all" rowsep="1" colsep="1">
<title>Consumer group metrics output</title>
<tgroup cols="2">
<colspec colname="col_1" colwidth="50*"/>
<colspec colname="col_2" colwidth="50*"/>
<thead>
<row>
<entry align="left" valign="top">Name</entry>
<entry align="left" valign="top">Information</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left" valign="top"><simpara><literal>kafka_consumergroup_current_offset</literal></simpara></entry>
<entry align="left" valign="top"><simpara>Current topic partition offset for a consumer group</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal>kafka_consumergroup_lag</literal></simpara></entry>
<entry align="left" valign="top"><simpara>Current approximate lag for a consumer group at a topic partition</simpara></entry>
</row>
</tbody>
</tgroup>
</table>
</section>
<section xml:id="proc-kafka-exporter-running-str">
<title>Running Kafka Exporter</title>
<simpara>Kafka Exporter is provided with the download archive used for <link linkend="proc-installing-amq-streams-str">Installing AMQ Streams</link>.</simpara>
<simpara>You can run it to expose Prometheus metrics for presentation in a Grafana dashboard.</simpara>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara><link linkend="proc-installing-amq-streams-str">AMQ Streams is installed on the host</link></simpara>
</listitem>
</itemizedlist>
<simpara>This procedure assumes you already have access to a Grafana user interface and Prometheus is deployed and added as a data source.</simpara>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>Run the Kafka Exporter script using appropriate configuration parameter values.</simpara>
<programlisting language="shell" linenumbering="unnumbered">./bin/kafka_exporter --kafka.server=&lt;<emphasis>kafka-bootstrap-address</emphasis>&gt;:9092 --kafka.version=2.3.0  --&lt;<emphasis>my-other-parameters</emphasis>&gt;</programlisting>
<simpara>The parameters require a double-hyphen convention, such as <literal>--kafka.server</literal>.</simpara>
<informaltable frame="all" rowsep="1" colsep="1">
<tgroup cols="3">
<colspec colname="col_1" colwidth="33*"/>
<colspec colname="col_2" colwidth="33*"/>
<colspec colname="col_3" colwidth="33*"/>
<thead>
<row>
<entry align="left" valign="top">Option</entry>
<entry align="left" valign="top">Description</entry>
<entry align="left" valign="top">Default</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left" valign="top"><simpara><literal>kafka.server</literal></simpara></entry>
<entry align="left" valign="top"><simpara>Host/post address of the Kafka server.</simpara></entry>
<entry align="left" valign="top"><simpara><literal>kafka:9092</literal></simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal>kafka.version</literal></simpara></entry>
<entry align="left" valign="top"><simpara>Kafka broker version.</simpara></entry>
<entry align="left" valign="top"><simpara><literal>1.0.0</literal></simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal>group.filter</literal></simpara></entry>
<entry align="left" valign="top"><simpara>A regular expression to specify the consumer groups to include in the metrics.</simpara></entry>
<entry align="left" valign="top"><simpara><literal>.*</literal> (all)</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal>topic.filter</literal></simpara></entry>
<entry align="left" valign="top"><simpara>A regular expression to specify the topics to include in the metrics.</simpara></entry>
<entry align="left" valign="top"><simpara><literal>.*</literal> (all)</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal>sasl.&lt;<emphasis>parameter</emphasis>&gt;</literal></simpara></entry>
<entry align="left" valign="top"><simpara>Parameters to enable and connect to the Kafka cluster using SASL/PLAIN authentication, with user name and password.</simpara></entry>
<entry align="left" valign="top"><simpara><literal>false</literal></simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal>tls.&lt;<emphasis>parameter</emphasis>&gt;</literal></simpara></entry>
<entry align="left" valign="top"><simpara>Parameters to enable connect to the Kafka cluster using TLS authentication, with optional certificate and key.</simpara></entry>
<entry align="left" valign="top"><simpara><literal>false</literal></simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal>web.listen-address</literal></simpara></entry>
<entry align="left" valign="top"><simpara>Port address to expose the metrics.</simpara></entry>
<entry align="left" valign="top"><simpara><literal>:9308</literal></simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal>web.telemetry-path</literal></simpara></entry>
<entry align="left" valign="top"><simpara>Path for the exposed metrics.</simpara></entry>
<entry align="left" valign="top"><simpara><literal>/metrics</literal></simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal>log.level</literal></simpara></entry>
<entry align="left" valign="top"><simpara>Logging configuration, to log messages with a given severity (debug, info, warn, error, fatal) or above.</simpara></entry>
<entry align="left" valign="top"><simpara><literal>info</literal></simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal>log.enable-sarama</literal></simpara></entry>
<entry align="left" valign="top"><simpara>Boolean to enable Sarama logging, a Go client library used by the Kafka Exporter.</simpara></entry>
<entry align="left" valign="top"><simpara><literal>false</literal></simpara></entry>
</row>
</tbody>
</tgroup>
</informaltable>
<simpara>You can use <literal>kafka_exporter --help</literal> for information on the properties.</simpara>
</listitem>
<listitem>
<simpara>Configure Prometheus to monitor the Kafka Exporter metrics.</simpara>
<simpara>For more information on configuring Prometheus, see the <link xlink:href="https://prometheus.io/docs/">Prometheus documentation</link>.</simpara>
</listitem>
<listitem>
<simpara>Enable Grafana to present the Kafka Exporter metrics data exposed by Prometheus.</simpara>
<simpara>For more information, see <link linkend="con-metrics-kafka-exporter-grafana-str">Presenting Kafka Exporter metrics in Grafana</link>.</simpara>
</listitem>
</orderedlist>
</section>
<section xml:id="con-metrics-kafka-exporter-grafana-str">
<title>Presenting Kafka Exporter metrics in Grafana</title>
<simpara>Using Kafka Exporter Prometheus metrics as a data source, you can create a dashboard of Grafana charts.</simpara>
<simpara>For example, from the metrics you can create the following Grafana charts:</simpara>
<itemizedlist>
<listitem>
<simpara>Message in per second (from topics)</simpara>
</listitem>
<listitem>
<simpara>Message in per minute (from topics)</simpara>
</listitem>
<listitem>
<simpara>Lag by consumer group</simpara>
</listitem>
<listitem>
<simpara>Messages consumed per minute (by consumer groups)</simpara>
</listitem>
</itemizedlist>
<simpara>When metrics data has been collected for some time, the Kafka Exporter charts are populated.</simpara>
<simpara>Use the Grafana charts to analyze lag and to check if actions to reduce lag are having an impact on an affected consumer group.
If, for example, Kafka brokers are adjusted to reduce lag, the dashboard will show the  <emphasis>Lag by consumer group</emphasis> chart going down and the <emphasis>Messages consumed per minute</emphasis> chart going up.</simpara>
<itemizedlist>
<title>Additional resources</title>
<listitem>
<simpara><link xlink:href="https://grafana.com/grafana/dashboards/7589">Example dashboard for Kafka Exporter</link></simpara>
</listitem>
<listitem>
<simpara><link xlink:href="https://grafana.com/docs/">Grafana documentation</link></simpara>
</listitem>
</itemizedlist>
</section>
</chapter>
<chapter xml:id="assembly-upgrade-str">
<title>AMQ Streams and Kafka upgrades</title>
<simpara>AMQ Streams can be upgraded with no cluster downtime. Each version of AMQ Streams supports one or more versions of Apache Kafka: you can upgrade to a higher Kafka version as long as it is supported by your version of AMQ Streams.
In some cases, you can also downgrade to a lower supported Kafka version.</simpara>
<simpara>Newer versions of AMQ Streams may support newer versions of Kafka, but you need to upgrade AMQ Streams <emphasis>before</emphasis> you can upgrade to a higher supported Kafka version.</simpara>
<section xml:id="con-upgrade-prereqs-str">
<title>Upgrade prerequisites</title>
<simpara>Before you begin the upgrade process, make sure that:</simpara>
<itemizedlist>
<listitem>
<simpara>AMQ Streams is installed. For instructions, see <xref linkend="assembly-getting-started-str"/>.</simpara>
</listitem>
<listitem>
<simpara>You are familiar with any upgrade changes described in the <link xlink:href="https://access.redhat.com/documentation/en-us/red_hat_amq/7.6/html-single/amq_streams_1.4_on_openshift_container_platform_release_notes">AMQ Streams 1.4 on Red Hat Enterprise Linux Release Notes</link>.</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="con-upgrade-intro-str">
<title>Upgrade process</title>
<simpara>Upgrading AMQ Streams is a two-stage process. To upgrade brokers and clients without downtime, you <emphasis>must</emphasis> complete the upgrade procedures in the following order:</simpara>
<orderedlist numeration="arabic">
<listitem>
<simpara>Upgrade to the latest AMQ Streams version.</simpara>
<itemizedlist>
<listitem>
<simpara><link linkend="assembly-upgrading-brokers-str">Upgrading to AMQ Streams 1.4</link></simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>Upgrade all Kafka brokers and client applications to the latest Kafka version</simpara>
<itemizedlist>
<listitem>
<simpara><link linkend="assembly-upgrading-kafka-versions-str">Upgrading Kafka</link></simpara>
</listitem>
</itemizedlist>
</listitem>
</orderedlist>
</section>
<section xml:id="ref-kafka-versions-str">
<title>Kafka versions</title>
<simpara>AMQ Streams is based on a specific version of Apache Kafka.</simpara>
<informaltable frame="all" rowsep="1" colsep="1">
<tgroup cols="2">
<colspec colname="col_1" colwidth="50*"/>
<colspec colname="col_2" colwidth="50*"/>
<thead>
<row>
<entry align="left" valign="top">AMQ Streams version</entry>
<entry align="left" valign="top">Kafka version</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left" valign="top"><simpara>1.4</simpara></entry>
<entry align="left" valign="top"><simpara>2.3.0</simpara></entry>
</row>
</tbody>
</tgroup>
</informaltable>
<simpara>Kafka’s log message format version and inter-broker protocol version specify the version of the format of messages appended to broker logs and the version of protocol used between brokers in a cluster. As a result, the upgrade process involves making configuration changes to existing Kafka brokers and code changes to client applications (consumers and producers) to ensure the correct versions are used.</simpara>
<simpara>The following table shows the differences between Kafka versions:</simpara>
<informaltable frame="all" rowsep="1" colsep="1">
<tgroup cols="4">
<colspec colname="col_1" colwidth="25*"/>
<colspec colname="col_2" colwidth="25*"/>
<colspec colname="col_3" colwidth="25*"/>
<colspec colname="col_4" colwidth="25*"/>
<thead>
<row>
<entry align="left" valign="top">Kafka version</entry>
<entry align="left" valign="top">Interbroker protocol version</entry>
<entry align="left" valign="top">Log message format version</entry>
<entry align="left" valign="top">ZooKeeper version</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left" valign="top"><simpara>2.2.1</simpara></entry>
<entry align="left" valign="top"><simpara>2.2</simpara></entry>
<entry align="left" valign="top"><simpara>2.2</simpara></entry>
<entry align="left" valign="top"><simpara>3.4.14</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>2.3.0</simpara></entry>
<entry align="left" valign="top"><simpara>2.3</simpara></entry>
<entry align="left" valign="top"><simpara>2.3</simpara></entry>
<entry align="left" valign="top"><simpara>3.4.14</simpara></entry>
</row>
</tbody>
</tgroup>
</informaltable>
<simpara>Although Kafka versions may use the same version of ZooKeeper, it is recommended that you update your ZooKeeper cluster to use the newest ZooKeeper binaries before proceeding with the main AMQ Streams upgrade.</simpara>
<formalpara>
<title>Message format version</title>
<para>When a producer sends a message to a Kafka broker, the message is encoded using a specific format.
The format can change between Kafka releases, so messages include a version identifying which version of the format they were encoded with. You can configure a Kafka broker to convert messages from newer format versions to a given older format version before the broker appends the message to the log.</para>
</formalpara>
<simpara>In Kafka, there are two different methods for setting the message format version:</simpara>
<itemizedlist>
<listitem>
<simpara>The <literal>message.format.version</literal> property is set on topics.</simpara>
</listitem>
<listitem>
<simpara>The <literal>log.message.format.version</literal> property is set on Kafka brokers.</simpara>
</listitem>
</itemizedlist>
<simpara>The default value of <literal>message.format.version</literal> for a  topic is defined by the <literal>log.message.format.version</literal> that is set on the Kafka broker. You can manually set the <literal>message.format.version</literal> of a topic by modifying its topic configuration.</simpara>
<simpara>The upgrade tasks in this section assume that the message format version is defined at the broker level by the <literal>log.message.format.version</literal>.</simpara>
</section>
<section xml:id="assembly-upgrading-brokers-str">
<title>Upgrading to AMQ Streams 1.4</title>
<simpara>The steps to upgrade your deployment to use AMQ Streams 1.4 are outlined in this section.</simpara>
<simpara>The availability of Kafka clusters managed by AMQ Streams is not affected by the upgrade operation.</simpara>
<note>
<simpara>Refer to the documentation supporting a specific version of AMQ Streams for information on how to upgrade to that version.</simpara>
</note>
<section xml:id="proc-upgrading-zookeeper-binaries-str">
<title>Upgrading ZooKeeper</title>
<simpara>This procedure describes how to upgrade ZooKeeper on a host machine.</simpara>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>You are logged in to Red Hat Enterprise Linux as the <literal>kafka</literal> user.</simpara>
</listitem>
</itemizedlist>
<formalpara>
<title>Procedure</title>
<para>For each Kafka broker in your AMQ Streams cluster and one at a time:</para>
</formalpara>
<orderedlist numeration="arabic">
<listitem>
<simpara>Download the AMQ Streams archive for this release from the <link xlink:href="https://access.redhat.com/jbossnetwork/restricted/listSoftware.html?downloadType=distributions&amp;product=jboss.amq.streams&amp;productChanged=yes">Customer Portal</link>.</simpara>
<note>
<simpara>If prompted, log in to your Red Hat account.</simpara>
</note>
</listitem>
<listitem>
<simpara>On the command line, create a temporary directory and extract the contents of the <literal>amq-streams-x.y.z-bin.zip</literal> file:</simpara>
<programlisting language="shell" linenumbering="unnumbered">mkdir /tmp/kafka
unzip amq-streams-x.y.z-bin.zip -d /tmp/kafka</programlisting>
</listitem>
<listitem>
<simpara>Delete the <literal>libs</literal>, <literal>bin</literal>, and <literal>docs</literal> directories from your existing installation:</simpara>
<programlisting language="shell" linenumbering="unnumbered">rm -rf /opt/kafka/libs /opt/kafka/bin /opt/kafka/docs</programlisting>
</listitem>
<listitem>
<simpara>Copy the <literal>libs</literal>, <literal>bin</literal>, and <literal>docs</literal> directories from the temporary directory:</simpara>
<programlisting language="shell" linenumbering="unnumbered">cp -r /tmp/kafka/kafka_y.y-x.x.x/libs /opt/kafka/
cp -r /tmp/kafka/kafka_y.y-x.x.x/bin /opt/kafka/
cp -r /tmp/kafka/kafka_y.y-x.x.x/docs /opt/kafka/</programlisting>
</listitem>
<listitem>
<simpara>Delete the temporary directory:</simpara>
<programlisting language="shell" linenumbering="unnumbered">rm -rf /tmp/kafka</programlisting>
</listitem>
<listitem>
<simpara>Restart ZooKeeper:</simpara>
<programlisting language="shell" linenumbering="unnumbered">/opt/kafka/bin/zookeeper-server-start.sh -daemon /opt/kafka/config/zookeeper.properties</programlisting>
</listitem>
</orderedlist>
</section>
<section xml:id="proc-upgrading-kafka-brokers-to-amq-streams-str">
<title>Upgrading Kafka brokers</title>
<simpara>This procedure describes how to upgrade Kafka brokers on a host machine.</simpara>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>You are logged in to Red Hat Enterprise Linux as the <literal>kafka</literal> user.</simpara>
</listitem>
</itemizedlist>
<formalpara>
<title>Procedure</title>
<para>For each Kafka broker in your AMQ Streams cluster and one at a time:</para>
</formalpara>
<orderedlist numeration="arabic">
<listitem>
<simpara>Download the AMQ Streams archive from the <link xlink:href="https://access.redhat.com/jbossnetwork/restricted/listSoftware.html?downloadType=distributions&amp;product=jboss.amq.streams&amp;productChanged=yes">Customer Portal</link>.</simpara>
<note>
<simpara>If prompted, log in to your Red Hat account.</simpara>
</note>
</listitem>
<listitem>
<simpara>On the command line, create a temporary directory and extract the contents of the <literal>amq-streams-x.y.z-bin.zip</literal> file.</simpara>
<programlisting language="shell" linenumbering="unnumbered">mkdir /tmp/kafka
unzip amq-streams-x.y.z-bin.zip -d /tmp/kafka</programlisting>
</listitem>
<listitem>
<simpara>Delete the <literal>libs</literal>, <literal>bin</literal>, and <literal>docs</literal> directories from your existing installation:</simpara>
<programlisting language="shell" linenumbering="unnumbered">rm -rf /opt/kafka/libs /opt/kafka/bin /opt/kafka/docs</programlisting>
</listitem>
<listitem>
<simpara>Copy the <literal>libs</literal>, <literal>bin</literal>, and <literal>docs</literal> directories from the temporary directory:</simpara>
<programlisting language="shell" linenumbering="unnumbered">cp -r /tmp/kafka/kafka_y.y-x.x.x/libs /opt/kafka/
cp -r /tmp/kafka/kafka_y.y-x.x.x/bin /opt/kafka/
cp -r /tmp/kafka/kafka_y.y-x.x.x/docs /opt/kafka/</programlisting>
</listitem>
<listitem>
<simpara>Delete the temporary directory.</simpara>
<programlisting language="shell" linenumbering="unnumbered">rm -r /tmp/kafka</programlisting>
</listitem>
<listitem>
<simpara>In a text editor, open the broker properties file, commonly stored in the <literal>/opt/kafka/config/</literal> directory.</simpara>
</listitem>
<listitem>
<simpara>Temporarily override the default inter-broker protocol and message format versions for Kafka 2.3.0 by adding or updating the following properties in the file:</simpara>
<programlisting language="shell" linenumbering="unnumbered">inter.broker.protocol.version=2.2
log.message.format.version=2.2</programlisting>
<simpara>This configures the Kafka broker to process data using the previous inter-broker protocol (<literal>2.2</literal>) and message format versions.</simpara>
</listitem>
<listitem>
<simpara>On the command line, stop the Kafka broker that you modified:</simpara>
<programlisting language="shell" linenumbering="unnumbered">/opt/kafka/bin/kafka-server-stop.sh
jcmd | grep kafka</programlisting>
</listitem>
<listitem>
<simpara>Restart the Kafka broker that you modified:</simpara>
<programlisting language="shell" linenumbering="unnumbered">/opt/kafka/bin/kafka-server-start.sh -daemon /opt/kafka/config/server.properties</programlisting>
<note>
<simpara>The Kafka broker will start using the binaries for the latest Kafka version.</simpara>
</note>
</listitem>
<listitem>
<simpara>Verify that the restarted Kafka broker has caught up with the partition replicas it is following. Use the <literal>kafka-topics.sh</literal> tool to ensure that all replicas contained in the broker are back in sync. For instructions, see <link linkend="proc-describing-a-topic-str">Listing and describing topics</link>.</simpara>
</listitem>
</orderedlist>
</section>
<section xml:id="proc-upgrading-kafka-connect-to-amq-streams-str">
<title>Upgrading Kafka Connect</title>
<simpara>This procedure describes how to upgrade a Kafka Connect cluster on a host machine.</simpara>
<simpara>Kafka Connect is a client application and should be included in your chosen strategy for upgrading clients. For more information, see <link linkend="con-strategies-for-upgrading-clients-str">Strategies for upgrading clients</link>.</simpara>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>You are logged in to Red Hat Enterprise Linux as the <literal>kafka</literal> user.</simpara>
</listitem>
</itemizedlist>
<formalpara>
<title>Procedure</title>
<para>For each Kafka broker in your AMQ Streams cluster and one at a time:</para>
</formalpara>
<orderedlist numeration="arabic">
<listitem>
<simpara>Download the AMQ Streams archive from the <link xlink:href="https://access.redhat.com/jbossnetwork/restricted/listSoftware.html?downloadType=distributions&amp;product=jboss.amq.streams&amp;productChanged=yes">Customer Portal</link>.</simpara>
<note>
<simpara>If prompted, log in to your Red Hat account.</simpara>
</note>
</listitem>
<listitem>
<simpara>On the command line, create a temporary directory and extract the contents of the <literal>amq-streams-x.y.z-bin.zip</literal> file.</simpara>
<programlisting language="shell" linenumbering="unnumbered">mkdir /tmp/kafka
unzip amq-streams-x.y.z-bin.zip -d /tmp/kafka</programlisting>
</listitem>
<listitem>
<simpara>Delete the <literal>libs</literal>, <literal>bin</literal>, and <literal>docs</literal> directories from your existing installation:</simpara>
<programlisting language="shell" linenumbering="unnumbered">rm -rf /opt/kafka/libs /opt/kafka/bin /opt/kafka/docs</programlisting>
</listitem>
<listitem>
<simpara>Copy the <literal>libs</literal>, <literal>bin</literal>, and <literal>docs</literal> directories from the temporary directory:</simpara>
<programlisting language="shell" linenumbering="unnumbered">cp -r /tmp/kafka/kafka_y.y-x.x.x/libs /opt/kafka/
cp -r /tmp/kafka/kafka_y.y-x.x.x/bin /opt/kafka/
cp -r /tmp/kafka/kafka_y.y-x.x.x/docs /opt/kafka/</programlisting>
</listitem>
<listitem>
<simpara>Delete the temporary directory.</simpara>
<programlisting language="shell" linenumbering="unnumbered">rm -r /tmp/kafka</programlisting>
</listitem>
<listitem>
<simpara>Start Kafka Connect in either standalone or distributed mode.</simpara>
<itemizedlist>
<listitem>
<simpara>To start in standalone mode, run the <literal>connect-standalone.sh</literal> script. Specify the Kafka Connect standalone configuration file and the configuration files of your Kafka Connect connectors.</simpara>
<programlisting language="shell" linenumbering="unnumbered">su - kafka
/opt/kafka/bin/connect-standalone.sh /opt/kafka/config/connect-standalone.properties connector1.properties
[connector2.properties ...]</programlisting>
</listitem>
<listitem>
<simpara>To start in distributed mode, start the Kafka Connect workers with the <literal>/opt/kafka/config/connect-distributed.properties</literal> configuration file on all Kafka Connect nodes:</simpara>
<programlisting language="shell" linenumbering="unnumbered">su - kafka
/opt/kafka/bin/connect-distributed.sh /opt/kafka/config/connect-distributed.properties</programlisting>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>Verify that Kafka Connect is running:</simpara>
<itemizedlist>
<listitem>
<simpara>In standalone mode:</simpara>
<programlisting language="shell" linenumbering="unnumbered">jcmd | grep ConnectStandalone</programlisting>
</listitem>
<listitem>
<simpara>In distributed mode:</simpara>
<programlisting language="shell" linenumbering="unnumbered">jcmd | grep ConnectDistributed</programlisting>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>Verify that Kafka Connect is producing and consuming data as expected.</simpara>
</listitem>
</orderedlist>
<itemizedlist>
<title>Additional resources</title>
<listitem>
<simpara><link linkend="proc-running-kafka-connect-standalone-str">Running Kafka Connect in standalone mode</link></simpara>
</listitem>
<listitem>
<simpara><link linkend="proc-running-kafka-connect-distributed-str">Running distributed Kafka Connect</link></simpara>
</listitem>
<listitem>
<simpara><link linkend="con-strategies-for-upgrading-clients-str">Strategies for upgrading clients</link></simpara>
</listitem>
</itemizedlist>
</section>
</section>
<section xml:id="assembly-upgrading-kafka-versions-str">
<title>Upgrading Kafka</title>
<simpara>After you have upgraded your binaries to use the latest version of AMQ Streams, you can upgrade your brokers and clients to use a higher supported version of Kafka.</simpara>
<simpara>Take care to follow the steps in the correct order:</simpara>
<orderedlist numeration="arabic">
<listitem>
<simpara><xref linkend="proc-updating-kafka-brokers-to-new-inter-broker-protocol-version-str"/></simpara>
</listitem>
<listitem>
<simpara><xref linkend="proc-upgrading-clients-to-new-kafka-version-str"/></simpara>
</listitem>
<listitem>
<simpara><xref linkend="proc-updating-kafka-brokers-to-new-message-format-version-str"/></simpara>
</listitem>
</orderedlist>
<itemizedlist>
<title>Additional resources</title>
<listitem>
<simpara><xref linkend="assembly-upgrading-brokers-str"/></simpara>
</listitem>
</itemizedlist>
<section xml:id="proc-updating-kafka-brokers-to-new-inter-broker-protocol-version-str">
<title>Upgrading Kafka brokers to use the new inter-broker protocol version</title>
<simpara>Manually configure and restart all Kafka brokers to use the new inter-broker protocol version. After performing these steps, data is transmitted between the Kafka brokers using the new inter-broker protocol version.</simpara>
<simpara>Messages received are still appended to the message logs in the earlier message format version.</simpara>
<warning>
<simpara>Downgrading AMQ Streams is not possible after completing this procedure.</simpara>
</warning>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara><link linkend="proc-upgrading-zookeeper-binaries-str">You have updated the ZooKeeper binaries.</link></simpara>
</listitem>
<listitem>
<simpara><link linkend="proc-upgrading-kafka-brokers-to-amq-streams-str">You have upgraded all Kafka brokers to AMQ Streams 1.4</link></simpara>
</listitem>
<listitem>
<simpara>You are logged in to Red Hat Enterprise Linux as the <literal>kafka</literal> user.</simpara>
</listitem>
</itemizedlist>
<formalpara>
<title>Procedure</title>
<para>For each Kafka broker in your AMQ Streams cluster and one at a time:</para>
</formalpara>
<orderedlist numeration="arabic">
<listitem>
<simpara>In a text editor, open the broker properties file for the Kafka broker you want to update. Broker properties files are commonly stored in the <literal>/opt/kafka/config/</literal> directory.</simpara>
</listitem>
<listitem>
<simpara>Set the <literal>inter.broker.protocol.version</literal> to <literal>2.3</literal>.</simpara>
<programlisting language="shell" linenumbering="unnumbered">inter.broker.protocol.version=2.3</programlisting>
</listitem>
<listitem>
<simpara>On the command line, stop the Kafka broker that you modified:</simpara>
<programlisting language="shell" linenumbering="unnumbered">/opt/kafka/bin/kafka-server-stop.sh
jcmd | grep kafka</programlisting>
</listitem>
<listitem>
<simpara>Restart the Kafka broker that you modified:</simpara>
<programlisting language="shell" linenumbering="unnumbered">/opt/kafka/bin/kafka-server-start.sh -daemon /opt/kafka/config/server.properties</programlisting>
</listitem>
<listitem>
<simpara>Verify that the restarted Kafka broker has caught up with the partition replicas it is following. Use the <literal>kafka-topics.sh</literal> tool to ensure that all replicas contained in the broker are back in sync. For instructions, see <link linkend="proc-describing-a-topic-str">Listing and describing topics</link>.</simpara>
</listitem>
</orderedlist>
</section>
<section xml:id="con-strategies-for-upgrading-clients-str">
<title>Strategies for upgrading clients</title>
<simpara>The best approach to upgrading your client applications depends on your particular circumstances. Client applications might include producers, consumers, Kafka Connect, and Kafka MirrorMaker.</simpara>
<simpara>Consuming applications need to receive messages in a message format that they understand. You can ensure that this is the case in one of two ways:</simpara>
<itemizedlist>
<listitem>
<simpara>By upgrading all the consumers for a topic <emphasis>before</emphasis> upgrading any of the producers.</simpara>
</listitem>
<listitem>
<simpara>By having the brokers down-convert messages to an older format.</simpara>
</listitem>
</itemizedlist>
<simpara>Using broker down-conversion puts extra load on the brokers, so it is not ideal to rely on down-conversion for all topics for a prolonged period of time.
For brokers to perform optimally they should not be down converting messages at all.</simpara>
<simpara>Broker down-conversion is configured in two ways:</simpara>
<itemizedlist>
<listitem>
<simpara>The topic-level <literal>message.format.version</literal> configures it for a single topic.</simpara>
</listitem>
<listitem>
<simpara>The broker-level <literal>log.message.format.version</literal> is the default for topics that do not have the topic-level <literal>message.format.version</literal> configured.</simpara>
</listitem>
</itemizedlist>
<simpara>Another aspect to consider is that once new-version messages have been published to a topic then they will be visible to consumers.
This is because brokers perform down-conversion when they receive messages from producers, not when they are sent to consumers.</simpara>
<simpara>There are a number of strategies you can use to upgrade your clients:</simpara>
<variablelist>
<varlistentry>
<term>Consumers first</term>
<listitem>
<orderedlist numeration="arabic">
<listitem>
<simpara>Upgrade all the consuming applications.</simpara>
</listitem>
<listitem>
<simpara>Change the broker-level <literal>log.message.format.version</literal> to the new version.</simpara>
</listitem>
<listitem>
<simpara>Upgrade all the producing applications.</simpara>
<simpara>This strategy is straightforward, and avoids any broker down-conversion.
However, it assumes that all consumers in your organization can be upgraded in a coordinated way, and it does not work for applications that are both consumers and producers.
There is also a risk that, if there is a problem with the upgraded clients, new-format messages might get added to the message log so that you cannot revert to the previous consumer version.</simpara>
</listitem>
</orderedlist>
</listitem>
</varlistentry>
<varlistentry>
<term>Per-topic consumers first</term>
<listitem>
<simpara>For each topic:</simpara>
<orderedlist numeration="arabic">
<listitem>
<simpara>Upgrade all the consuming applications.</simpara>
</listitem>
<listitem>
<simpara>Change the topic-level <literal>message.format.version</literal> to the new version.</simpara>
</listitem>
<listitem>
<simpara>Upgrade all the producing applications.</simpara>
<simpara>This strategy avoids any broker down-conversion, and means you can proceed on a topic-by-topic basis. It does not work for applications that are both consumers and producers of the same topic. Again, it has the risk that, if there is a problem with the upgraded clients, new-format messages might get added to the message log.</simpara>
</listitem>
</orderedlist>
</listitem>
</varlistentry>
<varlistentry>
<term>Per-topic consumers first, with down conversion</term>
<listitem>
<simpara>For each topic:</simpara>
<orderedlist numeration="arabic">
<listitem>
<simpara>Change the topic-level <literal>message.format.version</literal> to the old version
(or rely on the topic defaulting to the broker-level <literal>log.message.format.version</literal>).</simpara>
</listitem>
<listitem>
<simpara>Upgrade all the consuming and producing applications.</simpara>
</listitem>
<listitem>
<simpara>Verify that the upgraded applications function correctly.</simpara>
</listitem>
<listitem>
<simpara>Change the topic-level <literal>message.format.version</literal> to the new version.</simpara>
<simpara>This strategy requires broker down-conversion, but the load on the brokers is minimized because it is only required for a single topic (or small group of topics) at a time. It also works for applications that are both consumers and producers of the same topic. This approach ensures that the upgraded producers and consumers are working correctly before you commit to using the new message format version.</simpara>
<simpara>The main drawback of this approach is that it can be complicated to manage in a cluster with many topics and applications.</simpara>
</listitem>
</orderedlist>
</listitem>
</varlistentry>
</variablelist>
<simpara>Other strategies for upgrading client applications are also possible.</simpara>
<note>
<simpara>It is also possible to apply multiple strategies.
For example, for the first few applications and topics the
"per-topic consumers first, with down conversion" strategy can be used.
When this has proved successful another, more efficient strategy can be considered acceptable to use instead.</simpara>
</note>
</section>
<section xml:id="proc-upgrading-clients-to-new-kafka-version-str">
<title>Upgrading client applications to the new Kafka version</title>
<simpara>This procedure describes one possible approach to upgrading your client applications to the Kafka version used for AMQ Streams 1.4.</simpara>
<simpara>The procedure is based on the "per-topic consumers first, with down conversion" approach outlined in <link linkend="con-strategies-for-upgrading-clients-str">Strategies for upgrading clients</link>.</simpara>
<simpara>Client applications might include producers, consumers, Kafka Connect, and MirrorMaker.</simpara>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara><link linkend="proc-upgrading-zookeeper-binaries-str">You have updated the ZooKeeper binaries.</link></simpara>
</listitem>
<listitem>
<simpara><link linkend="proc-upgrading-kafka-brokers-to-amq-streams-str">You have upgraded all Kafka brokers to AMQ Streams 1.4.</link></simpara>
</listitem>
<listitem>
<simpara><link linkend="proc-updating-kafka-brokers-to-new-inter-broker-protocol-version-str">You have configured Kafka brokers to use the new inter-broker protocol version.</link></simpara>
</listitem>
<listitem>
<simpara>You are logged in to Red Hat Enterprise Linux as the <literal>kafka</literal> user.</simpara>
</listitem>
</itemizedlist>
<formalpara>
<title>Procedure</title>
<para>For each topic:</para>
</formalpara>
<orderedlist numeration="arabic">
<listitem>
<simpara>On the command line, set the <literal>message.format.version</literal> configuration option to <literal>2.2</literal>.</simpara>
<programlisting language="shell" linenumbering="unnumbered">bin/kafka-configs.sh --zookeeper <emphasis>&lt;ZooKeeperAddress&gt;</emphasis> --entity-type topics --entity-name <emphasis>&lt;TopicName&gt;</emphasis> --alter --add-config message.format.version=2.2</programlisting>
</listitem>
<listitem>
<simpara>Upgrade all the consuming and producing applications for the topic.</simpara>
</listitem>
<listitem>
<simpara>Verify that the upgraded applications function correctly.</simpara>
</listitem>
<listitem>
<simpara>Change the topic’s <literal>message.format.version</literal> configuration option to <literal>2.3</literal>.</simpara>
<programlisting language="shell" linenumbering="unnumbered">bin/kafka-configs.sh --zookeeper <emphasis>&lt;ZooKeeperAddress&gt;</emphasis> --entity-type topics --entity-name <emphasis>&lt;TopicName&gt;</emphasis> --alter --add-config message.format.version=2.3</programlisting>
</listitem>
</orderedlist>
<itemizedlist>
<title>Additional resources</title>
<listitem>
<simpara><link linkend="con-strategies-for-upgrading-clients-str">Strategies for upgrading clients</link></simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="proc-updating-kafka-brokers-to-new-message-format-version-str">
<title>Upgrading Kafka brokers to use the new message format version</title>
<simpara>When client applications have been upgraded, you can update the Kafka brokers to use the new message format version.</simpara>
<simpara>If you did <emphasis>not</emphasis> modify topic configurations when you upgraded your client applications to use the Kafka version required for AMQ Streams 1.4, the Kafka brokers are now converting messages down to the previous message format version, which can cause a reduction in performance. Therefore, it is important that you update all Kafka brokers to use the new message format version as soon as possible.</simpara>
<note>
<simpara>Update and restart the Kafka brokers one-by-one. Before you restart a modified broker, stop the broker you configured and restarted previously.</simpara>
</note>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara><link linkend="proc-upgrading-zookeeper-binaries-str">You have updated the ZooKeeper binaries.</link></simpara>
</listitem>
<listitem>
<simpara><link linkend="proc-upgrading-kafka-brokers-to-amq-streams-str">You have upgraded all Kafka brokers to AMQ Streams 1.4.</link></simpara>
</listitem>
<listitem>
<simpara><link linkend="proc-updating-kafka-brokers-to-new-inter-broker-protocol-version-str">You have configured Kafka brokers to use the new inter-broker protocol version.</link></simpara>
</listitem>
<listitem>
<simpara><link linkend="proc-upgrading-clients-to-new-kafka-version-str">You have upgraded supported client applications that consume messages from topics for which the <literal>message.format.version</literal> property is <emphasis>not</emphasis> explicitly configured at the topic level.</link></simpara>
</listitem>
<listitem>
<simpara>You are logged in to Red Hat Enterprise Linux as the <literal>kafka</literal> user.</simpara>
</listitem>
</itemizedlist>
<formalpara>
<title>Procedure</title>
<para>For each Kafka broker in your AMQ Streams cluster and one at a time:</para>
</formalpara>
<orderedlist numeration="arabic">
<listitem>
<simpara>In a text editor, open the broker properties file for the Kafka broker you want to update. Broker properties files are commonly stored in the <literal>/opt/kafka/config/</literal> directory.</simpara>
</listitem>
<listitem>
<simpara>Set the <literal>log.message.format.version</literal> to <literal>2.3</literal>.</simpara>
<programlisting language="shell" linenumbering="unnumbered">log.message.format.version=2.3</programlisting>
</listitem>
<listitem>
<simpara>On the command line, stop the Kafka broker that you most recently modified and restarted as part of this procedure. If you are modifying the first Kafka broker in this procedure, go to step four.</simpara>
<programlisting language="shell" linenumbering="unnumbered">/opt/kafka/bin/kafka-server-stop.sh
jcmd | grep kafka</programlisting>
</listitem>
<listitem>
<simpara>Restart the Kafka broker whose configuration you modified in step two:</simpara>
<programlisting language="shell" linenumbering="unnumbered">/opt/kafka/bin/kafka-server-start.sh -daemon /opt/kafka/config/server.properties</programlisting>
</listitem>
<listitem>
<simpara>Verify that the restarted Kafka broker has caught up with the partition replicas it is following. Use the <literal>kafka-topics.sh</literal> tool to ensure that all replicas contained in the broker are back in sync. For instructions, see <link linkend="proc-describing-a-topic-str">Listing and describing topics</link>.</simpara>
</listitem>
</orderedlist>
</section>
</section>
</chapter>
<appendix xml:id="broker-configuration-parameters-str">
<title>Broker configuration parameters</title>
<variablelist>
<varlistentry>
<term><literal>zookeeper.connect</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> string<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> high<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> read-only<?asciidoc-br?></simpara>
<simpara>Specifies the ZooKeeper connection string in the form <literal>hostname:port</literal> where host and port are the host and port of a ZooKeeper server. To allow connecting through other ZooKeeper nodes when that ZooKeeper machine is down you can also specify multiple hosts in the form <literal>hostname1:port1,hostname2:port2,hostname3:port3</literal>.
The server can also have a ZooKeeper chroot path as part of its ZooKeeper connection string which puts its data under some path in the global ZooKeeper namespace. For example to give a chroot path of <literal>/chroot/path</literal> you would give the connection string as <literal>hostname1:port1,hostname2:port2,hostname3:port3/chroot/path</literal>.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>advertised.host.name</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> string<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> null<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> high<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> read-only<?asciidoc-br?></simpara>
<simpara>DEPRECATED: only used when <literal>advertised.listeners</literal> or <literal>listeners</literal> are not set. Use <literal>advertised.listeners</literal> instead.
Hostname to publish to ZooKeeper for clients to use. In IaaS environments, this may need to be different from the interface to which the broker binds. If this is not set, it will use the value for <literal>host.name</literal> if configured. Otherwise it will use the value returned from java.net.InetAddress.getCanonicalHostName().</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>advertised.listeners</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> string<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> null<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> high<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> per-broker<?asciidoc-br?></simpara>
<simpara>Listeners to publish to ZooKeeper for clients to use, if different than the <literal>listeners</literal> config property. In IaaS environments, this may need to be different from the interface to which the broker binds. If this is not set, the value for <literal>listeners</literal> will be used. Unlike <literal>listeners</literal> it is not valid to advertise the 0.0.0.0 meta-address.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>advertised.port</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> int<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> null<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> high<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> read-only<?asciidoc-br?></simpara>
<simpara>DEPRECATED: only used when <literal>advertised.listeners</literal> or <literal>listeners</literal> are not set. Use <literal>advertised.listeners</literal> instead.
The port to publish to ZooKeeper for clients to use. In IaaS environments, this may need to be different from the port to which the broker binds. If this is not set, it will publish the same port that the broker binds to.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>auto.create.topics.enable</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> boolean<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> true<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> high<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> read-only<?asciidoc-br?></simpara>
<simpara>Enable auto creation of topic on the server.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>auto.leader.rebalance.enable</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> boolean<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> true<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> high<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> read-only<?asciidoc-br?></simpara>
<simpara>Enables auto leader balancing. A background thread checks and triggers leader balance if required at regular intervals.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>background.threads</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> int<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 10<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [1,…​]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> high<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> cluster-wide<?asciidoc-br?></simpara>
<simpara>The number of threads to use for various background processing tasks.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>broker.id</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> int<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> -1<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> high<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> read-only<?asciidoc-br?></simpara>
<simpara>The broker id for this server. If unset, a unique broker id will be generated.To avoid conflicts between zookeeper generated broker id’s and user configured broker id’s, generated broker ids start from reserved.broker.max.id + 1.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>compression.type</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> string<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> producer<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> high<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> cluster-wide<?asciidoc-br?></simpara>
<simpara>Specify the final compression type for a given topic. This configuration accepts the standard compression codecs ('gzip', 'snappy', 'lz4', 'zstd'). It additionally accepts 'uncompressed' which is equivalent to no compression; and 'producer' which means retain the original compression codec set by the producer.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>control.plane.listener.name</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> string<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> null<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> high<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> read-only<?asciidoc-br?></simpara>
<simpara>Name of listener used for communication between controller and brokers. Broker will use the control.plane.listener.name to locate the endpoint in listeners list, to listen for connections from the controller. For example, if a broker’s config is :
listeners = INTERNAL://192.1.1.8:9092, EXTERNAL://10.1.1.5:9093, CONTROLLER://192.1.1.8:9094
listener.security.protocol.map = INTERNAL:PLAINTEXT, EXTERNAL:SSL, CONTROLLER:SSL
control.plane.listener.name = CONTROLLER
On startup, the broker will start listening on "192.1.1.8:9094" with security protocol "SSL".
On controller side, when it discovers a broker’s published endpoints through zookeeper, it will use the control.plane.listener.name to find the endpoint, which it will use to establish connection to the broker.
For example, if the broker’s published endpoints on zookeeper are :
"endpoints" : ["INTERNAL://broker1.example.com:9092","EXTERNAL://broker1.example.com:9093","CONTROLLER://broker1.example.com:9094"]
 and the controller’s config is :
listener.security.protocol.map = INTERNAL:PLAINTEXT, EXTERNAL:SSL, CONTROLLER:SSL
control.plane.listener.name = CONTROLLER
then controller will use "broker1.example.com:9094" with security protocol "SSL" to connect to the broker.
If not explicitly configured, the default value will be null and there will be no dedicated endpoints for controller connections.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>delete.topic.enable</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> boolean<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> true<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> high<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> read-only<?asciidoc-br?></simpara>
<simpara>Enables delete topic. Delete topic through the admin tool will have no effect if this config is turned off.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>host.name</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> string<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> ""<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> high<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> read-only<?asciidoc-br?></simpara>
<simpara>DEPRECATED: only used when <literal>listeners</literal> is not set. Use <literal>listeners</literal> instead.
hostname of broker. If this is set, it will only bind to this address. If this is not set, it will bind to all interfaces.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>leader.imbalance.check.interval.seconds</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> long<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 300<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> high<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> read-only<?asciidoc-br?></simpara>
<simpara>The frequency with which the partition rebalance check is triggered by the controller.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>leader.imbalance.per.broker.percentage</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> int<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 10<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> high<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> read-only<?asciidoc-br?></simpara>
<simpara>The ratio of leader imbalance allowed per broker. The controller would trigger a leader balance if it goes above this value per broker. The value is specified in percentage.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>listeners</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> string<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> null<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> high<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> per-broker<?asciidoc-br?></simpara>
<simpara>Listener List - Comma-separated list of URIs we will listen on and the listener names. If the listener name is not a security protocol, listener.security.protocol.map must also be set.
 Specify hostname as 0.0.0.0 to bind to all interfaces.
 Leave hostname empty to bind to default interface.
 Examples of legal listener lists:
 PLAINTEXT://myhost:9092,SSL://:9091
 CLIENT://0.0.0.0:9092,REPLICATION://localhost:9093.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>log.dir</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> string<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> /tmp/kafka-logs<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> high<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> read-only<?asciidoc-br?></simpara>
<simpara>The directory in which the log data is kept (supplemental for log.dirs property).</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>log.dirs</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> string<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> null<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> high<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> read-only<?asciidoc-br?></simpara>
<simpara>The directories in which the log data is kept. If not set, the value in log.dir is used.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>log.flush.interval.messages</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> long<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 9223372036854775807<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [1,…​]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> high<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> cluster-wide<?asciidoc-br?></simpara>
<simpara>The number of messages accumulated on a log partition before messages are flushed to disk.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>log.flush.interval.ms</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> long<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> null<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> high<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> cluster-wide<?asciidoc-br?></simpara>
<simpara>The maximum time in ms that a message in any topic is kept in memory before flushed to disk. If not set, the value in log.flush.scheduler.interval.ms is used.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>log.flush.offset.checkpoint.interval.ms</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> int<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 60000<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [0,…​]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> high<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> read-only<?asciidoc-br?></simpara>
<simpara>The frequency with which we update the persistent record of the last flush which acts as the log recovery point.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>log.flush.scheduler.interval.ms</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> long<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 9223372036854775807<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> high<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> read-only<?asciidoc-br?></simpara>
<simpara>The frequency in ms that the log flusher checks whether any log needs to be flushed to disk.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>log.flush.start.offset.checkpoint.interval.ms</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> int<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 60000<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [0,…​]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> high<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> read-only<?asciidoc-br?></simpara>
<simpara>The frequency with which we update the persistent record of log start offset.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>log.retention.bytes</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> long<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> -1<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> high<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> cluster-wide<?asciidoc-br?></simpara>
<simpara>The maximum size of the log before deleting it.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>log.retention.hours</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> int<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 168<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> high<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> read-only<?asciidoc-br?></simpara>
<simpara>The number of hours to keep a log file before deleting it (in hours), tertiary to log.retention.ms property.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>log.retention.minutes</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> int<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> null<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> high<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> read-only<?asciidoc-br?></simpara>
<simpara>The number of minutes to keep a log file before deleting it (in minutes), secondary to log.retention.ms property. If not set, the value in log.retention.hours is used.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>log.retention.ms</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> long<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> null<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> high<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> cluster-wide<?asciidoc-br?></simpara>
<simpara>The number of milliseconds to keep a log file before deleting it (in milliseconds), If not set, the value in log.retention.minutes is used. If set to -1, no time limit is applied.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>log.roll.hours</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> int<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 168<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [1,…​]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> high<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> read-only<?asciidoc-br?></simpara>
<simpara>The maximum time before a new log segment is rolled out (in hours), secondary to log.roll.ms property.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>log.roll.jitter.hours</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> int<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 0<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [0,…​]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> high<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> read-only<?asciidoc-br?></simpara>
<simpara>The maximum jitter to subtract from logRollTimeMillis (in hours), secondary to log.roll.jitter.ms property.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>log.roll.jitter.ms</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> long<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> null<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> high<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> cluster-wide<?asciidoc-br?></simpara>
<simpara>The maximum jitter to subtract from logRollTimeMillis (in milliseconds). If not set, the value in log.roll.jitter.hours is used.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>log.roll.ms</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> long<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> null<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> high<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> cluster-wide<?asciidoc-br?></simpara>
<simpara>The maximum time before a new log segment is rolled out (in milliseconds). If not set, the value in log.roll.hours is used.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>log.segment.bytes</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> int<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 1073741824<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [14,…​]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> high<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> cluster-wide<?asciidoc-br?></simpara>
<simpara>The maximum size of a single log file.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>log.segment.delete.delay.ms</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> long<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 60000<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [0,…​]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> high<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> cluster-wide<?asciidoc-br?></simpara>
<simpara>The amount of time to wait before deleting a file from the filesystem.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>message.max.bytes</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> int<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 1000012<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [0,…​]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> high<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> cluster-wide<?asciidoc-br?></simpara>
<simpara>The largest record batch size allowed by Kafka. If this is increased and there are consumers older than 0.10.2, the consumers' fetch size must also be increased so that the they can fetch record batches this large.</simpara>
<simpara>In the latest message format version, records are always grouped into batches for efficiency. In previous message format versions, uncompressed records are not grouped into batches and this limit only applies to a single record in that case.</simpara>
<simpara>This can be set per topic with the topic level <literal>max.message.bytes</literal> config.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>min.insync.replicas</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> int<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 1<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [1,…​]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> high<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> cluster-wide<?asciidoc-br?></simpara>
<simpara>When a producer sets acks to "all" (or "-1"), min.insync.replicas specifies the minimum number of replicas that must acknowledge a write for the write to be considered successful. If this minimum cannot be met, then the producer will raise an exception (either NotEnoughReplicas or NotEnoughReplicasAfterAppend).
When used together, min.insync.replicas and acks allow you to enforce greater durability guarantees. A typical scenario would be to create a topic with a replication factor of 3, set min.insync.replicas to 2, and produce with acks of "all". This will ensure that the producer raises an exception if a majority of replicas do not receive a write.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>num.io.threads</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> int<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 8<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [1,…​]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> high<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> cluster-wide<?asciidoc-br?></simpara>
<simpara>The number of threads that the server uses for processing requests, which may include disk I/O.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>num.network.threads</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> int<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 3<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [1,…​]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> high<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> cluster-wide<?asciidoc-br?></simpara>
<simpara>The number of threads that the server uses for receiving requests from the network and sending responses to the network.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>num.recovery.threads.per.data.dir</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> int<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 1<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [1,…​]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> high<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> cluster-wide<?asciidoc-br?></simpara>
<simpara>The number of threads per data directory to be used for log recovery at startup and flushing at shutdown.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>num.replica.alter.log.dirs.threads</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> int<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> null<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> high<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> read-only<?asciidoc-br?></simpara>
<simpara>The number of threads that can move replicas between log directories, which may include disk I/O.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>num.replica.fetchers</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> int<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 1<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> high<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> cluster-wide<?asciidoc-br?></simpara>
<simpara>Number of fetcher threads used to replicate messages from a source broker. Increasing this value can increase the degree of I/O parallelism in the follower broker.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>offset.metadata.max.bytes</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> int<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 4096<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> high<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> read-only<?asciidoc-br?></simpara>
<simpara>The maximum size for a metadata entry associated with an offset commit.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>offsets.commit.required.acks</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> short<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> -1<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> high<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> read-only<?asciidoc-br?></simpara>
<simpara>The required acks before the commit can be accepted. In general, the default (-1) should not be overridden.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>offsets.commit.timeout.ms</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> int<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 5000<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [1,…​]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> high<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> read-only<?asciidoc-br?></simpara>
<simpara>Offset commit will be delayed until all replicas for the offsets topic receive the commit or this timeout is reached. This is similar to the producer request timeout.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>offsets.load.buffer.size</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> int<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 5242880<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [1,…​]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> high<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> read-only<?asciidoc-br?></simpara>
<simpara>Batch size for reading from the offsets segments when loading offsets into the cache (soft-limit, overridden if records are too large).</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>offsets.retention.check.interval.ms</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> long<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 600000<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [1,…​]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> high<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> read-only<?asciidoc-br?></simpara>
<simpara>Frequency at which to check for stale offsets.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>offsets.retention.minutes</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> int<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 10080<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [1,…​]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> high<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> read-only<?asciidoc-br?></simpara>
<simpara>After a consumer group loses all its consumers (i.e. becomes empty) its offsets will be kept for this retention period before getting discarded. For standalone consumers (using manual assignment), offsets will be expired after the time of last commit plus this retention period.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>offsets.topic.compression.codec</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> int<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 0<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> high<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> read-only<?asciidoc-br?></simpara>
<simpara>Compression codec for the offsets topic - compression may be used to achieve "atomic" commits.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>offsets.topic.num.partitions</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> int<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 50<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [1,…​]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> high<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> read-only<?asciidoc-br?></simpara>
<simpara>The number of partitions for the offset commit topic (should not change after deployment).</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>offsets.topic.replication.factor</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> short<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 3<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [1,…​]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> high<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> read-only<?asciidoc-br?></simpara>
<simpara>The replication factor for the offsets topic (set higher to ensure availability). Internal topic creation will fail until the cluster size meets this replication factor requirement.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>offsets.topic.segment.bytes</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> int<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 104857600<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [1,…​]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> high<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> read-only<?asciidoc-br?></simpara>
<simpara>The offsets topic segment bytes should be kept relatively small in order to facilitate faster log compaction and cache loads.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>port</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> int<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 9092<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> high<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> read-only<?asciidoc-br?></simpara>
<simpara>DEPRECATED: only used when <literal>listeners</literal> is not set. Use <literal>listeners</literal> instead.
the port to listen and accept connections on.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>queued.max.requests</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> int<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 500<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [1,…​]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> high<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> read-only<?asciidoc-br?></simpara>
<simpara>The number of queued requests allowed for data-plane, before blocking the network threads.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>quota.consumer.default</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> long<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 9223372036854775807<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [1,…​]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> high<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> read-only<?asciidoc-br?></simpara>
<simpara>DEPRECATED: Used only when dynamic default quotas are not configured for &lt;user, &lt;client-id&gt; or &lt;user, client-id&gt; in Zookeeper. Any consumer distinguished by clientId/consumer group will get throttled if it fetches more bytes than this value per-second.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>quota.producer.default</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> long<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 9223372036854775807<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [1,…​]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> high<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> read-only<?asciidoc-br?></simpara>
<simpara>DEPRECATED: Used only when dynamic default quotas are not configured for &lt;user&gt;, &lt;client-id&gt; or &lt;user, client-id&gt; in Zookeeper. Any producer distinguished by clientId will get throttled if it produces more bytes than this value per-second.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>replica.fetch.min.bytes</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> int<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 1<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> high<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> read-only<?asciidoc-br?></simpara>
<simpara>Minimum bytes expected for each fetch response. If not enough bytes, wait up to replicaMaxWaitTimeMs.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>replica.fetch.wait.max.ms</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> int<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 500<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> high<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> read-only<?asciidoc-br?></simpara>
<simpara>max wait time for each fetcher request issued by follower replicas. This value should always be less than the replica.lag.time.max.ms at all times to prevent frequent shrinking of ISR for low throughput topics.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>replica.high.watermark.checkpoint.interval.ms</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> long<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 5000<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> high<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> read-only<?asciidoc-br?></simpara>
<simpara>The frequency with which the high watermark is saved out to disk.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>replica.lag.time.max.ms</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> long<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 10000<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> high<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> read-only<?asciidoc-br?></simpara>
<simpara>If a follower hasn’t sent any fetch requests or hasn’t consumed up to the leaders log end offset for at least this time, the leader will remove the follower from isr.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>replica.socket.receive.buffer.bytes</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> int<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 65536<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> high<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> read-only<?asciidoc-br?></simpara>
<simpara>The socket receive buffer for network requests.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>replica.socket.timeout.ms</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> int<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 30000<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> high<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> read-only<?asciidoc-br?></simpara>
<simpara>The socket timeout for network requests. Its value should be at least replica.fetch.wait.max.ms.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>request.timeout.ms</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> int<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 30000<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> high<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> read-only<?asciidoc-br?></simpara>
<simpara>The configuration controls the maximum amount of time the client will wait for the response of a request. If the response is not received before the timeout elapses the client will resend the request if necessary or fail the request if retries are exhausted.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>socket.receive.buffer.bytes</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> int<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 102400<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> high<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> read-only<?asciidoc-br?></simpara>
<simpara>The SO_RCVBUF buffer of the socket server sockets. If the value is -1, the OS default will be used.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>socket.request.max.bytes</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> int<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 104857600<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [1,…​]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> high<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> read-only<?asciidoc-br?></simpara>
<simpara>The maximum number of bytes in a socket request.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>socket.send.buffer.bytes</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> int<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 102400<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> high<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> read-only<?asciidoc-br?></simpara>
<simpara>The SO_SNDBUF buffer of the socket server sockets. If the value is -1, the OS default will be used.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>transaction.max.timeout.ms</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> int<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 900000<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [1,…​]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> high<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> read-only<?asciidoc-br?></simpara>
<simpara>The maximum allowed timeout for transactions. If a client’s requested transaction time exceed this, then the broker will return an error in InitProducerIdRequest. This prevents a client from too large of a timeout, which can stall consumers reading from topics included in the transaction.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>transaction.state.log.load.buffer.size</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> int<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 5242880<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [1,…​]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> high<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> read-only<?asciidoc-br?></simpara>
<simpara>Batch size for reading from the transaction log segments when loading producer ids and transactions into the cache (soft-limit, overridden if records are too large).</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>transaction.state.log.min.isr</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> int<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 2<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [1,…​]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> high<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> read-only<?asciidoc-br?></simpara>
<simpara>Overridden min.insync.replicas config for the transaction topic.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>transaction.state.log.num.partitions</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> int<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 50<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [1,…​]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> high<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> read-only<?asciidoc-br?></simpara>
<simpara>The number of partitions for the transaction topic (should not change after deployment).</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>transaction.state.log.replication.factor</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> short<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 3<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [1,…​]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> high<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> read-only<?asciidoc-br?></simpara>
<simpara>The replication factor for the transaction topic (set higher to ensure availability). Internal topic creation will fail until the cluster size meets this replication factor requirement.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>transaction.state.log.segment.bytes</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> int<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 104857600<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [1,…​]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> high<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> read-only<?asciidoc-br?></simpara>
<simpara>The transaction topic segment bytes should be kept relatively small in order to facilitate faster log compaction and cache loads.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>transactional.id.expiration.ms</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> int<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 604800000<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [1,…​]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> high<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> read-only<?asciidoc-br?></simpara>
<simpara>The maximum amount of time in ms that the transaction coordinator will wait before proactively expire a producer’s transactional id without receiving any transaction status updates from it.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>unclean.leader.election.enable</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> boolean<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> false<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> high<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> cluster-wide<?asciidoc-br?></simpara>
<simpara>Indicates whether to enable replicas not in the ISR set to be elected as leader as a last resort, even though doing so may result in data loss.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>zookeeper.connection.timeout.ms</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> int<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> null<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> high<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> read-only<?asciidoc-br?></simpara>
<simpara>The max time that the client waits to establish a connection to zookeeper. If not set, the value in zookeeper.session.timeout.ms is used.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>zookeeper.max.in.flight.requests</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> int<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 10<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [1,…​]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> high<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> read-only<?asciidoc-br?></simpara>
<simpara>The maximum number of unacknowledged requests the client will send to Zookeeper before blocking.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>zookeeper.session.timeout.ms</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> int<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 6000<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> high<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> read-only<?asciidoc-br?></simpara>
<simpara>Zookeeper session timeout.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>zookeeper.set.acl</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> boolean<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> false<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> high<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> read-only<?asciidoc-br?></simpara>
<simpara>Set client to use secure ACLs.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>broker.id.generation.enable</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> boolean<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> true<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> read-only<?asciidoc-br?></simpara>
<simpara>Enable automatic broker id generation on the server. When enabled the value configured for reserved.broker.max.id should be reviewed.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>broker.rack</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> string<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> null<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> read-only<?asciidoc-br?></simpara>
<simpara>Rack of the broker. This will be used in rack aware replication assignment for fault tolerance. Examples: <literal>RACK1</literal>, <literal>us-east-1d</literal>.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>connections.max.idle.ms</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> long<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 600000<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> read-only<?asciidoc-br?></simpara>
<simpara>Idle connections timeout: the server socket processor threads close the connections that idle more than this.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>connections.max.reauth.ms</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> long<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 0<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> read-only<?asciidoc-br?></simpara>
<simpara>When explicitly set to a positive number (the default is 0, not a positive number), a session lifetime that will not exceed the configured value will be communicated to v2.2.0 or later clients when they authenticate. The broker will disconnect any such connection that is not re-authenticated within the session lifetime and that is then subsequently used for any purpose other than re-authentication. Configuration names can optionally be prefixed with listener prefix and SASL mechanism name in lower-case. For example, listener.name.sasl_ssl.oauthbearer.connections.max.reauth.ms=3600000.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>controlled.shutdown.enable</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> boolean<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> true<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> read-only<?asciidoc-br?></simpara>
<simpara>Enable controlled shutdown of the server.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>controlled.shutdown.max.retries</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> int<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 3<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> read-only<?asciidoc-br?></simpara>
<simpara>Controlled shutdown can fail for multiple reasons. This determines the number of retries when such failure happens.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>controlled.shutdown.retry.backoff.ms</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> long<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 5000<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> read-only<?asciidoc-br?></simpara>
<simpara>Before each retry, the system needs time to recover from the state that caused the previous failure (Controller fail over, replica lag etc). This config determines the amount of time to wait before retrying.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>controller.socket.timeout.ms</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> int<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 30000<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> read-only<?asciidoc-br?></simpara>
<simpara>The socket timeout for controller-to-broker channels.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>default.replication.factor</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> int<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 1<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> read-only<?asciidoc-br?></simpara>
<simpara>default replication factors for automatically created topics.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>delegation.token.expiry.time.ms</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> long<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 86400000<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [1,…​]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> read-only<?asciidoc-br?></simpara>
<simpara>The token validity time in miliseconds before the token needs to be renewed. Default value 1 day.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>delegation.token.master.key</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> password<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> null<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> read-only<?asciidoc-br?></simpara>
<simpara>Master/secret key to generate and verify delegation tokens. Same key must be configured across all the brokers.  If the key is not set or set to empty string, brokers will disable the delegation token support.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>delegation.token.max.lifetime.ms</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> long<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 604800000<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [1,…​]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> read-only<?asciidoc-br?></simpara>
<simpara>The token has a maximum lifetime beyond which it cannot be renewed anymore. Default value 7 days.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>delete.records.purgatory.purge.interval.requests</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> int<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 1<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> read-only<?asciidoc-br?></simpara>
<simpara>The purge interval (in number of requests) of the delete records request purgatory.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>fetch.purgatory.purge.interval.requests</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> int<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 1000<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> read-only<?asciidoc-br?></simpara>
<simpara>The purge interval (in number of requests) of the fetch request purgatory.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>group.initial.rebalance.delay.ms</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> int<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 3000<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> read-only<?asciidoc-br?></simpara>
<simpara>The amount of time the group coordinator will wait for more consumers to join a new group before performing the first rebalance. A longer delay means potentially fewer rebalances, but increases the time until processing begins.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>group.max.session.timeout.ms</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> int<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 1800000<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> read-only<?asciidoc-br?></simpara>
<simpara>The maximum allowed session timeout for registered consumers. Longer timeouts give consumers more time to process messages in between heartbeats at the cost of a longer time to detect failures.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>group.max.size</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> int<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 2147483647<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [1,…​]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> read-only<?asciidoc-br?></simpara>
<simpara>The maximum number of consumers that a single consumer group can accommodate.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>group.min.session.timeout.ms</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> int<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 6000<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> read-only<?asciidoc-br?></simpara>
<simpara>The minimum allowed session timeout for registered consumers. Shorter timeouts result in quicker failure detection at the cost of more frequent consumer heartbeating, which can overwhelm broker resources.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>inter.broker.listener.name</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> string<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> null<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> read-only<?asciidoc-br?></simpara>
<simpara>Name of listener used for communication between brokers. If this is unset, the listener name is defined by security.inter.broker.protocol. It is an error to set this and security.inter.broker.protocol properties at the same time.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>inter.broker.protocol.version</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> string<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 2.3-IV1<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [0.8.0, 0.8.1, 0.8.2, 0.9.0, 0.10.0-IV0, 0.10.0-IV1, 0.10.1-IV0, 0.10.1-IV1, 0.10.1-IV2, 0.10.2-IV0, 0.11.0-IV0, 0.11.0-IV1, 0.11.0-IV2, 1.0-IV0, 1.1-IV0, 2.0-IV0, 2.0-IV1, 2.1-IV0, 2.1-IV1, 2.1-IV2, 2.2-IV0, 2.2-IV1, 2.3-IV0, 2.3-IV1]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> read-only<?asciidoc-br?></simpara>
<simpara>Specify which version of the inter-broker protocol will be used.
 This is typically bumped after all brokers were upgraded to a new version.
 Example of some valid values are: 0.8.0, 0.8.1, 0.8.1.1, 0.8.2, 0.8.2.0, 0.8.2.1, 0.9.0.0, 0.9.0.1 Check ApiVersion for the full list.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>log.cleaner.backoff.ms</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> long<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 15000<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [0,…​]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> cluster-wide<?asciidoc-br?></simpara>
<simpara>The amount of time to sleep when there are no logs to clean.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>log.cleaner.dedupe.buffer.size</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> long<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 134217728<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> cluster-wide<?asciidoc-br?></simpara>
<simpara>The total memory used for log deduplication across all cleaner threads.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>log.cleaner.delete.retention.ms</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> long<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 86400000<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> cluster-wide<?asciidoc-br?></simpara>
<simpara>How long are delete records retained?</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>log.cleaner.enable</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> boolean<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> true<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> read-only<?asciidoc-br?></simpara>
<simpara>Enable the log cleaner process to run on the server. Should be enabled if using any topics with a cleanup.policy=compact including the internal offsets topic. If disabled those topics will not be compacted and continually grow in size.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>log.cleaner.io.buffer.load.factor</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> double<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 0.9<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> cluster-wide<?asciidoc-br?></simpara>
<simpara>Log cleaner dedupe buffer load factor. The percentage full the dedupe buffer can become. A higher value will allow more log to be cleaned at once but will lead to more hash collisions.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>log.cleaner.io.buffer.size</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> int<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 524288<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [0,…​]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> cluster-wide<?asciidoc-br?></simpara>
<simpara>The total memory used for log cleaner I/O buffers across all cleaner threads.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>log.cleaner.io.max.bytes.per.second</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> double<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 1.7976931348623157E308<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> cluster-wide<?asciidoc-br?></simpara>
<simpara>The log cleaner will be throttled so that the sum of its read and write i/o will be less than this value on average.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>log.cleaner.max.compaction.lag.ms</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> long<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 9223372036854775807<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> cluster-wide<?asciidoc-br?></simpara>
<simpara>The maximum time a message will remain ineligible for compaction in the log. Only applicable for logs that are being compacted.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>log.cleaner.min.cleanable.ratio</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> double<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 0.5<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> cluster-wide<?asciidoc-br?></simpara>
<simpara>The minimum ratio of dirty log to total log for a log to eligible for cleaning. If the log.cleaner.max.compaction.lag.ms or the log.cleaner.min.compaction.lag.ms configurations are also specified, then the log compactor considers the log eligible for compaction as soon as either: (i) the dirty ratio threshold has been met and the log has had dirty (uncompacted) records for at least the log.cleaner.min.compaction.lag.ms duration, or (ii) if the log has had dirty (uncompacted) records for at most the log.cleaner.max.compaction.lag.ms period.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>log.cleaner.min.compaction.lag.ms</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> long<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 0<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> cluster-wide<?asciidoc-br?></simpara>
<simpara>The minimum time a message will remain uncompacted in the log. Only applicable for logs that are being compacted.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>log.cleaner.threads</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> int<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 1<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [0,…​]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> cluster-wide<?asciidoc-br?></simpara>
<simpara>The number of background threads to use for log cleaning.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>log.cleanup.policy</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> list<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> delete<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [compact, delete]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> cluster-wide<?asciidoc-br?></simpara>
<simpara>The default cleanup policy for segments beyond the retention window. A comma separated list of valid policies. Valid policies are: "delete" and "compact".</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>log.index.interval.bytes</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> int<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 4096<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [0,…​]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> cluster-wide<?asciidoc-br?></simpara>
<simpara>The interval with which we add an entry to the offset index.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>log.index.size.max.bytes</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> int<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 10485760<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [4,…​]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> cluster-wide<?asciidoc-br?></simpara>
<simpara>The maximum size in bytes of the offset index.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>log.message.format.version</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> string<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 2.3-IV1<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [0.8.0, 0.8.1, 0.8.2, 0.9.0, 0.10.0-IV0, 0.10.0-IV1, 0.10.1-IV0, 0.10.1-IV1, 0.10.1-IV2, 0.10.2-IV0, 0.11.0-IV0, 0.11.0-IV1, 0.11.0-IV2, 1.0-IV0, 1.1-IV0, 2.0-IV0, 2.0-IV1, 2.1-IV0, 2.1-IV1, 2.1-IV2, 2.2-IV0, 2.2-IV1, 2.3-IV0, 2.3-IV1]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> read-only<?asciidoc-br?></simpara>
<simpara>Specify the message format version the broker will use to append messages to the logs. The value should be a valid ApiVersion. Some examples are: 0.8.2, 0.9.0.0, 0.10.0, check ApiVersion for more details. By setting a particular message format version, the user is certifying that all the existing messages on disk are smaller or equal than the specified version. Setting this value incorrectly will cause consumers with older versions to break as they will receive messages with a format that they don’t understand.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>log.message.timestamp.difference.max.ms</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> long<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 9223372036854775807<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> cluster-wide<?asciidoc-br?></simpara>
<simpara>The maximum difference allowed between the timestamp when a broker receives a message and the timestamp specified in the message. If log.message.timestamp.type=CreateTime, a message will be rejected if the difference in timestamp exceeds this threshold. This configuration is ignored if log.message.timestamp.type=LogAppendTime.The maximum timestamp difference allowed should be no greater than log.retention.ms to avoid unnecessarily frequent log rolling.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>log.message.timestamp.type</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> string<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> CreateTime<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [CreateTime, LogAppendTime]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> cluster-wide<?asciidoc-br?></simpara>
<simpara>Define whether the timestamp in the message is message create time or log append time. The value should be either <literal>CreateTime</literal> or <literal>LogAppendTime</literal>.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>log.preallocate</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> boolean<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> false<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> cluster-wide<?asciidoc-br?></simpara>
<simpara>Should pre allocate file when create new segment? If you are using Kafka on Windows, you probably need to set it to true.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>log.retention.check.interval.ms</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> long<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 300000<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [1,…​]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> read-only<?asciidoc-br?></simpara>
<simpara>The frequency in milliseconds that the log cleaner checks whether any log is eligible for deletion.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>max.connections</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> int<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 2147483647<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [0,…​]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> cluster-wide<?asciidoc-br?></simpara>
<simpara>The maximum number of connections we allow in the broker at any time. This limit is applied in addition to any per-ip limits configured using max.connections.per.ip. Listener-level limits may also be configured by prefixing the config name with the listener prefix, for example, <literal>listener.name.internal.max.connections</literal>. Broker-wide limit should be configured based on broker capacity while listener limits should be configured based on application requirements. New connections are blocked if either the listener or broker limit is reached. Connections on the inter-broker listener are permitted even if broker-wide limit is reached. The least recently used connection on another listener will be closed in this case.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>max.connections.per.ip</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> int<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 2147483647<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [0,…​]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> cluster-wide<?asciidoc-br?></simpara>
<simpara>The maximum number of connections we allow from each ip address. This can be set to 0 if there are overrides configured using max.connections.per.ip.overrides property. New connections from the ip address are dropped if the limit is reached.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>max.connections.per.ip.overrides</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> string<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> ""<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> cluster-wide<?asciidoc-br?></simpara>
<simpara>A comma-separated list of per-ip or hostname overrides to the default maximum number of connections. An example value is "hostName:100,127.0.0.1:200".</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>max.incremental.fetch.session.cache.slots</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> int<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 1000<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [0,…​]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> read-only<?asciidoc-br?></simpara>
<simpara>The maximum number of incremental fetch sessions that we will maintain.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>num.partitions</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> int<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 1<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [1,…​]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> read-only<?asciidoc-br?></simpara>
<simpara>The default number of log partitions per topic.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>password.encoder.old.secret</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> password<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> null<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> read-only<?asciidoc-br?></simpara>
<simpara>The old secret that was used for encoding dynamically configured passwords. This is required only when the secret is updated. If specified, all dynamically encoded passwords are decoded using this old secret and re-encoded using password.encoder.secret when broker starts up.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>password.encoder.secret</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> password<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> null<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> read-only<?asciidoc-br?></simpara>
<simpara>The secret used for encoding dynamically configured passwords for this broker.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>principal.builder.class</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> class<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> null<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> per-broker<?asciidoc-br?></simpara>
<simpara>The fully qualified name of a class that implements the KafkaPrincipalBuilder interface, which is used to build the KafkaPrincipal object used during authorization. This config also supports the deprecated PrincipalBuilder interface which was previously used for client authentication over SSL. If no principal builder is defined, the default behavior depends on the security protocol in use. For SSL authentication,  the principal will be derived using the rules defined by <literal>ssl.principal.mapping.rules</literal> applied on the distinguished name from the client certificate if one is provided; otherwise, if client authentication is not required, the principal name will be ANONYMOUS. For SASL authentication, the principal will be derived using the rules defined by <literal>sasl.kerberos.principal.to.local.rules</literal> if GSSAPI is in use, and the SASL authentication ID for other mechanisms. For PLAINTEXT, the principal will be ANONYMOUS.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>producer.purgatory.purge.interval.requests</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> int<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 1000<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> read-only<?asciidoc-br?></simpara>
<simpara>The purge interval (in number of requests) of the producer request purgatory.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>queued.max.request.bytes</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> long<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> -1<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> read-only<?asciidoc-br?></simpara>
<simpara>The number of queued bytes allowed before no more requests are read.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>replica.fetch.backoff.ms</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> int<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 1000<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [0,…​]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> read-only<?asciidoc-br?></simpara>
<simpara>The amount of time to sleep when fetch partition error occurs.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>replica.fetch.max.bytes</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> int<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 1048576<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [0,…​]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> read-only<?asciidoc-br?></simpara>
<simpara>The number of bytes of messages to attempt to fetch for each partition. This is not an absolute maximum, if the first record batch in the first non-empty partition of the fetch is larger than this value, the record batch will still be returned to ensure that progress can be made. The maximum record batch size accepted by the broker is defined via <literal>message.max.bytes</literal> (broker config) or <literal>max.message.bytes</literal> (topic config).</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>replica.fetch.response.max.bytes</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> int<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 10485760<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [0,…​]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> read-only<?asciidoc-br?></simpara>
<simpara>Maximum bytes expected for the entire fetch response. Records are fetched in batches, and if the first record batch in the first non-empty partition of the fetch is larger than this value, the record batch will still be returned to ensure that progress can be made. As such, this is not an absolute maximum. The maximum record batch size accepted by the broker is defined via <literal>message.max.bytes</literal> (broker config) or <literal>max.message.bytes</literal> (topic config).</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>reserved.broker.max.id</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> int<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 1000<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [0,…​]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> read-only<?asciidoc-br?></simpara>
<simpara>Max number that can be used for a broker.id.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>sasl.client.callback.handler.class</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> class<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> null<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> read-only<?asciidoc-br?></simpara>
<simpara>The fully qualified name of a SASL client callback handler class that implements the AuthenticateCallbackHandler interface.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>sasl.enabled.mechanisms</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> list<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> GSSAPI<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> per-broker<?asciidoc-br?></simpara>
<simpara>The list of SASL mechanisms enabled in the Kafka server. The list may contain any mechanism for which a security provider is available. Only GSSAPI is enabled by default.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>sasl.jaas.config</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> password<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> null<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> per-broker<?asciidoc-br?></simpara>
<simpara>JAAS login context parameters for SASL connections in the format used by JAAS configuration files. JAAS configuration file format is described <link xlink:href="http://docs.oracle.com/javase/8/docs/technotes/guides/security/jgss/tutorials/LoginConfigFile.html">here</link>. The format for the value is: ‘loginModuleClass controlFlag (optionName=optionValue)*;’. For brokers, the config must be prefixed with listener prefix and SASL mechanism name in lower-case. For example, listener.name.sasl_ssl.scram-sha-256.sasl.jaas.config=com.example.ScramLoginModule required;.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>sasl.kerberos.kinit.cmd</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> string<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> /usr/bin/kinit<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> per-broker<?asciidoc-br?></simpara>
<simpara>Kerberos kinit command path.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>sasl.kerberos.min.time.before.relogin</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> long<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 60000<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> per-broker<?asciidoc-br?></simpara>
<simpara>Login thread sleep time between refresh attempts.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>sasl.kerberos.principal.to.local.rules</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> list<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> DEFAULT<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> per-broker<?asciidoc-br?></simpara>
<simpara>A list of rules for mapping from principal names to short names (typically operating system usernames). The rules are evaluated in order and the first rule that matches a principal name is used to map it to a short name. Any later rules in the list are ignored. By default, principal names of the form {username}/{hostname}@{REALM} are mapped to {username}. For more details on the format please see <link xlink:href="https://kafka.apache.org/23/documentation.html#security_authz"> security authorization and acls</link>. Note that this configuration is ignored if an extension of KafkaPrincipalBuilder is provided by the <literal>principal.builder.class</literal> configuration.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>sasl.kerberos.service.name</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> string<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> null<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> per-broker<?asciidoc-br?></simpara>
<simpara>The Kerberos principal name that Kafka runs as. This can be defined either in Kafka’s JAAS config or in Kafka’s config.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>sasl.kerberos.ticket.renew.jitter</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> double<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 0.05<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> per-broker<?asciidoc-br?></simpara>
<simpara>Percentage of random jitter added to the renewal time.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>sasl.kerberos.ticket.renew.window.factor</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> double<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 0.8<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> per-broker<?asciidoc-br?></simpara>
<simpara>Login thread will sleep until the specified window factor of time from last refresh to ticket’s expiry has been reached, at which time it will try to renew the ticket.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>sasl.login.callback.handler.class</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> class<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> null<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> read-only<?asciidoc-br?></simpara>
<simpara>The fully qualified name of a SASL login callback handler class that implements the AuthenticateCallbackHandler interface. For brokers, login callback handler config must be prefixed with listener prefix and SASL mechanism name in lower-case. For example, listener.name.sasl_ssl.scram-sha-256.sasl.login.callback.handler.class=com.example.CustomScramLoginCallbackHandler.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>sasl.login.class</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> class<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> null<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> read-only<?asciidoc-br?></simpara>
<simpara>The fully qualified name of a class that implements the Login interface. For brokers, login config must be prefixed with listener prefix and SASL mechanism name in lower-case. For example, listener.name.sasl_ssl.scram-sha-256.sasl.login.class=com.example.CustomScramLogin.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>sasl.login.refresh.buffer.seconds</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> short<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 300<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> per-broker<?asciidoc-br?></simpara>
<simpara>The amount of buffer time before credential expiration to maintain when refreshing a credential, in seconds. If a refresh would otherwise occur closer to expiration than the number of buffer seconds then the refresh will be moved up to maintain as much of the buffer time as possible. Legal values are between 0 and 3600 (1 hour); a default value of  300 (5 minutes) is used if no value is specified. This value and sasl.login.refresh.min.period.seconds are both ignored if their sum exceeds the remaining lifetime of a credential. Currently applies only to OAUTHBEARER.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>sasl.login.refresh.min.period.seconds</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> short<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 60<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> per-broker<?asciidoc-br?></simpara>
<simpara>The desired minimum time for the login refresh thread to wait before refreshing a credential, in seconds. Legal values are between 0 and 900 (15 minutes); a default value of 60 (1 minute) is used if no value is specified.  This value and  sasl.login.refresh.buffer.seconds are both ignored if their sum exceeds the remaining lifetime of a credential. Currently applies only to OAUTHBEARER.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>sasl.login.refresh.window.factor</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> double<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 0.8<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> per-broker<?asciidoc-br?></simpara>
<simpara>Login refresh thread will sleep until the specified window factor relative to the credential’s lifetime has been reached, at which time it will try to refresh the credential. Legal values are between 0.5 (50%) and 1.0 (100%) inclusive; a default value of 0.8 (80%) is used if no value is specified. Currently applies only to OAUTHBEARER.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>sasl.login.refresh.window.jitter</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> double<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 0.05<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> per-broker<?asciidoc-br?></simpara>
<simpara>The maximum amount of random jitter relative to the credential’s lifetime that is added to the login refresh thread’s sleep time. Legal values are between 0 and 0.25 (25%) inclusive; a default value of 0.05 (5%) is used if no value is specified. Currently applies only to OAUTHBEARER.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>sasl.mechanism.inter.broker.protocol</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> string<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> GSSAPI<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> per-broker<?asciidoc-br?></simpara>
<simpara>SASL mechanism used for inter-broker communication. Default is GSSAPI.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>sasl.server.callback.handler.class</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> class<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> null<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> read-only<?asciidoc-br?></simpara>
<simpara>The fully qualified name of a SASL server callback handler class that implements the AuthenticateCallbackHandler interface. Server callback handlers must be prefixed with listener prefix and SASL mechanism name in lower-case. For example, listener.name.sasl_ssl.plain.sasl.server.callback.handler.class=com.example.CustomPlainCallbackHandler.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>security.inter.broker.protocol</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> string<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> PLAINTEXT<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> read-only<?asciidoc-br?></simpara>
<simpara>Security protocol used to communicate between brokers. Valid values are: PLAINTEXT, SSL, SASL_PLAINTEXT, SASL_SSL. It is an error to set this and inter.broker.listener.name properties at the same time.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>ssl.cipher.suites</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> list<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> ""<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> per-broker<?asciidoc-br?></simpara>
<simpara>A list of cipher suites. This is a named combination of authentication, encryption, MAC and key exchange algorithm used to negotiate the security settings for a network connection using TLS or SSL network protocol. By default all the available cipher suites are supported.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>ssl.client.auth</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> string<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> none<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [required, requested, none]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> per-broker<?asciidoc-br?></simpara>
<simpara>Configures kafka broker to request client authentication. The following settings are common:</simpara>
<itemizedlist>
<listitem>
<simpara><literal>ssl.client.auth=required</literal> If set to required client authentication is required.</simpara>
</listitem>
<listitem>
<simpara><literal>ssl.client.auth=requested</literal> This means client authentication is optional. unlike requested , if this option is set client can choose not to provide authentication information about itself</simpara>
</listitem>
<listitem>
<simpara><literal>ssl.client.auth=none</literal> This means client authentication is not needed.</simpara>
</listitem>
</itemizedlist>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>ssl.enabled.protocols</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> list<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> TLSv1.2,TLSv1.1,TLSv1<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> per-broker<?asciidoc-br?></simpara>
<simpara>The list of protocols enabled for SSL connections.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>ssl.key.password</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> password<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> null<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> per-broker<?asciidoc-br?></simpara>
<simpara>The password of the private key in the key store file. This is optional for client.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>ssl.keymanager.algorithm</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> string<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> SunX509<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> per-broker<?asciidoc-br?></simpara>
<simpara>The algorithm used by key manager factory for SSL connections. Default value is the key manager factory algorithm configured for the Java Virtual Machine.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>ssl.keystore.location</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> string<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> null<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> per-broker<?asciidoc-br?></simpara>
<simpara>The location of the key store file. This is optional for client and can be used for two-way authentication for client.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>ssl.keystore.password</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> password<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> null<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> per-broker<?asciidoc-br?></simpara>
<simpara>The store password for the key store file. This is optional for client and only needed if ssl.keystore.location is configured.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>ssl.keystore.type</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> string<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> JKS<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> per-broker<?asciidoc-br?></simpara>
<simpara>The file format of the key store file. This is optional for client.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>ssl.protocol</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> string<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> TLS<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> per-broker<?asciidoc-br?></simpara>
<simpara>The SSL protocol used to generate the SSLContext. Default setting is TLS, which is fine for most cases. Allowed values in recent JVMs are TLS, TLSv1.1 and TLSv1.2. SSL, SSLv2 and SSLv3 may be supported in older JVMs, but their usage is discouraged due to known security vulnerabilities.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>ssl.provider</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> string<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> null<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> per-broker<?asciidoc-br?></simpara>
<simpara>The name of the security provider used for SSL connections. Default value is the default security provider of the JVM.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>ssl.trustmanager.algorithm</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> string<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> PKIX<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> per-broker<?asciidoc-br?></simpara>
<simpara>The algorithm used by trust manager factory for SSL connections. Default value is the trust manager factory algorithm configured for the Java Virtual Machine.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>ssl.truststore.location</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> string<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> null<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> per-broker<?asciidoc-br?></simpara>
<simpara>The location of the trust store file.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>ssl.truststore.password</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> password<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> null<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> per-broker<?asciidoc-br?></simpara>
<simpara>The password for the trust store file. If a password is not set access to the truststore is still available, but integrity checking is disabled.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>ssl.truststore.type</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> string<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> JKS<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> per-broker<?asciidoc-br?></simpara>
<simpara>The file format of the trust store file.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>alter.config.policy.class.name</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> class<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> null<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> read-only<?asciidoc-br?></simpara>
<simpara>The alter configs policy class that should be used for validation. The class should implement the <literal>org.apache.kafka.server.policy.AlterConfigPolicy</literal> interface.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>alter.log.dirs.replication.quota.window.num</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> int<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 11<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [1,…​]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> read-only<?asciidoc-br?></simpara>
<simpara>The number of samples to retain in memory for alter log dirs replication quotas.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>alter.log.dirs.replication.quota.window.size.seconds</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> int<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 1<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [1,…​]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> read-only<?asciidoc-br?></simpara>
<simpara>The time span of each sample for alter log dirs replication quotas.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>authorizer.class.name</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> string<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> ""<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> read-only<?asciidoc-br?></simpara>
<simpara>The authorizer class that should be used for authorization.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>client.quota.callback.class</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> class<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> null<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> read-only<?asciidoc-br?></simpara>
<simpara>The fully qualified name of a class that implements the ClientQuotaCallback interface, which is used to determine quota limits applied to client requests. By default, &lt;user, client-id&gt;, &lt;user&gt; or &lt;client-id&gt; quotas stored in ZooKeeper are applied. For any given request, the most specific quota that matches the user principal of the session and the client-id of the request is applied.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>connection.failed.authentication.delay.ms</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> int<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 100<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [0,…​]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> read-only<?asciidoc-br?></simpara>
<simpara>Connection close delay on failed authentication: this is the time (in milliseconds) by which connection close will be delayed on authentication failure. This must be configured to be less than connections.max.idle.ms to prevent connection timeout.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>create.topic.policy.class.name</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> class<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> null<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> read-only<?asciidoc-br?></simpara>
<simpara>The create topic policy class that should be used for validation. The class should implement the <literal>org.apache.kafka.server.policy.CreateTopicPolicy</literal> interface.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>delegation.token.expiry.check.interval.ms</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> long<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 3600000<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [1,…​]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> read-only<?asciidoc-br?></simpara>
<simpara>Scan interval to remove expired delegation tokens.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>kafka.metrics.polling.interval.secs</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> int<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 10<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [1,…​]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> read-only<?asciidoc-br?></simpara>
<simpara>The metrics polling interval (in seconds) which can be used in kafka.metrics.reporters implementations.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>kafka.metrics.reporters</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> list<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> ""<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> read-only<?asciidoc-br?></simpara>
<simpara>A list of classes to use as Yammer metrics custom reporters. The reporters should implement <literal>kafka.metrics.KafkaMetricsReporter</literal> trait. If a client wants to expose JMX operations on a custom reporter, the custom reporter needs to additionally implement an MBean trait that extends <literal>kafka.metrics.KafkaMetricsReporterMBean</literal> trait so that the registered MBean is compliant with the standard MBean convention.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>listener.security.protocol.map</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> string<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> PLAINTEXT:PLAINTEXT,SSL:SSL,SASL_PLAINTEXT:SASL_PLAINTEXT,SASL_SSL:SASL_SSL<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> per-broker<?asciidoc-br?></simpara>
<simpara>Map between listener names and security protocols. This must be defined for the same security protocol to be usable in more than one port or IP. For example, internal and external traffic can be separated even if SSL is required for both. Concretely, the user could define listeners with names INTERNAL and EXTERNAL and this property as: <literal>INTERNAL:SSL,EXTERNAL:SSL</literal>. As shown, key and value are separated by a colon and map entries are separated by commas. Each listener name should only appear once in the map. Different security (SSL and SASL) settings can be configured for each listener by adding a normalised prefix (the listener name is lowercased) to the config name. For example, to set a different keystore for the INTERNAL listener, a config with name <literal>listener.name.internal.ssl.keystore.location</literal> would be set. If the config for the listener name is not set, the config will fallback to the generic config (i.e. <literal>ssl.keystore.location</literal>).</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>log.message.downconversion.enable</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> boolean<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> true<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> cluster-wide<?asciidoc-br?></simpara>
<simpara>This configuration controls whether down-conversion of message formats is enabled to satisfy consume requests. When set to <literal>false</literal>, broker will not perform down-conversion for consumers expecting an older message format. The broker responds with <literal>UNSUPPORTED_VERSION</literal> error for consume requests from such older clients. This configurationdoes not apply to any message format conversion that might be required for replication to followers.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>metric.reporters</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> list<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> ""<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> cluster-wide<?asciidoc-br?></simpara>
<simpara>A list of classes to use as metrics reporters. Implementing the <literal>org.apache.kafka.common.metrics.MetricsReporter</literal> interface allows plugging in classes that will be notified of new metric creation. The JmxReporter is always included to register JMX statistics.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>metrics.num.samples</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> int<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 2<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [1,…​]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> read-only<?asciidoc-br?></simpara>
<simpara>The number of samples maintained to compute metrics.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>metrics.recording.level</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> string<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> INFO<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> read-only<?asciidoc-br?></simpara>
<simpara>The highest recording level for metrics.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>metrics.sample.window.ms</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> long<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 30000<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [1,…​]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> read-only<?asciidoc-br?></simpara>
<simpara>The window of time a metrics sample is computed over.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>password.encoder.cipher.algorithm</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> string<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> AES/CBC/PKCS5Padding<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> read-only<?asciidoc-br?></simpara>
<simpara>The Cipher algorithm used for encoding dynamically configured passwords.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>password.encoder.iterations</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> int<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 4096<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [1024,…​]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> read-only<?asciidoc-br?></simpara>
<simpara>The iteration count used for encoding dynamically configured passwords.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>password.encoder.key.length</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> int<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 128<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [8,…​]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> read-only<?asciidoc-br?></simpara>
<simpara>The key length used for encoding dynamically configured passwords.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>password.encoder.keyfactory.algorithm</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> string<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> null<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> read-only<?asciidoc-br?></simpara>
<simpara>The SecretKeyFactory algorithm used for encoding dynamically configured passwords. Default is PBKDF2WithHmacSHA512 if available and PBKDF2WithHmacSHA1 otherwise.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>quota.window.num</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> int<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 11<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [1,…​]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> read-only<?asciidoc-br?></simpara>
<simpara>The number of samples to retain in memory for client quotas.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>quota.window.size.seconds</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> int<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 1<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [1,…​]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> read-only<?asciidoc-br?></simpara>
<simpara>The time span of each sample for client quotas.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>replication.quota.window.num</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> int<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 11<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [1,…​]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> read-only<?asciidoc-br?></simpara>
<simpara>The number of samples to retain in memory for replication quotas.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>replication.quota.window.size.seconds</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> int<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 1<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [1,…​]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> read-only<?asciidoc-br?></simpara>
<simpara>The time span of each sample for replication quotas.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>ssl.endpoint.identification.algorithm</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> string<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> https<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> per-broker<?asciidoc-br?></simpara>
<simpara>The endpoint identification algorithm to validate server hostname using server certificate.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>ssl.principal.mapping.rules</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> list<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> DEFAULT<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> read-only<?asciidoc-br?></simpara>
<simpara>A list of rules for mapping from distinguished name from the client certificate to short name. The rules are evaluated in order and the first rule that matches a principal name is used to map it to a short name. Any later rules in the list are ignored. By default, distinguished name of the X.500 certificate will be the principal. For more details on the format please see <link xlink:href="https://kafka.apache.org/23/documentation.html#security_authz"> security authorization and acls</link>. Note that this configuration is ignored if an extension of KafkaPrincipalBuilder is provided by the <literal>principal.builder.class</literal> configuration.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>ssl.secure.random.implementation</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> string<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> null<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> per-broker<?asciidoc-br?></simpara>
<simpara>The SecureRandom PRNG implementation to use for SSL cryptography operations.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>transaction.abort.timed.out.transaction.cleanup.interval.ms</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> int<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 60000<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [1,…​]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> read-only<?asciidoc-br?></simpara>
<simpara>The interval at which to rollback transactions that have timed out.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>transaction.remove.expired.transaction.cleanup.interval.ms</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> int<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 3600000<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [1,…​]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> read-only<?asciidoc-br?></simpara>
<simpara>The interval at which to remove transactions that have expired due to <literal>transactional.id.expiration.ms</literal> passing.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>zookeeper.sync.time.ms</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> int<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 2000<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?>
<emphasis role="strong">Dynamic update:</emphasis> read-only<?asciidoc-br?></simpara>
<simpara>How far a ZK follower can be behind a ZK leader.</simpara>
</listitem>
</varlistentry>
</variablelist>
</appendix>
<appendix xml:id="topic-configuration-parameters-str">
<title>Topic configuration parameters</title>
<variablelist>
<varlistentry>
<term><literal>cleanup.policy</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> list<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> delete<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [compact, delete]<?asciidoc-br?>
<emphasis role="strong">Server Default Property:</emphasis> log.cleanup.policy<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?></simpara>
<simpara>A string that is either "delete" or "compact" or both. This string designates the retention policy to use on old log segments. The default policy ("delete") will discard old segments when their retention time or size limit has been reached. The "compact" setting will enable <link xlink:href="https://kafka.apache.org/23/documentation.html#compaction">log compaction</link> on the topic.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>compression.type</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> string<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> producer<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [uncompressed, zstd, lz4, snappy, gzip, producer]<?asciidoc-br?>
<emphasis role="strong">Server Default Property:</emphasis> compression.type<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?></simpara>
<simpara>Specify the final compression type for a given topic. This configuration accepts the standard compression codecs ('gzip', 'snappy', 'lz4', 'zstd'). It additionally accepts 'uncompressed' which is equivalent to no compression; and 'producer' which means retain the original compression codec set by the producer.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>delete.retention.ms</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> long<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 86400000<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [0,…​]<?asciidoc-br?>
<emphasis role="strong">Server Default Property:</emphasis> log.cleaner.delete.retention.ms<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?></simpara>
<simpara>The amount of time to retain delete tombstone markers for <link xlink:href="https://kafka.apache.org/23/documentation.html#compaction">log compacted</link> topics. This setting also gives a bound on the time in which a consumer must complete a read if they begin from offset 0 to ensure that they get a valid snapshot of the final stage (otherwise delete tombstones may be collected before they complete their scan).</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>file.delete.delay.ms</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> long<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 60000<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [0,…​]<?asciidoc-br?>
<emphasis role="strong">Server Default Property:</emphasis> log.segment.delete.delay.ms<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?></simpara>
<simpara>The time to wait before deleting a file from the filesystem.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>flush.messages</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> long<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 9223372036854775807<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [0,…​]<?asciidoc-br?>
<emphasis role="strong">Server Default Property:</emphasis> log.flush.interval.messages<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?></simpara>
<simpara>This setting allows specifying an interval at which we will force an fsync of data written to the log. For example if this was set to 1 we would fsync after every message; if it were 5 we would fsync after every five messages. In general we recommend you not set this and use replication for durability and allow the operating system’s background flush capabilities as it is more efficient. This setting can be overridden on a per-topic basis (see <link xlink:href="https://kafka.apache.org/23/documentation.html#topicconfigs">the per-topic configuration section</link>).</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>flush.ms</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> long<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 9223372036854775807<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [0,…​]<?asciidoc-br?>
<emphasis role="strong">Server Default Property:</emphasis> log.flush.interval.ms<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?></simpara>
<simpara>This setting allows specifying a time interval at which we will force an fsync of data written to the log. For example if this was set to 1000 we would fsync after 1000 ms had passed. In general we recommend you not set this and use replication for durability and allow the operating system’s background flush capabilities as it is more efficient.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>follower.replication.throttled.replicas</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> list<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> ""<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [partitionId]:[brokerId],[partitionId]:[brokerId],…​<?asciidoc-br?>
<emphasis role="strong">Server Default Property:</emphasis> follower.replication.throttled.replicas<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?></simpara>
<simpara>A list of replicas for which log replication should be throttled on the follower side. The list should describe a set of replicas in the form [PartitionId]:[BrokerId],[PartitionId]:[BrokerId]:…​ or alternatively the wildcard '*' can be used to throttle all replicas for this topic.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>index.interval.bytes</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> int<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 4096<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [0,…​]<?asciidoc-br?>
<emphasis role="strong">Server Default Property:</emphasis> log.index.interval.bytes<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?></simpara>
<simpara>This setting controls how frequently Kafka adds an index entry to its offset index. The default setting ensures that we index a message roughly every 4096 bytes. More indexing allows reads to jump closer to the exact position in the log but makes the index larger. You probably don’t need to change this.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>leader.replication.throttled.replicas</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> list<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> ""<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [partitionId]:[brokerId],[partitionId]:[brokerId],…​<?asciidoc-br?>
<emphasis role="strong">Server Default Property:</emphasis> leader.replication.throttled.replicas<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?></simpara>
<simpara>A list of replicas for which log replication should be throttled on the leader side. The list should describe a set of replicas in the form [PartitionId]:[BrokerId],[PartitionId]:[BrokerId]:…​ or alternatively the wildcard '*' can be used to throttle all replicas for this topic.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>max.compaction.lag.ms</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> long<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 9223372036854775807<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [1,…​]<?asciidoc-br?>
<emphasis role="strong">Server Default Property:</emphasis> log.cleaner.max.compaction.lag.ms<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?></simpara>
<simpara>The maximum time a message will remain ineligible for compaction in the log. Only applicable for logs that are being compacted.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>max.message.bytes</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> int<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 1000012<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [0,…​]<?asciidoc-br?>
<emphasis role="strong">Server Default Property:</emphasis> message.max.bytes<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?></simpara>
<simpara>The largest record batch size allowed by Kafka. If this is increased and there are consumers older than 0.10.2, the consumers' fetch size must also be increased so that the they can fetch record batches this large.</simpara>
<simpara>In the latest message format version, records are always grouped into batches for efficiency. In previous message format versions, uncompressed records are not grouped into batches and this limit only applies to a single record in that case.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>message.format.version</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> string<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 2.3-IV1<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [0.8.0, 0.8.1, 0.8.2, 0.9.0, 0.10.0-IV0, 0.10.0-IV1, 0.10.1-IV0, 0.10.1-IV1, 0.10.1-IV2, 0.10.2-IV0, 0.11.0-IV0, 0.11.0-IV1, 0.11.0-IV2, 1.0-IV0, 1.1-IV0, 2.0-IV0, 2.0-IV1, 2.1-IV0, 2.1-IV1, 2.1-IV2, 2.2-IV0, 2.2-IV1, 2.3-IV0, 2.3-IV1]<?asciidoc-br?>
<emphasis role="strong">Server Default Property:</emphasis> log.message.format.version<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?></simpara>
<simpara>Specify the message format version the broker will use to append messages to the logs. The value should be a valid ApiVersion. Some examples are: 0.8.2, 0.9.0.0, 0.10.0, check ApiVersion for more details. By setting a particular message format version, the user is certifying that all the existing messages on disk are smaller or equal than the specified version. Setting this value incorrectly will cause consumers with older versions to break as they will receive messages with a format that they don’t understand.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>message.timestamp.difference.max.ms</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> long<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 9223372036854775807<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [0,…​]<?asciidoc-br?>
<emphasis role="strong">Server Default Property:</emphasis> log.message.timestamp.difference.max.ms<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?></simpara>
<simpara>The maximum difference allowed between the timestamp when a broker receives a message and the timestamp specified in the message. If message.timestamp.type=CreateTime, a message will be rejected if the difference in timestamp exceeds this threshold. This configuration is ignored if message.timestamp.type=LogAppendTime.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>message.timestamp.type</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> string<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> CreateTime<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [CreateTime, LogAppendTime]<?asciidoc-br?>
<emphasis role="strong">Server Default Property:</emphasis> log.message.timestamp.type<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?></simpara>
<simpara>Define whether the timestamp in the message is message create time or log append time. The value should be either <literal>CreateTime</literal> or <literal>LogAppendTime</literal>.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>min.cleanable.dirty.ratio</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> double<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 0.5<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [0,…​,1]<?asciidoc-br?>
<emphasis role="strong">Server Default Property:</emphasis> log.cleaner.min.cleanable.ratio<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?></simpara>
<simpara>This configuration controls how frequently the log compactor will attempt to clean the log (assuming <link xlink:href="https://kafka.apache.org/23/documentation.html#compaction">log compaction</link> is enabled). By default we will avoid cleaning a log where more than 50% of the log has been compacted. This ratio bounds the maximum space wasted in the log by duplicates (at 50% at most 50% of the log could be duplicates). A higher ratio will mean fewer, more efficient cleanings but will mean more wasted space in the log. If the max.compaction.lag.ms or the min.compaction.lag.ms configurations are also specified, then the log compactor considers the log eligible for compaction as soon as either: (i) the dirty ratio threshold has been met and the log has had dirty (uncompacted) records for at least the min.compaction.lag.ms duration, or (ii) if the log has had dirty (uncompacted) records for at most the max.compaction.lag.ms period.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>min.compaction.lag.ms</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> long<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 0<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [0,…​]<?asciidoc-br?>
<emphasis role="strong">Server Default Property:</emphasis> log.cleaner.min.compaction.lag.ms<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?></simpara>
<simpara>The minimum time a message will remain uncompacted in the log. Only applicable for logs that are being compacted.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>min.insync.replicas</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> int<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 1<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [1,…​]<?asciidoc-br?>
<emphasis role="strong">Server Default Property:</emphasis> min.insync.replicas<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?></simpara>
<simpara>When a producer sets acks to "all" (or "-1"), this configuration specifies the minimum number of replicas that must acknowledge a write for the write to be considered successful. If this minimum cannot be met, then the producer will raise an exception (either NotEnoughReplicas or NotEnoughReplicasAfterAppend).
When used together, <literal>min.insync.replicas</literal> and <literal>acks</literal> allow you to enforce greater durability guarantees. A typical scenario would be to create a topic with a replication factor of 3, set <literal>min.insync.replicas</literal> to 2, and produce with <literal>acks</literal> of "all". This will ensure that the producer raises an exception if a majority of replicas do not receive a write.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>preallocate</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> boolean<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> false<?asciidoc-br?>
<emphasis role="strong">Server Default Property:</emphasis> log.preallocate<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?></simpara>
<simpara>True if we should preallocate the file on disk when creating a new log segment.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>retention.bytes</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> long<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> -1<?asciidoc-br?>
<emphasis role="strong">Server Default Property:</emphasis> log.retention.bytes<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?></simpara>
<simpara>This configuration controls the maximum size a partition (which consists of log segments) can grow to before we will discard old log segments to free up space if we are using the "delete" retention policy. By default there is no size limit only a time limit. Since this limit is enforced at the partition level, multiply it by the number of partitions to compute the topic retention in bytes.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>retention.ms</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> long<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 604800000<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [-1,…​]<?asciidoc-br?>
<emphasis role="strong">Server Default Property:</emphasis> log.retention.ms<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?></simpara>
<simpara>This configuration controls the maximum time we will retain a log before we will discard old log segments to free up space if we are using the "delete" retention policy. This represents an SLA on how soon consumers must read their data. If set to -1, no time limit is applied.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>segment.bytes</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> int<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 1073741824<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [14,…​]<?asciidoc-br?>
<emphasis role="strong">Server Default Property:</emphasis> log.segment.bytes<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?></simpara>
<simpara>This configuration controls the segment file size for the log. Retention and cleaning is always done a file at a time so a larger segment size means fewer files but less granular control over retention.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>segment.index.bytes</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> int<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 10485760<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [0,…​]<?asciidoc-br?>
<emphasis role="strong">Server Default Property:</emphasis> log.index.size.max.bytes<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?></simpara>
<simpara>This configuration controls the size of the index that maps offsets to file positions. We preallocate this index file and shrink it only after log rolls. You generally should not need to change this setting.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>segment.jitter.ms</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> long<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 0<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [0,…​]<?asciidoc-br?>
<emphasis role="strong">Server Default Property:</emphasis> log.roll.jitter.ms<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?></simpara>
<simpara>The maximum random jitter subtracted from the scheduled segment roll time to avoid thundering herds of segment rolling.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>segment.ms</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> long<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 604800000<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [1,…​]<?asciidoc-br?>
<emphasis role="strong">Server Default Property:</emphasis> log.roll.ms<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?></simpara>
<simpara>This configuration controls the period of time after which Kafka will force the log to roll even if the segment file isn’t full to ensure that retention can delete or compact old data.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>unclean.leader.election.enable</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> boolean<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> false<?asciidoc-br?>
<emphasis role="strong">Server Default Property:</emphasis> unclean.leader.election.enable<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?></simpara>
<simpara>Indicates whether to enable replicas not in the ISR set to be elected as leader as a last resort, even though doing so may result in data loss.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>message.downconversion.enable</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> boolean<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> true<?asciidoc-br?>
<emphasis role="strong">Server Default Property:</emphasis> log.message.downconversion.enable<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?></simpara>
<simpara>This configuration controls whether down-conversion of message formats is enabled to satisfy consume requests. When set to <literal>false</literal>, broker will not perform down-conversion for consumers expecting an older message format. The broker responds with <literal>UNSUPPORTED_VERSION</literal> error for consume requests from such older clients. This configurationdoes not apply to any message format conversion that might be required for replication to followers.</simpara>
</listitem>
</varlistentry>
</variablelist>
</appendix>
<appendix xml:id="consumer-configuration-parameters-str">
<title>Consumer configuration parameters</title>
<variablelist>
<varlistentry>
<term><literal>key.deserializer</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> class<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> high<?asciidoc-br?></simpara>
<simpara>Deserializer class for key that implements the <literal>org.apache.kafka.common.serialization.Deserializer</literal> interface.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>value.deserializer</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> class<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> high<?asciidoc-br?></simpara>
<simpara>Deserializer class for value that implements the <literal>org.apache.kafka.common.serialization.Deserializer</literal> interface.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>bootstrap.servers</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> list<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> ""<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> non-null string<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> high<?asciidoc-br?></simpara>
<simpara>A list of host/port pairs to use for establishing the initial connection to the Kafka cluster. The client will make use of all servers irrespective of which servers are specified here for bootstrapping—this list only impacts the initial hosts used to discover the full set of servers. This list should be in the form <literal>host1:port1,host2:port2,…​</literal>. Since these servers are just used for the initial connection to discover the full cluster membership (which may change dynamically), this list need not contain the full set of servers (you may want more than one, though, in case a server is down).</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>fetch.min.bytes</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> int<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 1<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [0,…​]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> high<?asciidoc-br?></simpara>
<simpara>The minimum amount of data the server should return for a fetch request. If insufficient data is available the request will wait for that much data to accumulate before answering the request. The default setting of 1 byte means that fetch requests are answered as soon as a single byte of data is available or the fetch request times out waiting for data to arrive. Setting this to something greater than 1 will cause the server to wait for larger amounts of data to accumulate which can improve server throughput a bit at the cost of some additional latency.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>group.id</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> string<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> null<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> high<?asciidoc-br?></simpara>
<simpara>A unique string that identifies the consumer group this consumer belongs to. This property is required if the consumer uses either the group management functionality by using <literal>subscribe(topic)</literal> or the Kafka-based offset management strategy.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>heartbeat.interval.ms</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> int<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 3000<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> high<?asciidoc-br?></simpara>
<simpara>The expected time between heartbeats to the consumer coordinator when using Kafka’s group management facilities. Heartbeats are used to ensure that the consumer’s session stays active and to facilitate rebalancing when new consumers join or leave the group. The value must be set lower than <literal>session.timeout.ms</literal>, but typically should be set no higher than 1/3 of that value. It can be adjusted even lower to control the expected time for normal rebalances.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>max.partition.fetch.bytes</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> int<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 1048576<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [0,…​]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> high<?asciidoc-br?></simpara>
<simpara>The maximum amount of data per-partition the server will return. Records are fetched in batches by the consumer. If the first record batch in the first non-empty partition of the fetch is larger than this limit, the batch will still be returned to ensure that the consumer can make progress. The maximum record batch size accepted by the broker is defined via <literal>message.max.bytes</literal> (broker config) or <literal>max.message.bytes</literal> (topic config). See fetch.max.bytes for limiting the consumer request size.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>session.timeout.ms</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> int<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 10000<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> high<?asciidoc-br?></simpara>
<simpara>The timeout used to detect consumer failures when using Kafka’s group management facility. The consumer sends periodic heartbeats to indicate its liveness to the broker. If no heartbeats are received by the broker before the expiration of this session timeout, then the broker will remove this consumer from the group and initiate a rebalance. Note that the value must be in the allowable range as configured in the broker configuration by <literal>group.min.session.timeout.ms</literal> and <literal>group.max.session.timeout.ms</literal>.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>ssl.key.password</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> password<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> null<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> high<?asciidoc-br?></simpara>
<simpara>The password of the private key in the key store file. This is optional for client.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>ssl.keystore.location</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> string<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> null<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> high<?asciidoc-br?></simpara>
<simpara>The location of the key store file. This is optional for client and can be used for two-way authentication for client.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>ssl.keystore.password</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> password<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> null<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> high<?asciidoc-br?></simpara>
<simpara>The store password for the key store file. This is optional for client and only needed if ssl.keystore.location is configured.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>ssl.truststore.location</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> string<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> null<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> high<?asciidoc-br?></simpara>
<simpara>The location of the trust store file.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>ssl.truststore.password</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> password<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> null<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> high<?asciidoc-br?></simpara>
<simpara>The password for the trust store file. If a password is not set access to the truststore is still available, but integrity checking is disabled.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>allow.auto.create.topics</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> boolean<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> true<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?></simpara>
<simpara>Allow automatic topic creation on the broker when subscribing to or assigning a topic. A topic being subscribed to will be automatically created only if the broker allows for it using <literal>auto.create.topics.enable</literal> broker configuration. This configuration must be set to <literal>false</literal> when using brokers older than 0.11.0.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>auto.offset.reset</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> string<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> latest<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [latest, earliest, none]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?></simpara>
<simpara>What to do when there is no initial offset in Kafka or if the current offset does not exist any more on the server (e.g. because that data has been deleted):</simpara>
<itemizedlist>
<listitem>
<simpara>earliest: automatically reset the offset to the earliest offset</simpara>
</listitem>
<listitem>
<simpara>latest: automatically reset the offset to the latest offset</simpara>
</listitem>
<listitem>
<simpara>none: throw exception to the consumer if no previous offset is found for the consumer’s group</simpara>
</listitem>
<listitem>
<simpara>anything else: throw exception to the consumer.</simpara>
</listitem>
</itemizedlist>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>client.dns.lookup</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> string<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> default<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [default, use_all_dns_ips, resolve_canonical_bootstrap_servers_only]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?></simpara>
<simpara>Controls how the client uses DNS lookups.</simpara>
<simpara>If set to <literal>use_all_dns_ips</literal> then, when the lookup returns multiple IP addresses for a hostname, they will all be attempted to connect to before failing the connection. Applies to both bootstrap and advertised servers.</simpara>
<simpara>If the value is <literal>resolve_canonical_bootstrap_servers_only</literal> each entry will be resolved and expanded into a list of canonical names.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>connections.max.idle.ms</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> long<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 540000<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?></simpara>
<simpara>Close idle connections after the number of milliseconds specified by this config.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>default.api.timeout.ms</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> int<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 60000<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [0,…​]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?></simpara>
<simpara>Specifies the timeout (in milliseconds) for consumer APIs that could block. This configuration is used as the default timeout for all consumer operations that do not explicitly accept a <literal>timeout</literal> parameter.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>enable.auto.commit</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> boolean<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> true<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?></simpara>
<simpara>If true the consumer’s offset will be periodically committed in the background.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>exclude.internal.topics</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> boolean<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> true<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?></simpara>
<simpara>Whether internal topics matching a subscribed pattern should be excluded from the subscription. It is always possible to explicitly subscribe to an internal topic.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>fetch.max.bytes</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> int<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 52428800<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [0,…​]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?></simpara>
<simpara>The maximum amount of data the server should return for a fetch request. Records are fetched in batches by the consumer, and if the first record batch in the first non-empty partition of the fetch is larger than this value, the record batch will still be returned to ensure that the consumer can make progress. As such, this is not a absolute maximum. The maximum record batch size accepted by the broker is defined via <literal>message.max.bytes</literal> (broker config) or <literal>max.message.bytes</literal> (topic config). Note that the consumer performs multiple fetches in parallel.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>group.instance.id</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> string<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> null<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?></simpara>
<simpara>A unique identifier of the consumer instance provided by end user. Only non-empty strings are permitted. If set, the consumer is treated as a static member, which means that only one instance with this ID is allowed in the consumer group at any time. This can be used in combination with a larger session timeout to avoid group rebalances caused by transient unavailability (e.g. process restarts). If not set, the consumer will join the group as a dynamic member, which is the traditional behavior.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>isolation.level</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> string<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> read_uncommitted<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [read_committed, read_uncommitted]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?></simpara>
<simpara>Controls how to read messages written transactionally. If set to <literal>read_committed</literal>, consumer.poll() will only return transactional messages which have been committed. If set to `read_uncommitted’ (the default), consumer.poll() will return all messages, even transactional messages which have been aborted. Non-transactional messages will be returned unconditionally in either mode.</simpara>
<simpara>Messages will always be returned in offset order. Hence, in  <literal>read_committed</literal> mode, consumer.poll() will only return messages up to the last stable offset (LSO), which is the one less than the offset of the first open transaction. In particular any messages appearing after messages belonging to ongoing transactions will be withheld until the relevant transaction has been completed. As a result, <literal>read_committed</literal> consumers will not be able to read up to the high watermark when there are in flight transactions.</simpara>
<literallayout class="monospaced">Further, when in `read_committed` the seekToEnd method will return the LSO.</literallayout>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>max.poll.interval.ms</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> int<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 300000<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [1,…​]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?></simpara>
<simpara>The maximum delay between invocations of poll() when using consumer group management. This places an upper bound on the amount of time that the consumer can be idle before fetching more records. If poll() is not called before expiration of this timeout, then the consumer is considered failed and the group will rebalance in order to reassign the partitions to another member.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>max.poll.records</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> int<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 500<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [1,…​]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?></simpara>
<simpara>The maximum number of records returned in a single call to poll().</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>partition.assignment.strategy</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> list<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> class org.apache.kafka.clients.consumer.RangeAssignor<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> non-null string<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?></simpara>
<simpara>The class name of the partition assignment strategy that the client will use to distribute partition ownership amongst consumer instances when group management is used.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>receive.buffer.bytes</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> int<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 65536<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [-1,…​]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?></simpara>
<simpara>The size of the TCP receive buffer (SO_RCVBUF) to use when reading data. If the value is -1, the OS default will be used.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>request.timeout.ms</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> int<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 30000<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [0,…​]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?></simpara>
<simpara>The configuration controls the maximum amount of time the client will wait for the response of a request. If the response is not received before the timeout elapses the client will resend the request if necessary or fail the request if retries are exhausted.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>sasl.client.callback.handler.class</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> class<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> null<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?></simpara>
<simpara>The fully qualified name of a SASL client callback handler class that implements the AuthenticateCallbackHandler interface.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>sasl.jaas.config</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> password<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> null<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?></simpara>
<simpara>JAAS login context parameters for SASL connections in the format used by JAAS configuration files. JAAS configuration file format is described <link xlink:href="http://docs.oracle.com/javase/8/docs/technotes/guides/security/jgss/tutorials/LoginConfigFile.html">here</link>. The format for the value is: ‘loginModuleClass controlFlag (optionName=optionValue)*;’. For brokers, the config must be prefixed with listener prefix and SASL mechanism name in lower-case. For example, listener.name.sasl_ssl.scram-sha-256.sasl.jaas.config=com.example.ScramLoginModule required;.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>sasl.kerberos.service.name</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> string<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> null<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?></simpara>
<simpara>The Kerberos principal name that Kafka runs as. This can be defined either in Kafka’s JAAS config or in Kafka’s config.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>sasl.login.callback.handler.class</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> class<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> null<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?></simpara>
<simpara>The fully qualified name of a SASL login callback handler class that implements the AuthenticateCallbackHandler interface. For brokers, login callback handler config must be prefixed with listener prefix and SASL mechanism name in lower-case. For example, listener.name.sasl_ssl.scram-sha-256.sasl.login.callback.handler.class=com.example.CustomScramLoginCallbackHandler.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>sasl.login.class</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> class<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> null<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?></simpara>
<simpara>The fully qualified name of a class that implements the Login interface. For brokers, login config must be prefixed with listener prefix and SASL mechanism name in lower-case. For example, listener.name.sasl_ssl.scram-sha-256.sasl.login.class=com.example.CustomScramLogin.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>sasl.mechanism</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> string<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> GSSAPI<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?></simpara>
<simpara>SASL mechanism used for client connections. This may be any mechanism for which a security provider is available. GSSAPI is the default mechanism.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>security.protocol</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> string<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> PLAINTEXT<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?></simpara>
<simpara>Protocol used to communicate with brokers. Valid values are: PLAINTEXT, SSL, SASL_PLAINTEXT, SASL_SSL.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>send.buffer.bytes</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> int<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 131072<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [-1,…​]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?></simpara>
<simpara>The size of the TCP send buffer (SO_SNDBUF) to use when sending data. If the value is -1, the OS default will be used.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>ssl.enabled.protocols</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> list<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> TLSv1.2,TLSv1.1,TLSv1<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?></simpara>
<simpara>The list of protocols enabled for SSL connections.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>ssl.keystore.type</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> string<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> JKS<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?></simpara>
<simpara>The file format of the key store file. This is optional for client.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>ssl.protocol</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> string<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> TLS<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?></simpara>
<simpara>The SSL protocol used to generate the SSLContext. Default setting is TLS, which is fine for most cases. Allowed values in recent JVMs are TLS, TLSv1.1 and TLSv1.2. SSL, SSLv2 and SSLv3 may be supported in older JVMs, but their usage is discouraged due to known security vulnerabilities.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>ssl.provider</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> string<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> null<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?></simpara>
<simpara>The name of the security provider used for SSL connections. Default value is the default security provider of the JVM.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>ssl.truststore.type</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> string<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> JKS<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?></simpara>
<simpara>The file format of the trust store file.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>auto.commit.interval.ms</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> int<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 5000<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [0,…​]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?></simpara>
<simpara>The frequency in milliseconds that the consumer offsets are auto-committed to Kafka if <literal>enable.auto.commit</literal> is set to <literal>true</literal>.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>check.crcs</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> boolean<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> true<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?></simpara>
<simpara>Automatically check the CRC32 of the records consumed. This ensures no on-the-wire or on-disk corruption to the messages occurred. This check adds some overhead, so it may be disabled in cases seeking extreme performance.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>client.id</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> string<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> ""<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?></simpara>
<simpara>An id string to pass to the server when making requests. The purpose of this is to be able to track the source of requests beyond just ip/port by allowing a logical application name to be included in server-side request logging.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>client.rack</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> string<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> ""<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?></simpara>
<simpara>A rack identifier for this client. This can be any string value which indicates where this client is physically located. It corresponds with the broker config 'broker.rack'.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>fetch.max.wait.ms</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> int<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 500<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [0,…​]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?></simpara>
<simpara>The maximum amount of time the server will block before answering the fetch request if there isn’t sufficient data to immediately satisfy the requirement given by fetch.min.bytes.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>interceptor.classes</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> list<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> ""<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> non-null string<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?></simpara>
<simpara>A list of classes to use as interceptors. Implementing the <literal>org.apache.kafka.clients.consumer.ConsumerInterceptor</literal> interface allows you to intercept (and possibly mutate) records received by the consumer. By default, there are no interceptors.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>metadata.max.age.ms</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> long<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 300000<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [0,…​]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?></simpara>
<simpara>The period of time in milliseconds after which we force a refresh of metadata even if we haven’t seen any partition leadership changes to proactively discover any new brokers or partitions.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>metric.reporters</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> list<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> ""<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> non-null string<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?></simpara>
<simpara>A list of classes to use as metrics reporters. Implementing the <literal>org.apache.kafka.common.metrics.MetricsReporter</literal> interface allows plugging in classes that will be notified of new metric creation. The JmxReporter is always included to register JMX statistics.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>metrics.num.samples</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> int<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 2<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [1,…​]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?></simpara>
<simpara>The number of samples maintained to compute metrics.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>metrics.recording.level</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> string<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> INFO<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [INFO, DEBUG]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?></simpara>
<simpara>The highest recording level for metrics.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>metrics.sample.window.ms</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> long<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 30000<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [0,…​]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?></simpara>
<simpara>The window of time a metrics sample is computed over.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>reconnect.backoff.max.ms</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> long<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 1000<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [0,…​]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?></simpara>
<simpara>The maximum amount of time in milliseconds to wait when reconnecting to a broker that has repeatedly failed to connect. If provided, the backoff per host will increase exponentially for each consecutive connection failure, up to this maximum. After calculating the backoff increase, 20% random jitter is added to avoid connection storms.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>reconnect.backoff.ms</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> long<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 50<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [0,…​]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?></simpara>
<simpara>The base amount of time to wait before attempting to reconnect to a given host. This avoids repeatedly connecting to a host in a tight loop. This backoff applies to all connection attempts by the client to a broker.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>retry.backoff.ms</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> long<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 100<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [0,…​]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?></simpara>
<simpara>The amount of time to wait before attempting to retry a failed request to a given topic partition. This avoids repeatedly sending requests in a tight loop under some failure scenarios.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>sasl.kerberos.kinit.cmd</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> string<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> /usr/bin/kinit<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?></simpara>
<simpara>Kerberos kinit command path.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>sasl.kerberos.min.time.before.relogin</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> long<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 60000<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?></simpara>
<simpara>Login thread sleep time between refresh attempts.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>sasl.kerberos.ticket.renew.jitter</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> double<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 0.05<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?></simpara>
<simpara>Percentage of random jitter added to the renewal time.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>sasl.kerberos.ticket.renew.window.factor</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> double<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 0.8<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?></simpara>
<simpara>Login thread will sleep until the specified window factor of time from last refresh to ticket’s expiry has been reached, at which time it will try to renew the ticket.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>sasl.login.refresh.buffer.seconds</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> short<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 300<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [0,…​,3600]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?></simpara>
<simpara>The amount of buffer time before credential expiration to maintain when refreshing a credential, in seconds. If a refresh would otherwise occur closer to expiration than the number of buffer seconds then the refresh will be moved up to maintain as much of the buffer time as possible. Legal values are between 0 and 3600 (1 hour); a default value of  300 (5 minutes) is used if no value is specified. This value and sasl.login.refresh.min.period.seconds are both ignored if their sum exceeds the remaining lifetime of a credential. Currently applies only to OAUTHBEARER.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>sasl.login.refresh.min.period.seconds</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> short<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 60<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [0,…​,900]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?></simpara>
<simpara>The desired minimum time for the login refresh thread to wait before refreshing a credential, in seconds. Legal values are between 0 and 900 (15 minutes); a default value of 60 (1 minute) is used if no value is specified.  This value and  sasl.login.refresh.buffer.seconds are both ignored if their sum exceeds the remaining lifetime of a credential. Currently applies only to OAUTHBEARER.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>sasl.login.refresh.window.factor</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> double<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 0.8<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [0.5,…​,1.0]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?></simpara>
<simpara>Login refresh thread will sleep until the specified window factor relative to the credential’s lifetime has been reached, at which time it will try to refresh the credential. Legal values are between 0.5 (50%) and 1.0 (100%) inclusive; a default value of 0.8 (80%) is used if no value is specified. Currently applies only to OAUTHBEARER.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>sasl.login.refresh.window.jitter</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> double<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 0.05<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [0.0,…​,0.25]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?></simpara>
<simpara>The maximum amount of random jitter relative to the credential’s lifetime that is added to the login refresh thread’s sleep time. Legal values are between 0 and 0.25 (25%) inclusive; a default value of 0.05 (5%) is used if no value is specified. Currently applies only to OAUTHBEARER.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>ssl.cipher.suites</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> list<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> null<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?></simpara>
<simpara>A list of cipher suites. This is a named combination of authentication, encryption, MAC and key exchange algorithm used to negotiate the security settings for a network connection using TLS or SSL network protocol. By default all the available cipher suites are supported.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>ssl.endpoint.identification.algorithm</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> string<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> https<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?></simpara>
<simpara>The endpoint identification algorithm to validate server hostname using server certificate.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>ssl.keymanager.algorithm</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> string<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> SunX509<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?></simpara>
<simpara>The algorithm used by key manager factory for SSL connections. Default value is the key manager factory algorithm configured for the Java Virtual Machine.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>ssl.secure.random.implementation</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> string<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> null<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?></simpara>
<simpara>The SecureRandom PRNG implementation to use for SSL cryptography operations.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>ssl.trustmanager.algorithm</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> string<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> PKIX<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?></simpara>
<simpara>The algorithm used by trust manager factory for SSL connections. Default value is the trust manager factory algorithm configured for the Java Virtual Machine.</simpara>
</listitem>
</varlistentry>
</variablelist>
</appendix>
<appendix xml:id="producer-configuration-parameters-str">
<title>Producer configuration parameters</title>
<variablelist>
<varlistentry>
<term><literal>key.serializer</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> class<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> high<?asciidoc-br?></simpara>
<simpara>Serializer class for key that implements the <literal>org.apache.kafka.common.serialization.Serializer</literal> interface.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>value.serializer</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> class<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> high<?asciidoc-br?></simpara>
<simpara>Serializer class for value that implements the <literal>org.apache.kafka.common.serialization.Serializer</literal> interface.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>acks</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> string<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 1<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [all, -1, 0, 1]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> high<?asciidoc-br?></simpara>
<simpara>The number of acknowledgments the producer requires the leader to have received before considering a request complete. This controls the  durability of records that are sent. The following settings are allowed:</simpara>
<itemizedlist>
<listitem>
<simpara><literal>acks=0</literal> If set to zero then the producer will not wait for any acknowledgment from the server at all. The record will be immediately added to the socket buffer and considered sent. No guarantee can be made that the server has received the record in this case, and the <literal>retries</literal> configuration will not take effect (as the client won’t generally know of any failures). The offset given back for each record will always be set to -1.</simpara>
</listitem>
<listitem>
<simpara><literal>acks=1</literal> This will mean the leader will write the record to its local log but will respond without awaiting full acknowledgement from all followers. In this case should the leader fail immediately after acknowledging the record but before the followers have replicated it then the record will be lost.</simpara>
</listitem>
<listitem>
<simpara><literal>acks=all</literal> This means the leader will wait for the full set of in-sync replicas to acknowledge the record. This guarantees that the record will not be lost as long as at least one in-sync replica remains alive. This is the strongest available guarantee. This is equivalent to the acks=-1 setting.</simpara>
</listitem>
</itemizedlist>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>bootstrap.servers</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> list<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> ""<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> non-null string<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> high<?asciidoc-br?></simpara>
<simpara>A list of host/port pairs to use for establishing the initial connection to the Kafka cluster. The client will make use of all servers irrespective of which servers are specified here for bootstrapping—this list only impacts the initial hosts used to discover the full set of servers. This list should be in the form <literal>host1:port1,host2:port2,…​</literal>. Since these servers are just used for the initial connection to discover the full cluster membership (which may change dynamically), this list need not contain the full set of servers (you may want more than one, though, in case a server is down).</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>buffer.memory</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> long<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 33554432<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [0,…​]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> high<?asciidoc-br?></simpara>
<simpara>The total bytes of memory the producer can use to buffer records waiting to be sent to the server. If records are sent faster than they can be delivered to the server the producer will block for <literal>max.block.ms</literal> after which it will throw an exception.</simpara>
<simpara>This setting should correspond roughly to the total memory the producer will use, but is not a hard bound since not all memory the producer uses is used for buffering. Some additional memory will be used for compression (if compression is enabled) as well as for maintaining in-flight requests.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>compression.type</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> string<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> none<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> high<?asciidoc-br?></simpara>
<simpara>The compression type for all data generated by the producer. The default is none (i.e. no compression). Valid  values are <literal>none</literal>, <literal>gzip</literal>, <literal>snappy</literal>, <literal>lz4</literal>, or <literal>zstd</literal>. Compression is of full batches of data, so the efficacy of batching will also impact the compression ratio (more batching means better compression).</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>retries</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> int<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 2147483647<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [0,…​,2147483647]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> high<?asciidoc-br?></simpara>
<simpara>Setting a value greater than zero will cause the client to resend any record whose send fails with a potentially transient error. Note that this retry is no different than if the client resent the record upon receiving the error. Allowing retries without setting <literal>max.in.flight.requests.per.connection</literal> to 1 will potentially change the ordering of records because if two batches are sent to a single partition, and the first fails and is retried but the second succeeds, then the records in the second batch may appear first. Note additionally that produce requests will be failed before the number of retries has been exhausted if the timeout configured by <literal>delivery.timeout.ms</literal> expires first before successful acknowledgement. Users should generally prefer to leave this config unset and instead use <literal>delivery.timeout.ms</literal> to control retry behavior.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>ssl.key.password</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> password<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> null<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> high<?asciidoc-br?></simpara>
<simpara>The password of the private key in the key store file. This is optional for client.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>ssl.keystore.location</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> string<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> null<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> high<?asciidoc-br?></simpara>
<simpara>The location of the key store file. This is optional for client and can be used for two-way authentication for client.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>ssl.keystore.password</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> password<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> null<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> high<?asciidoc-br?></simpara>
<simpara>The store password for the key store file. This is optional for client and only needed if ssl.keystore.location is configured.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>ssl.truststore.location</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> string<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> null<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> high<?asciidoc-br?></simpara>
<simpara>The location of the trust store file.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>ssl.truststore.password</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> password<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> null<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> high<?asciidoc-br?></simpara>
<simpara>The password for the trust store file. If a password is not set access to the truststore is still available, but integrity checking is disabled.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>batch.size</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> int<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 16384<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [0,…​]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?></simpara>
<simpara>The producer will attempt to batch records together into fewer requests whenever multiple records are being sent to the same partition. This helps performance on both the client and the server. This configuration controls the default batch size in bytes.</simpara>
<simpara>No attempt will be made to batch records larger than this size.</simpara>
<simpara>Requests sent to brokers will contain multiple batches, one for each partition with data available to be sent.</simpara>
<simpara>A small batch size will make batching less common and may reduce throughput (a batch size of zero will disable batching entirely). A very large batch size may use memory a bit more wastefully as we will always allocate a buffer of the specified batch size in anticipation of additional records.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>client.dns.lookup</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> string<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> default<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [default, use_all_dns_ips, resolve_canonical_bootstrap_servers_only]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?></simpara>
<simpara>Controls how the client uses DNS lookups.</simpara>
<simpara>If set to <literal>use_all_dns_ips</literal> then, when the lookup returns multiple IP addresses for a hostname, they will all be attempted to connect to before failing the connection. Applies to both bootstrap and advertised servers.</simpara>
<simpara>If the value is <literal>resolve_canonical_bootstrap_servers_only</literal> each entry will be resolved and expanded into a list of canonical names.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>client.id</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> string<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> ""<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?></simpara>
<simpara>An id string to pass to the server when making requests. The purpose of this is to be able to track the source of requests beyond just ip/port by allowing a logical application name to be included in server-side request logging.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>connections.max.idle.ms</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> long<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 540000<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?></simpara>
<simpara>Close idle connections after the number of milliseconds specified by this config.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>delivery.timeout.ms</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> int<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 120000<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [0,…​]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?></simpara>
<simpara>An upper bound on the time to report success or failure after a call to <literal>send()</literal> returns. This limits the total time that a record will be delayed prior to sending, the time to await acknowledgement from the broker (if expected), and the time allowed for retriable send failures. The producer may report failure to send a record earlier than this config if either an unrecoverable error is encountered, the retries have been exhausted, or the record is added to a batch which reached an earlier delivery expiration deadline. The value of this config should be greater than or equal to the sum of <literal>request.timeout.ms</literal> and <literal>linger.ms</literal>.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>linger.ms</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> long<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 0<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [0,…​]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?></simpara>
<simpara>The producer groups together any records that arrive in between request transmissions into a single batched request. Normally this occurs only under load when records arrive faster than they can be sent out. However in some circumstances the client may want to reduce the number of requests even under moderate load. This setting accomplishes this by adding a small amount of artificial delay—that is, rather than immediately sending out a record the producer will wait for up to the given delay to allow other records to be sent so that the sends can be batched together. This can be thought of as analogous to Nagle’s algorithm in TCP. This setting gives the upper bound on the delay for batching: once we get <literal>batch.size</literal> worth of records for a partition it will be sent immediately regardless of this setting, however if we have fewer than this many bytes accumulated for this partition we will 'linger' for the specified time waiting for more records to show up. This setting defaults to 0 (i.e. no delay). Setting <literal>linger.ms=5</literal>, for example, would have the effect of reducing the number of requests sent but would add up to 5ms of latency to records sent in the absence of load.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>max.block.ms</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> long<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 60000<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [0,…​]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?></simpara>
<simpara>The configuration controls how long <literal>KafkaProducer.send()</literal> and <literal>KafkaProducer.partitionsFor()</literal> will block.These methods can be blocked either because the buffer is full or metadata unavailable.Blocking in the user-supplied serializers or partitioner will not be counted against this timeout.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>max.request.size</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> int<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 1048576<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [0,…​]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?></simpara>
<simpara>The maximum size of a request in bytes. This setting will limit the number of record batches the producer will send in a single request to avoid sending huge requests. This is also effectively a cap on the maximum record batch size. Note that the server has its own cap on record batch size which may be different from this.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>partitioner.class</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> class<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> org.apache.kafka.clients.producer.internals.DefaultPartitioner<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?></simpara>
<simpara>Partitioner class that implements the <literal>org.apache.kafka.clients.producer.Partitioner</literal> interface.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>receive.buffer.bytes</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> int<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 32768<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [-1,…​]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?></simpara>
<simpara>The size of the TCP receive buffer (SO_RCVBUF) to use when reading data. If the value is -1, the OS default will be used.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>request.timeout.ms</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> int<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 30000<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [0,…​]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?></simpara>
<simpara>The configuration controls the maximum amount of time the client will wait for the response of a request. If the response is not received before the timeout elapses the client will resend the request if necessary or fail the request if retries are exhausted. This should be larger than <literal>replica.lag.time.max.ms</literal> (a broker configuration) to reduce the possibility of message duplication due to unnecessary producer retries.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>sasl.client.callback.handler.class</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> class<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> null<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?></simpara>
<simpara>The fully qualified name of a SASL client callback handler class that implements the AuthenticateCallbackHandler interface.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>sasl.jaas.config</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> password<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> null<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?></simpara>
<simpara>JAAS login context parameters for SASL connections in the format used by JAAS configuration files. JAAS configuration file format is described <link xlink:href="http://docs.oracle.com/javase/8/docs/technotes/guides/security/jgss/tutorials/LoginConfigFile.html">here</link>. The format for the value is: ‘loginModuleClass controlFlag (optionName=optionValue)*;’. For brokers, the config must be prefixed with listener prefix and SASL mechanism name in lower-case. For example, listener.name.sasl_ssl.scram-sha-256.sasl.jaas.config=com.example.ScramLoginModule required;.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>sasl.kerberos.service.name</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> string<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> null<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?></simpara>
<simpara>The Kerberos principal name that Kafka runs as. This can be defined either in Kafka’s JAAS config or in Kafka’s config.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>sasl.login.callback.handler.class</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> class<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> null<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?></simpara>
<simpara>The fully qualified name of a SASL login callback handler class that implements the AuthenticateCallbackHandler interface. For brokers, login callback handler config must be prefixed with listener prefix and SASL mechanism name in lower-case. For example, listener.name.sasl_ssl.scram-sha-256.sasl.login.callback.handler.class=com.example.CustomScramLoginCallbackHandler.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>sasl.login.class</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> class<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> null<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?></simpara>
<simpara>The fully qualified name of a class that implements the Login interface. For brokers, login config must be prefixed with listener prefix and SASL mechanism name in lower-case. For example, listener.name.sasl_ssl.scram-sha-256.sasl.login.class=com.example.CustomScramLogin.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>sasl.mechanism</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> string<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> GSSAPI<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?></simpara>
<simpara>SASL mechanism used for client connections. This may be any mechanism for which a security provider is available. GSSAPI is the default mechanism.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>security.protocol</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> string<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> PLAINTEXT<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?></simpara>
<simpara>Protocol used to communicate with brokers. Valid values are: PLAINTEXT, SSL, SASL_PLAINTEXT, SASL_SSL.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>send.buffer.bytes</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> int<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 131072<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [-1,…​]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?></simpara>
<simpara>The size of the TCP send buffer (SO_SNDBUF) to use when sending data. If the value is -1, the OS default will be used.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>ssl.enabled.protocols</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> list<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> TLSv1.2,TLSv1.1,TLSv1<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?></simpara>
<simpara>The list of protocols enabled for SSL connections.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>ssl.keystore.type</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> string<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> JKS<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?></simpara>
<simpara>The file format of the key store file. This is optional for client.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>ssl.protocol</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> string<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> TLS<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?></simpara>
<simpara>The SSL protocol used to generate the SSLContext. Default setting is TLS, which is fine for most cases. Allowed values in recent JVMs are TLS, TLSv1.1 and TLSv1.2. SSL, SSLv2 and SSLv3 may be supported in older JVMs, but their usage is discouraged due to known security vulnerabilities.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>ssl.provider</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> string<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> null<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?></simpara>
<simpara>The name of the security provider used for SSL connections. Default value is the default security provider of the JVM.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>ssl.truststore.type</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> string<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> JKS<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?></simpara>
<simpara>The file format of the trust store file.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>enable.idempotence</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> boolean<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> false<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?></simpara>
<simpara>When set to 'true', the producer will ensure that exactly one copy of each message is written in the stream. If 'false', producer retries due to broker failures, etc., may write duplicates of the retried message in the stream. Note that enabling idempotence requires <literal>max.in.flight.requests.per.connection</literal> to be less than or equal to 5, <literal>retries</literal> to be greater than 0 and <literal>acks</literal> must be 'all'. If these values are not explicitly set by the user, suitable values will be chosen. If incompatible values are set, a <literal>ConfigException</literal> will be thrown.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>interceptor.classes</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> list<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> ""<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> non-null string<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?></simpara>
<simpara>A list of classes to use as interceptors. Implementing the <literal>org.apache.kafka.clients.producer.ProducerInterceptor</literal> interface allows you to intercept (and possibly mutate) the records received by the producer before they are published to the Kafka cluster. By default, there are no interceptors.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>max.in.flight.requests.per.connection</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> int<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 5<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [1,…​]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?></simpara>
<simpara>The maximum number of unacknowledged requests the client will send on a single connection before blocking. Note that if this setting is set to be greater than 1 and there are failed sends, there is a risk of message re-ordering due to retries (i.e., if retries are enabled).</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>metadata.max.age.ms</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> long<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 300000<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [0,…​]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?></simpara>
<simpara>The period of time in milliseconds after which we force a refresh of metadata even if we haven’t seen any partition leadership changes to proactively discover any new brokers or partitions.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>metric.reporters</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> list<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> ""<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> non-null string<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?></simpara>
<simpara>A list of classes to use as metrics reporters. Implementing the <literal>org.apache.kafka.common.metrics.MetricsReporter</literal> interface allows plugging in classes that will be notified of new metric creation. The JmxReporter is always included to register JMX statistics.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>metrics.num.samples</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> int<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 2<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [1,…​]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?></simpara>
<simpara>The number of samples maintained to compute metrics.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>metrics.recording.level</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> string<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> INFO<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [INFO, DEBUG]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?></simpara>
<simpara>The highest recording level for metrics.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>metrics.sample.window.ms</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> long<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 30000<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [0,…​]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?></simpara>
<simpara>The window of time a metrics sample is computed over.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>reconnect.backoff.max.ms</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> long<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 1000<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [0,…​]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?></simpara>
<simpara>The maximum amount of time in milliseconds to wait when reconnecting to a broker that has repeatedly failed to connect. If provided, the backoff per host will increase exponentially for each consecutive connection failure, up to this maximum. After calculating the backoff increase, 20% random jitter is added to avoid connection storms.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>reconnect.backoff.ms</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> long<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 50<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [0,…​]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?></simpara>
<simpara>The base amount of time to wait before attempting to reconnect to a given host. This avoids repeatedly connecting to a host in a tight loop. This backoff applies to all connection attempts by the client to a broker.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>retry.backoff.ms</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> long<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 100<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [0,…​]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?></simpara>
<simpara>The amount of time to wait before attempting to retry a failed request to a given topic partition. This avoids repeatedly sending requests in a tight loop under some failure scenarios.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>sasl.kerberos.kinit.cmd</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> string<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> /usr/bin/kinit<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?></simpara>
<simpara>Kerberos kinit command path.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>sasl.kerberos.min.time.before.relogin</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> long<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 60000<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?></simpara>
<simpara>Login thread sleep time between refresh attempts.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>sasl.kerberos.ticket.renew.jitter</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> double<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 0.05<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?></simpara>
<simpara>Percentage of random jitter added to the renewal time.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>sasl.kerberos.ticket.renew.window.factor</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> double<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 0.8<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?></simpara>
<simpara>Login thread will sleep until the specified window factor of time from last refresh to ticket’s expiry has been reached, at which time it will try to renew the ticket.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>sasl.login.refresh.buffer.seconds</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> short<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 300<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [0,…​,3600]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?></simpara>
<simpara>The amount of buffer time before credential expiration to maintain when refreshing a credential, in seconds. If a refresh would otherwise occur closer to expiration than the number of buffer seconds then the refresh will be moved up to maintain as much of the buffer time as possible. Legal values are between 0 and 3600 (1 hour); a default value of  300 (5 minutes) is used if no value is specified. This value and sasl.login.refresh.min.period.seconds are both ignored if their sum exceeds the remaining lifetime of a credential. Currently applies only to OAUTHBEARER.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>sasl.login.refresh.min.period.seconds</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> short<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 60<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [0,…​,900]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?></simpara>
<simpara>The desired minimum time for the login refresh thread to wait before refreshing a credential, in seconds. Legal values are between 0 and 900 (15 minutes); a default value of 60 (1 minute) is used if no value is specified.  This value and  sasl.login.refresh.buffer.seconds are both ignored if their sum exceeds the remaining lifetime of a credential. Currently applies only to OAUTHBEARER.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>sasl.login.refresh.window.factor</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> double<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 0.8<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [0.5,…​,1.0]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?></simpara>
<simpara>Login refresh thread will sleep until the specified window factor relative to the credential’s lifetime has been reached, at which time it will try to refresh the credential. Legal values are between 0.5 (50%) and 1.0 (100%) inclusive; a default value of 0.8 (80%) is used if no value is specified. Currently applies only to OAUTHBEARER.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>sasl.login.refresh.window.jitter</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> double<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 0.05<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [0.0,…​,0.25]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?></simpara>
<simpara>The maximum amount of random jitter relative to the credential’s lifetime that is added to the login refresh thread’s sleep time. Legal values are between 0 and 0.25 (25%) inclusive; a default value of 0.05 (5%) is used if no value is specified. Currently applies only to OAUTHBEARER.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>ssl.cipher.suites</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> list<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> null<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?></simpara>
<simpara>A list of cipher suites. This is a named combination of authentication, encryption, MAC and key exchange algorithm used to negotiate the security settings for a network connection using TLS or SSL network protocol. By default all the available cipher suites are supported.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>ssl.endpoint.identification.algorithm</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> string<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> https<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?></simpara>
<simpara>The endpoint identification algorithm to validate server hostname using server certificate.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>ssl.keymanager.algorithm</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> string<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> SunX509<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?></simpara>
<simpara>The algorithm used by key manager factory for SSL connections. Default value is the key manager factory algorithm configured for the Java Virtual Machine.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>ssl.secure.random.implementation</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> string<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> null<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?></simpara>
<simpara>The SecureRandom PRNG implementation to use for SSL cryptography operations.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>ssl.trustmanager.algorithm</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> string<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> PKIX<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?></simpara>
<simpara>The algorithm used by trust manager factory for SSL connections. Default value is the trust manager factory algorithm configured for the Java Virtual Machine.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>transaction.timeout.ms</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> int<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 60000<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?></simpara>
<simpara>The maximum amount of time in ms that the transaction coordinator will wait for a transaction status update from the producer before proactively aborting the ongoing transaction.If this value is larger than the transaction.max.timeout.ms setting in the broker, the request will fail with a <literal>InvalidTransactionTimeout</literal> error.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>transactional.id</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> string<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> null<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> non-empty string<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?></simpara>
<simpara>The TransactionalId to use for transactional delivery. This enables reliability semantics which span multiple producer sessions since it allows the client to guarantee that transactions using the same TransactionalId have been completed prior to starting any new transactions. If no TransactionalId is provided, then the producer is limited to idempotent delivery. Note that <literal>enable.idempotence</literal> must be enabled if a TransactionalId is configured. The default is <literal>null</literal>, which means transactions cannot be used. Note that, by default, transactions require a cluster of at least three brokers which is the recommended setting for production; for development you can change this, by adjusting broker setting <literal>transaction.state.log.replication.factor</literal>.</simpara>
</listitem>
</varlistentry>
</variablelist>
</appendix>
<appendix xml:id="admin-client-configuration-parameters-str">
<title>Admin Client configuration parameters</title>
<variablelist>
<varlistentry>
<term><literal>bootstrap.servers</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> list<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> high<?asciidoc-br?></simpara>
<simpara>A list of host/port pairs to use for establishing the initial connection to the Kafka cluster. The client will make use of all servers irrespective of which servers are specified here for bootstrapping—this list only impacts the initial hosts used to discover the full set of servers. This list should be in the form <literal>host1:port1,host2:port2,…​</literal>. Since these servers are just used for the initial connection to discover the full cluster membership (which may change dynamically), this list need not contain the full set of servers (you may want more than one, though, in case a server is down).</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>ssl.key.password</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> password<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> null<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> high<?asciidoc-br?></simpara>
<simpara>The password of the private key in the key store file. This is optional for client.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>ssl.keystore.location</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> string<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> null<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> high<?asciidoc-br?></simpara>
<simpara>The location of the key store file. This is optional for client and can be used for two-way authentication for client.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>ssl.keystore.password</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> password<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> null<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> high<?asciidoc-br?></simpara>
<simpara>The store password for the key store file. This is optional for client and only needed if ssl.keystore.location is configured.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>ssl.truststore.location</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> string<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> null<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> high<?asciidoc-br?></simpara>
<simpara>The location of the trust store file.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>ssl.truststore.password</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> password<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> null<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> high<?asciidoc-br?></simpara>
<simpara>The password for the trust store file. If a password is not set access to the truststore is still available, but integrity checking is disabled.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>client.dns.lookup</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> string<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> default<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [default, use_all_dns_ips, resolve_canonical_bootstrap_servers_only]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?></simpara>
<simpara>Controls how the client uses DNS lookups.</simpara>
<simpara>If set to <literal>use_all_dns_ips</literal> then, when the lookup returns multiple IP addresses for a hostname, they will all be attempted to connect to before failing the connection. Applies to both bootstrap and advertised servers.</simpara>
<simpara>If the value is <literal>resolve_canonical_bootstrap_servers_only</literal> each entry will be resolved and expanded into a list of canonical names.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>client.id</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> string<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> ""<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?></simpara>
<simpara>An id string to pass to the server when making requests. The purpose of this is to be able to track the source of requests beyond just ip/port by allowing a logical application name to be included in server-side request logging.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>connections.max.idle.ms</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> long<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 300000<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?></simpara>
<simpara>Close idle connections after the number of milliseconds specified by this config.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>receive.buffer.bytes</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> int<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 65536<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [-1,…​]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?></simpara>
<simpara>The size of the TCP receive buffer (SO_RCVBUF) to use when reading data. If the value is -1, the OS default will be used.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>request.timeout.ms</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> int<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 120000<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [0,…​]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?></simpara>
<simpara>The configuration controls the maximum amount of time the client will wait for the response of a request. If the response is not received before the timeout elapses the client will resend the request if necessary or fail the request if retries are exhausted.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>sasl.client.callback.handler.class</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> class<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> null<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?></simpara>
<simpara>The fully qualified name of a SASL client callback handler class that implements the AuthenticateCallbackHandler interface.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>sasl.jaas.config</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> password<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> null<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?></simpara>
<simpara>JAAS login context parameters for SASL connections in the format used by JAAS configuration files. JAAS configuration file format is described <link xlink:href="http://docs.oracle.com/javase/8/docs/technotes/guides/security/jgss/tutorials/LoginConfigFile.html">here</link>. The format for the value is: ‘loginModuleClass controlFlag (optionName=optionValue)*;’. For brokers, the config must be prefixed with listener prefix and SASL mechanism name in lower-case. For example, listener.name.sasl_ssl.scram-sha-256.sasl.jaas.config=com.example.ScramLoginModule required;.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>sasl.kerberos.service.name</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> string<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> null<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?></simpara>
<simpara>The Kerberos principal name that Kafka runs as. This can be defined either in Kafka’s JAAS config or in Kafka’s config.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>sasl.login.callback.handler.class</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> class<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> null<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?></simpara>
<simpara>The fully qualified name of a SASL login callback handler class that implements the AuthenticateCallbackHandler interface. For brokers, login callback handler config must be prefixed with listener prefix and SASL mechanism name in lower-case. For example, listener.name.sasl_ssl.scram-sha-256.sasl.login.callback.handler.class=com.example.CustomScramLoginCallbackHandler.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>sasl.login.class</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> class<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> null<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?></simpara>
<simpara>The fully qualified name of a class that implements the Login interface. For brokers, login config must be prefixed with listener prefix and SASL mechanism name in lower-case. For example, listener.name.sasl_ssl.scram-sha-256.sasl.login.class=com.example.CustomScramLogin.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>sasl.mechanism</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> string<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> GSSAPI<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?></simpara>
<simpara>SASL mechanism used for client connections. This may be any mechanism for which a security provider is available. GSSAPI is the default mechanism.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>security.protocol</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> string<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> PLAINTEXT<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?></simpara>
<simpara>Protocol used to communicate with brokers. Valid values are: PLAINTEXT, SSL, SASL_PLAINTEXT, SASL_SSL.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>send.buffer.bytes</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> int<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 131072<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [-1,…​]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?></simpara>
<simpara>The size of the TCP send buffer (SO_SNDBUF) to use when sending data. If the value is -1, the OS default will be used.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>ssl.enabled.protocols</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> list<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> TLSv1.2,TLSv1.1,TLSv1<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?></simpara>
<simpara>The list of protocols enabled for SSL connections.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>ssl.keystore.type</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> string<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> JKS<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?></simpara>
<simpara>The file format of the key store file. This is optional for client.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>ssl.protocol</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> string<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> TLS<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?></simpara>
<simpara>The SSL protocol used to generate the SSLContext. Default setting is TLS, which is fine for most cases. Allowed values in recent JVMs are TLS, TLSv1.1 and TLSv1.2. SSL, SSLv2 and SSLv3 may be supported in older JVMs, but their usage is discouraged due to known security vulnerabilities.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>ssl.provider</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> string<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> null<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?></simpara>
<simpara>The name of the security provider used for SSL connections. Default value is the default security provider of the JVM.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>ssl.truststore.type</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> string<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> JKS<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?></simpara>
<simpara>The file format of the trust store file.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>metadata.max.age.ms</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> long<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 300000<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [0,…​]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?></simpara>
<simpara>The period of time in milliseconds after which we force a refresh of metadata even if we haven’t seen any partition leadership changes to proactively discover any new brokers or partitions.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>metric.reporters</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> list<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> ""<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?></simpara>
<simpara>A list of classes to use as metrics reporters. Implementing the <literal>org.apache.kafka.common.metrics.MetricsReporter</literal> interface allows plugging in classes that will be notified of new metric creation. The JmxReporter is always included to register JMX statistics.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>metrics.num.samples</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> int<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 2<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [1,…​]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?></simpara>
<simpara>The number of samples maintained to compute metrics.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>metrics.recording.level</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> string<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> INFO<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [INFO, DEBUG]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?></simpara>
<simpara>The highest recording level for metrics.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>metrics.sample.window.ms</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> long<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 30000<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [0,…​]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?></simpara>
<simpara>The window of time a metrics sample is computed over.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>reconnect.backoff.max.ms</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> long<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 1000<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [0,…​]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?></simpara>
<simpara>The maximum amount of time in milliseconds to wait when reconnecting to a broker that has repeatedly failed to connect. If provided, the backoff per host will increase exponentially for each consecutive connection failure, up to this maximum. After calculating the backoff increase, 20% random jitter is added to avoid connection storms.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>reconnect.backoff.ms</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> long<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 50<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [0,…​]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?></simpara>
<simpara>The base amount of time to wait before attempting to reconnect to a given host. This avoids repeatedly connecting to a host in a tight loop. This backoff applies to all connection attempts by the client to a broker.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>retries</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> int<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 5<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [0,…​]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?></simpara>
<simpara>Setting a value greater than zero will cause the client to resend any request that fails with a potentially transient error.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>retry.backoff.ms</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> long<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 100<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [0,…​]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?></simpara>
<simpara>The amount of time to wait before attempting to retry a failed request. This avoids repeatedly sending requests in a tight loop under some failure scenarios.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>sasl.kerberos.kinit.cmd</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> string<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> /usr/bin/kinit<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?></simpara>
<simpara>Kerberos kinit command path.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>sasl.kerberos.min.time.before.relogin</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> long<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 60000<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?></simpara>
<simpara>Login thread sleep time between refresh attempts.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>sasl.kerberos.ticket.renew.jitter</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> double<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 0.05<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?></simpara>
<simpara>Percentage of random jitter added to the renewal time.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>sasl.kerberos.ticket.renew.window.factor</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> double<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 0.8<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?></simpara>
<simpara>Login thread will sleep until the specified window factor of time from last refresh to ticket’s expiry has been reached, at which time it will try to renew the ticket.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>sasl.login.refresh.buffer.seconds</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> short<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 300<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [0,…​,3600]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?></simpara>
<simpara>The amount of buffer time before credential expiration to maintain when refreshing a credential, in seconds. If a refresh would otherwise occur closer to expiration than the number of buffer seconds then the refresh will be moved up to maintain as much of the buffer time as possible. Legal values are between 0 and 3600 (1 hour); a default value of  300 (5 minutes) is used if no value is specified. This value and sasl.login.refresh.min.period.seconds are both ignored if their sum exceeds the remaining lifetime of a credential. Currently applies only to OAUTHBEARER.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>sasl.login.refresh.min.period.seconds</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> short<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 60<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [0,…​,900]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?></simpara>
<simpara>The desired minimum time for the login refresh thread to wait before refreshing a credential, in seconds. Legal values are between 0 and 900 (15 minutes); a default value of 60 (1 minute) is used if no value is specified.  This value and  sasl.login.refresh.buffer.seconds are both ignored if their sum exceeds the remaining lifetime of a credential. Currently applies only to OAUTHBEARER.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>sasl.login.refresh.window.factor</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> double<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 0.8<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [0.5,…​,1.0]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?></simpara>
<simpara>Login refresh thread will sleep until the specified window factor relative to the credential’s lifetime has been reached, at which time it will try to refresh the credential. Legal values are between 0.5 (50%) and 1.0 (100%) inclusive; a default value of 0.8 (80%) is used if no value is specified. Currently applies only to OAUTHBEARER.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>sasl.login.refresh.window.jitter</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> double<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 0.05<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [0.0,…​,0.25]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?></simpara>
<simpara>The maximum amount of random jitter relative to the credential’s lifetime that is added to the login refresh thread’s sleep time. Legal values are between 0 and 0.25 (25%) inclusive; a default value of 0.05 (5%) is used if no value is specified. Currently applies only to OAUTHBEARER.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>ssl.cipher.suites</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> list<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> null<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?></simpara>
<simpara>A list of cipher suites. This is a named combination of authentication, encryption, MAC and key exchange algorithm used to negotiate the security settings for a network connection using TLS or SSL network protocol. By default all the available cipher suites are supported.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>ssl.endpoint.identification.algorithm</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> string<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> https<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?></simpara>
<simpara>The endpoint identification algorithm to validate server hostname using server certificate.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>ssl.keymanager.algorithm</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> string<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> SunX509<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?></simpara>
<simpara>The algorithm used by key manager factory for SSL connections. Default value is the key manager factory algorithm configured for the Java Virtual Machine.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>ssl.secure.random.implementation</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> string<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> null<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?></simpara>
<simpara>The SecureRandom PRNG implementation to use for SSL cryptography operations.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>ssl.trustmanager.algorithm</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> string<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> PKIX<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?></simpara>
<simpara>The algorithm used by trust manager factory for SSL connections. Default value is the trust manager factory algorithm configured for the Java Virtual Machine.</simpara>
</listitem>
</varlistentry>
</variablelist>
</appendix>
<appendix xml:id="kafka-connect-configuration-parameters-str">
<title>Kafka Connect configuration parameters</title>
<variablelist>
<varlistentry>
<term><literal>config.storage.topic</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> string<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> high<?asciidoc-br?></simpara>
<simpara>The name of the Kafka topic where connector configurations are stored.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>group.id</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> string<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> high<?asciidoc-br?></simpara>
<simpara>A unique string that identifies the Connect cluster group this worker belongs to.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>key.converter</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> class<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> high<?asciidoc-br?></simpara>
<simpara>Converter class used to convert between Kafka Connect format and the serialized form that is written to Kafka. This controls the format of the keys in messages written to or read from Kafka, and since this is independent of connectors it allows any connector to work with any serialization format. Examples of common formats include JSON and Avro.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>offset.storage.topic</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> string<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> high<?asciidoc-br?></simpara>
<simpara>The name of the Kafka topic where connector offsets are stored.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>status.storage.topic</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> string<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> high<?asciidoc-br?></simpara>
<simpara>The name of the Kafka topic where connector and task status are stored.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>value.converter</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> class<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> high<?asciidoc-br?></simpara>
<simpara>Converter class used to convert between Kafka Connect format and the serialized form that is written to Kafka. This controls the format of the values in messages written to or read from Kafka, and since this is independent of connectors it allows any connector to work with any serialization format. Examples of common formats include JSON and Avro.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>bootstrap.servers</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> list<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> localhost:9092<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> high<?asciidoc-br?></simpara>
<simpara>A list of host/port pairs to use for establishing the initial connection to the Kafka cluster. The client will make use of all servers irrespective of which servers are specified here for bootstrapping—this list only impacts the initial hosts used to discover the full set of servers. This list should be in the form <literal>host1:port1,host2:port2,…​</literal>. Since these servers are just used for the initial connection to discover the full cluster membership (which may change dynamically), this list need not contain the full set of servers (you may want more than one, though, in case a server is down).</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>heartbeat.interval.ms</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> int<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 3000<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> high<?asciidoc-br?></simpara>
<simpara>The expected time between heartbeats to the group coordinator when using Kafka’s group management facilities. Heartbeats are used to ensure that the worker’s session stays active and to facilitate rebalancing when new members join or leave the group. The value must be set lower than <literal>session.timeout.ms</literal>, but typically should be set no higher than 1/3 of that value. It can be adjusted even lower to control the expected time for normal rebalances.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>rebalance.timeout.ms</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> int<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 60000<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> high<?asciidoc-br?></simpara>
<simpara>The maximum allowed time for each worker to join the group once a rebalance has begun. This is basically a limit on the amount of time needed for all tasks to flush any pending data and commit offsets. If the timeout is exceeded, then the worker will be removed from the group, which will cause offset commit failures.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>session.timeout.ms</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> int<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 10000<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> high<?asciidoc-br?></simpara>
<simpara>The timeout used to detect worker failures. The worker sends periodic heartbeats to indicate its liveness to the broker. If no heartbeats are received by the broker before the expiration of this session timeout, then the broker will remove the worker from the group and initiate a rebalance. Note that the value must be in the allowable range as configured in the broker configuration by <literal>group.min.session.timeout.ms</literal> and <literal>group.max.session.timeout.ms</literal>.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>ssl.key.password</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> password<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> null<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> high<?asciidoc-br?></simpara>
<simpara>The password of the private key in the key store file. This is optional for client.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>ssl.keystore.location</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> string<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> null<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> high<?asciidoc-br?></simpara>
<simpara>The location of the key store file. This is optional for client and can be used for two-way authentication for client.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>ssl.keystore.password</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> password<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> null<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> high<?asciidoc-br?></simpara>
<simpara>The store password for the key store file. This is optional for client and only needed if ssl.keystore.location is configured.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>ssl.truststore.location</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> string<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> null<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> high<?asciidoc-br?></simpara>
<simpara>The location of the trust store file.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>ssl.truststore.password</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> password<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> null<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> high<?asciidoc-br?></simpara>
<simpara>The password for the trust store file. If a password is not set access to the truststore is still available, but integrity checking is disabled.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>client.dns.lookup</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> string<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> default<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [default, use_all_dns_ips, resolve_canonical_bootstrap_servers_only]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?></simpara>
<simpara>Controls how the client uses DNS lookups.</simpara>
<simpara>If set to <literal>use_all_dns_ips</literal> then, when the lookup returns multiple IP addresses for a hostname, they will all be attempted to connect to before failing the connection. Applies to both bootstrap and advertised servers.</simpara>
<simpara>If the value is <literal>resolve_canonical_bootstrap_servers_only</literal> each entry will be resolved and expanded into a list of canonical names.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>connections.max.idle.ms</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> long<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 540000<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?></simpara>
<simpara>Close idle connections after the number of milliseconds specified by this config.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>connector.client.config.override.policy</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> string<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> None<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?></simpara>
<simpara>Class name or alias of implementation of <literal>ConnectorClientConfigOverridePolicy</literal>. Defines what client configurations can be overriden by the connector. The default implementation is <literal>None</literal>. The other possible policies in the framework include <literal>All</literal> and <literal>Principal</literal>.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>receive.buffer.bytes</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> int<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 32768<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [0,…​]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?></simpara>
<simpara>The size of the TCP receive buffer (SO_RCVBUF) to use when reading data. If the value is -1, the OS default will be used.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>request.timeout.ms</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> int<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 40000<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [0,…​]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?></simpara>
<simpara>The configuration controls the maximum amount of time the client will wait for the response of a request. If the response is not received before the timeout elapses the client will resend the request if necessary or fail the request if retries are exhausted.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>sasl.client.callback.handler.class</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> class<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> null<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?></simpara>
<simpara>The fully qualified name of a SASL client callback handler class that implements the AuthenticateCallbackHandler interface.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>sasl.jaas.config</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> password<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> null<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?></simpara>
<simpara>JAAS login context parameters for SASL connections in the format used by JAAS configuration files. JAAS configuration file format is described <link xlink:href="http://docs.oracle.com/javase/8/docs/technotes/guides/security/jgss/tutorials/LoginConfigFile.html">here</link>. The format for the value is: ‘loginModuleClass controlFlag (optionName=optionValue)*;’. For brokers, the config must be prefixed with listener prefix and SASL mechanism name in lower-case. For example, listener.name.sasl_ssl.scram-sha-256.sasl.jaas.config=com.example.ScramLoginModule required;.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>sasl.kerberos.service.name</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> string<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> null<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?></simpara>
<simpara>The Kerberos principal name that Kafka runs as. This can be defined either in Kafka’s JAAS config or in Kafka’s config.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>sasl.login.callback.handler.class</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> class<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> null<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?></simpara>
<simpara>The fully qualified name of a SASL login callback handler class that implements the AuthenticateCallbackHandler interface. For brokers, login callback handler config must be prefixed with listener prefix and SASL mechanism name in lower-case. For example, listener.name.sasl_ssl.scram-sha-256.sasl.login.callback.handler.class=com.example.CustomScramLoginCallbackHandler.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>sasl.login.class</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> class<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> null<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?></simpara>
<simpara>The fully qualified name of a class that implements the Login interface. For brokers, login config must be prefixed with listener prefix and SASL mechanism name in lower-case. For example, listener.name.sasl_ssl.scram-sha-256.sasl.login.class=com.example.CustomScramLogin.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>sasl.mechanism</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> string<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> GSSAPI<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?></simpara>
<simpara>SASL mechanism used for client connections. This may be any mechanism for which a security provider is available. GSSAPI is the default mechanism.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>security.protocol</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> string<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> PLAINTEXT<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?></simpara>
<simpara>Protocol used to communicate with brokers. Valid values are: PLAINTEXT, SSL, SASL_PLAINTEXT, SASL_SSL.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>send.buffer.bytes</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> int<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 131072<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [0,…​]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?></simpara>
<simpara>The size of the TCP send buffer (SO_SNDBUF) to use when sending data. If the value is -1, the OS default will be used.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>ssl.enabled.protocols</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> list<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> TLSv1.2,TLSv1.1,TLSv1<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?></simpara>
<simpara>The list of protocols enabled for SSL connections.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>ssl.keystore.type</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> string<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> JKS<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?></simpara>
<simpara>The file format of the key store file. This is optional for client.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>ssl.protocol</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> string<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> TLS<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?></simpara>
<simpara>The SSL protocol used to generate the SSLContext. Default setting is TLS, which is fine for most cases. Allowed values in recent JVMs are TLS, TLSv1.1 and TLSv1.2. SSL, SSLv2 and SSLv3 may be supported in older JVMs, but their usage is discouraged due to known security vulnerabilities.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>ssl.provider</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> string<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> null<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?></simpara>
<simpara>The name of the security provider used for SSL connections. Default value is the default security provider of the JVM.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>ssl.truststore.type</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> string<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> JKS<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?></simpara>
<simpara>The file format of the trust store file.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>worker.sync.timeout.ms</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> int<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 3000<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?></simpara>
<simpara>When the worker is out of sync with other workers and needs to resynchronize configurations, wait up to this amount of time before giving up, leaving the group, and waiting a backoff period before rejoining.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>worker.unsync.backoff.ms</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> int<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 300000<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?></simpara>
<simpara>When the worker is out of sync with other workers and  fails to catch up within worker.sync.timeout.ms, leave the Connect cluster for this long before rejoining.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>access.control.allow.methods</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> string<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> ""<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?></simpara>
<simpara>Sets the methods supported for cross origin requests by setting the Access-Control-Allow-Methods header. The default value of the Access-Control-Allow-Methods header allows cross origin requests for GET, POST and HEAD.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>access.control.allow.origin</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> string<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> ""<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?></simpara>
<simpara>Value to set the Access-Control-Allow-Origin header to for REST API requests.To enable cross origin access, set this to the domain of the application that should be permitted to access the API, or '*' to allow access from any domain. The default value only allows access from the domain of the REST API.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>client.id</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> string<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> ""<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?></simpara>
<simpara>An id string to pass to the server when making requests. The purpose of this is to be able to track the source of requests beyond just ip/port by allowing a logical application name to be included in server-side request logging.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>config.providers</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> list<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> ""<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?></simpara>
<simpara>Comma-separated names of <literal>ConfigProvider</literal> classes, loaded and used in the order specified. Implementing the interface  <literal>ConfigProvider</literal> allows you to replace variable references in connector configurations, such as for externalized secrets.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>config.storage.replication.factor</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> short<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 3<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [1,…​]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?></simpara>
<simpara>Replication factor used when creating the configuration storage topic.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>connect.protocol</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> string<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> compatible<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [eager, compatible]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?></simpara>
<simpara>Compatibility mode for Kafka Connect Protocol.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>header.converter</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> class<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> org.apache.kafka.connect.storage.SimpleHeaderConverter<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?></simpara>
<simpara>HeaderConverter class used to convert between Kafka Connect format and the serialized form that is written to Kafka. This controls the format of the header values in messages written to or read from Kafka, and since this is independent of connectors it allows any connector to work with any serialization format. Examples of common formats include JSON and Avro. By default, the SimpleHeaderConverter is used to serialize header values to strings and deserialize them by inferring the schemas.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>internal.key.converter</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> class<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> org.apache.kafka.connect.json.JsonConverter<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?></simpara>
<simpara>Converter class used to convert between Kafka Connect format and the serialized form that is written to Kafka. This controls the format of the keys in messages written to or read from Kafka, and since this is independent of connectors it allows any connector to work with any serialization format. Examples of common formats include JSON and Avro. This setting controls the format used for internal bookkeeping data used by the framework, such as configs and offsets, so users can typically use any functioning Converter implementation. Deprecated; will be removed in an upcoming version.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>internal.value.converter</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> class<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> org.apache.kafka.connect.json.JsonConverter<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?></simpara>
<simpara>Converter class used to convert between Kafka Connect format and the serialized form that is written to Kafka. This controls the format of the values in messages written to or read from Kafka, and since this is independent of connectors it allows any connector to work with any serialization format. Examples of common formats include JSON and Avro. This setting controls the format used for internal bookkeeping data used by the framework, such as configs and offsets, so users can typically use any functioning Converter implementation. Deprecated; will be removed in an upcoming version.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>listeners</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> list<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> null<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?></simpara>
<simpara>List of comma-separated URIs the REST API will listen on. The supported protocols are HTTP and HTTPS.
 Specify hostname as 0.0.0.0 to bind to all interfaces.
 Leave hostname empty to bind to default interface.
 Examples of legal listener lists: HTTP://myhost:8083,HTTPS://myhost:8084.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>metadata.max.age.ms</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> long<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 300000<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [0,…​]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?></simpara>
<simpara>The period of time in milliseconds after which we force a refresh of metadata even if we haven’t seen any partition leadership changes to proactively discover any new brokers or partitions.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>metric.reporters</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> list<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> ""<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?></simpara>
<simpara>A list of classes to use as metrics reporters. Implementing the <literal>org.apache.kafka.common.metrics.MetricsReporter</literal> interface allows plugging in classes that will be notified of new metric creation. The JmxReporter is always included to register JMX statistics.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>metrics.num.samples</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> int<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 2<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [1,…​]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?></simpara>
<simpara>The number of samples maintained to compute metrics.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>metrics.recording.level</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> string<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> INFO<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [INFO, DEBUG]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?></simpara>
<simpara>The highest recording level for metrics.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>metrics.sample.window.ms</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> long<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 30000<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [0,…​]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?></simpara>
<simpara>The window of time a metrics sample is computed over.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>offset.flush.interval.ms</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> long<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 60000<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?></simpara>
<simpara>Interval at which to try committing offsets for tasks.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>offset.flush.timeout.ms</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> long<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 5000<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?></simpara>
<simpara>Maximum number of milliseconds to wait for records to flush and partition offset data to be committed to offset storage before cancelling the process and restoring the offset data to be committed in a future attempt.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>offset.storage.partitions</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> int<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 25<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [1,…​]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?></simpara>
<simpara>The number of partitions used when creating the offset storage topic.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>offset.storage.replication.factor</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> short<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 3<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [1,…​]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?></simpara>
<simpara>Replication factor used when creating the offset storage topic.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>plugin.path</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> list<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> null<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?></simpara>
<simpara>List of paths separated by commas (,) that contain plugins (connectors, converters, transformations). The list should consist of top level directories that include any combination of:
a) directories immediately containing jars with plugins and their dependencies
b) uber-jars with plugins and their dependencies
c) directories immediately containing the package directory structure of classes of plugins and their dependencies
Note: symlinks will be followed to discover dependencies or plugins.
Examples: plugin.path=/usr/local/share/java,/usr/local/share/kafka/plugins,/opt/connectors.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>reconnect.backoff.max.ms</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> long<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 1000<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [0,…​]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?></simpara>
<simpara>The maximum amount of time in milliseconds to wait when reconnecting to a broker that has repeatedly failed to connect. If provided, the backoff per host will increase exponentially for each consecutive connection failure, up to this maximum. After calculating the backoff increase, 20% random jitter is added to avoid connection storms.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>reconnect.backoff.ms</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> long<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 50<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [0,…​]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?></simpara>
<simpara>The base amount of time to wait before attempting to reconnect to a given host. This avoids repeatedly connecting to a host in a tight loop. This backoff applies to all connection attempts by the client to a broker.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>rest.advertised.host.name</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> string<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> null<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?></simpara>
<simpara>If this is set, this is the hostname that will be given out to other workers to connect to.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>rest.advertised.listener</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> string<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> null<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?></simpara>
<simpara>Sets the advertised listener (HTTP or HTTPS) which will be given to other workers to use.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>rest.advertised.port</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> int<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> null<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?></simpara>
<simpara>If this is set, this is the port that will be given out to other workers to connect to.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>rest.extension.classes</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> list<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> ""<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?></simpara>
<simpara>Comma-separated names of <literal>ConnectRestExtension</literal> classes, loaded and called in the order specified. Implementing the interface  <literal>ConnectRestExtension</literal> allows you to inject into Connect’s REST API user defined resources like filters. Typically used to add custom capability like logging, security, etc.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>rest.host.name</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> string<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> null<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?></simpara>
<simpara>Hostname for the REST API. If this is set, it will only bind to this interface.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>rest.port</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> int<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 8083<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?></simpara>
<simpara>Port for the REST API to listen on.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>retry.backoff.ms</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> long<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 100<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [0,…​]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?></simpara>
<simpara>The amount of time to wait before attempting to retry a failed request to a given topic partition. This avoids repeatedly sending requests in a tight loop under some failure scenarios.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>sasl.kerberos.kinit.cmd</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> string<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> /usr/bin/kinit<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?></simpara>
<simpara>Kerberos kinit command path.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>sasl.kerberos.min.time.before.relogin</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> long<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 60000<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?></simpara>
<simpara>Login thread sleep time between refresh attempts.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>sasl.kerberos.ticket.renew.jitter</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> double<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 0.05<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?></simpara>
<simpara>Percentage of random jitter added to the renewal time.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>sasl.kerberos.ticket.renew.window.factor</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> double<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 0.8<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?></simpara>
<simpara>Login thread will sleep until the specified window factor of time from last refresh to ticket’s expiry has been reached, at which time it will try to renew the ticket.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>sasl.login.refresh.buffer.seconds</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> short<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 300<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [0,…​,3600]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?></simpara>
<simpara>The amount of buffer time before credential expiration to maintain when refreshing a credential, in seconds. If a refresh would otherwise occur closer to expiration than the number of buffer seconds then the refresh will be moved up to maintain as much of the buffer time as possible. Legal values are between 0 and 3600 (1 hour); a default value of  300 (5 minutes) is used if no value is specified. This value and sasl.login.refresh.min.period.seconds are both ignored if their sum exceeds the remaining lifetime of a credential. Currently applies only to OAUTHBEARER.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>sasl.login.refresh.min.period.seconds</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> short<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 60<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [0,…​,900]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?></simpara>
<simpara>The desired minimum time for the login refresh thread to wait before refreshing a credential, in seconds. Legal values are between 0 and 900 (15 minutes); a default value of 60 (1 minute) is used if no value is specified.  This value and  sasl.login.refresh.buffer.seconds are both ignored if their sum exceeds the remaining lifetime of a credential. Currently applies only to OAUTHBEARER.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>sasl.login.refresh.window.factor</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> double<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 0.8<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [0.5,…​,1.0]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?></simpara>
<simpara>Login refresh thread will sleep until the specified window factor relative to the credential’s lifetime has been reached, at which time it will try to refresh the credential. Legal values are between 0.5 (50%) and 1.0 (100%) inclusive; a default value of 0.8 (80%) is used if no value is specified. Currently applies only to OAUTHBEARER.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>sasl.login.refresh.window.jitter</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> double<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 0.05<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [0.0,…​,0.25]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?></simpara>
<simpara>The maximum amount of random jitter relative to the credential’s lifetime that is added to the login refresh thread’s sleep time. Legal values are between 0 and 0.25 (25%) inclusive; a default value of 0.05 (5%) is used if no value is specified. Currently applies only to OAUTHBEARER.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>scheduled.rebalance.max.delay.ms</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> int<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 300000<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [0,…​,2147483647]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?></simpara>
<simpara>Compatibility mode for Kafka Connect Protocol.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>ssl.cipher.suites</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> list<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> null<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?></simpara>
<simpara>A list of cipher suites. This is a named combination of authentication, encryption, MAC and key exchange algorithm used to negotiate the security settings for a network connection using TLS or SSL network protocol. By default all the available cipher suites are supported.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>ssl.client.auth</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> string<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> none<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?></simpara>
<simpara>Configures kafka broker to request client authentication. The following settings are common:</simpara>
<itemizedlist>
<listitem>
<simpara><literal>ssl.client.auth=required</literal> If set to required client authentication is required.</simpara>
</listitem>
<listitem>
<simpara><literal>ssl.client.auth=requested</literal> This means client authentication is optional. unlike requested , if this option is set client can choose not to provide authentication information about itself</simpara>
</listitem>
<listitem>
<simpara><literal>ssl.client.auth=none</literal> This means client authentication is not needed.</simpara>
</listitem>
</itemizedlist>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>ssl.endpoint.identification.algorithm</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> string<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> https<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?></simpara>
<simpara>The endpoint identification algorithm to validate server hostname using server certificate.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>ssl.keymanager.algorithm</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> string<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> SunX509<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?></simpara>
<simpara>The algorithm used by key manager factory for SSL connections. Default value is the key manager factory algorithm configured for the Java Virtual Machine.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>ssl.secure.random.implementation</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> string<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> null<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?></simpara>
<simpara>The SecureRandom PRNG implementation to use for SSL cryptography operations.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>ssl.trustmanager.algorithm</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> string<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> PKIX<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?></simpara>
<simpara>The algorithm used by trust manager factory for SSL connections. Default value is the trust manager factory algorithm configured for the Java Virtual Machine.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>status.storage.partitions</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> int<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 5<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [1,…​]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?></simpara>
<simpara>The number of partitions used when creating the status storage topic.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>status.storage.replication.factor</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> short<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 3<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [1,…​]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?></simpara>
<simpara>Replication factor used when creating the status storage topic.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>task.shutdown.graceful.timeout.ms</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> long<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 5000<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?></simpara>
<simpara>Amount of time to wait for tasks to shutdown gracefully. This is the total amount of time, not per task. All task have shutdown triggered, then they are waited on sequentially.</simpara>
</listitem>
</varlistentry>
</variablelist>
</appendix>
<appendix xml:id="kafka-streams-configuration-parameters-str">
<title>Kafka Streams configuration parameters</title>
<variablelist>
<varlistentry>
<term><literal>application.id</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> string<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> high<?asciidoc-br?></simpara>
<simpara>An identifier for the stream processing application. Must be unique within the Kafka cluster. It is used as 1) the default client-id prefix, 2) the group-id for membership management, 3) the changelog topic prefix.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>bootstrap.servers</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> list<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> high<?asciidoc-br?></simpara>
<simpara>A list of host/port pairs to use for establishing the initial connection to the Kafka cluster. The client will make use of all servers irrespective of which servers are specified here for bootstrapping—this list only impacts the initial hosts used to discover the full set of servers. This list should be in the form <literal>host1:port1,host2:port2,…​</literal>. Since these servers are just used for the initial connection to discover the full cluster membership (which may change dynamically), this list need not contain the full set of servers (you may want more than one, though, in case a server is down).</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>replication.factor</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> int<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 1<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> high<?asciidoc-br?></simpara>
<simpara>The replication factor for change log topics and repartition topics created by the stream processing application.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>state.dir</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> string<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> /tmp/kafka-streams<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> high<?asciidoc-br?></simpara>
<simpara>Directory location for state store.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>cache.max.bytes.buffering</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> long<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 10485760<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [0,…​]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?></simpara>
<simpara>Maximum number of memory bytes to be used for buffering across all threads.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>client.id</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> string<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> ""<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?></simpara>
<simpara>An ID prefix string used for the client IDs of internal consumer, producer and restore-consumer, with pattern '&lt;client.id&gt;-StreamThread-&lt;threadSequenceNumber&gt;-&lt;consumer|producer|restore-consumer&gt;'.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>default.deserialization.exception.handler</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> class<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> org.apache.kafka.streams.errors.LogAndFailExceptionHandler<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?></simpara>
<simpara>Exception handling class that implements the <literal>org.apache.kafka.streams.errors.DeserializationExceptionHandler</literal> interface.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>default.key.serde</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> class<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> org.apache.kafka.common.serialization.Serdes$ByteArraySerde<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?></simpara>
<simpara>Default serializer / deserializer class for key that implements the <literal>org.apache.kafka.common.serialization.Serde</literal> interface. Note when windowed serde class is used, one needs to set the inner serde class that implements the <literal>org.apache.kafka.common.serialization.Serde</literal> interface via 'default.windowed.key.serde.inner' or 'default.windowed.value.serde.inner' as well.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>default.production.exception.handler</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> class<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> org.apache.kafka.streams.errors.DefaultProductionExceptionHandler<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?></simpara>
<simpara>Exception handling class that implements the <literal>org.apache.kafka.streams.errors.ProductionExceptionHandler</literal> interface.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>default.timestamp.extractor</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> class<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> org.apache.kafka.streams.processor.FailOnInvalidTimestamp<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?></simpara>
<simpara>Default timestamp extractor class that implements the <literal>org.apache.kafka.streams.processor.TimestampExtractor</literal> interface.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>default.value.serde</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> class<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> org.apache.kafka.common.serialization.Serdes$ByteArraySerde<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?></simpara>
<simpara>Default serializer / deserializer class for value that implements the <literal>org.apache.kafka.common.serialization.Serde</literal> interface. Note when windowed serde class is used, one needs to set the inner serde class that implements the <literal>org.apache.kafka.common.serialization.Serde</literal> interface via 'default.windowed.key.serde.inner' or 'default.windowed.value.serde.inner' as well.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>max.task.idle.ms</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> long<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 0<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?></simpara>
<simpara>Maximum amount of time a stream task will stay idle when not all of its partition buffers contain records, to avoid potential out-of-order record processing across multiple input streams.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>num.standby.replicas</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> int<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 0<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?></simpara>
<simpara>The number of standby replicas for each task.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>num.stream.threads</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> int<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 1<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?></simpara>
<simpara>The number of threads to execute stream processing.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>processing.guarantee</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> string<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> at_least_once<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [at_least_once, exactly_once]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?></simpara>
<simpara>The processing guarantee that should be used. Possible values are <literal>at_least_once</literal> (default) and <literal>exactly_once</literal>. Note that exactly-once processing requires a cluster of at least three brokers by default what is the recommended setting for production; for development you can change this, by adjusting broker setting <literal>transaction.state.log.replication.factor</literal> and <literal>transaction.state.log.min.isr</literal>.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>security.protocol</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> string<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> PLAINTEXT<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?></simpara>
<simpara>Protocol used to communicate with brokers. Valid values are: PLAINTEXT, SSL, SASL_PLAINTEXT, SASL_SSL.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>topology.optimization</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> string<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> none<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [none, all]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> medium<?asciidoc-br?></simpara>
<simpara>A configuration telling Kafka Streams if it should optimize the topology, disabled by default.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>application.server</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> string<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> ""<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?></simpara>
<simpara>A host:port pair pointing to an embedded user defined endpoint that can be used for discovering the locations of state stores within a single KafkaStreams application.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>buffered.records.per.partition</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> int<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 1000<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?></simpara>
<simpara>Maximum number of records to buffer per partition.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>commit.interval.ms</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> long<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 30000<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [0,…​]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?></simpara>
<simpara>The frequency with which to save the position of the processor. (Note, if <literal>processing.guarantee</literal> is set to <literal>exactly_once</literal>, the default value is <literal>100</literal>, otherwise the default value is <literal>30000</literal>.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>connections.max.idle.ms</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> long<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 540000<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?></simpara>
<simpara>Close idle connections after the number of milliseconds specified by this config.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>metadata.max.age.ms</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> long<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 300000<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [0,…​]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?></simpara>
<simpara>The period of time in milliseconds after which we force a refresh of metadata even if we haven’t seen any partition leadership changes to proactively discover any new brokers or partitions.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>metric.reporters</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> list<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> ""<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?></simpara>
<simpara>A list of classes to use as metrics reporters. Implementing the <literal>org.apache.kafka.common.metrics.MetricsReporter</literal> interface allows plugging in classes that will be notified of new metric creation. The JmxReporter is always included to register JMX statistics.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>metrics.num.samples</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> int<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 2<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [1,…​]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?></simpara>
<simpara>The number of samples maintained to compute metrics.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>metrics.recording.level</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> string<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> INFO<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [INFO, DEBUG]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?></simpara>
<simpara>The highest recording level for metrics.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>metrics.sample.window.ms</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> long<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 30000<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [0,…​]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?></simpara>
<simpara>The window of time a metrics sample is computed over.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>partition.grouper</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> class<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> org.apache.kafka.streams.processor.DefaultPartitionGrouper<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?></simpara>
<simpara>Partition grouper class that implements the <literal>org.apache.kafka.streams.processor.PartitionGrouper</literal> interface.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>poll.ms</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> long<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 100<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?></simpara>
<simpara>The amount of time in milliseconds to block waiting for input.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>receive.buffer.bytes</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> int<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 32768<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [-1,…​]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?></simpara>
<simpara>The size of the TCP receive buffer (SO_RCVBUF) to use when reading data. If the value is -1, the OS default will be used.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>reconnect.backoff.max.ms</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> long<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 1000<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [0,…​]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?></simpara>
<simpara>The maximum amount of time in milliseconds to wait when reconnecting to a broker that has repeatedly failed to connect. If provided, the backoff per host will increase exponentially for each consecutive connection failure, up to this maximum. After calculating the backoff increase, 20% random jitter is added to avoid connection storms.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>reconnect.backoff.ms</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> long<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 50<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [0,…​]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?></simpara>
<simpara>The base amount of time to wait before attempting to reconnect to a given host. This avoids repeatedly connecting to a host in a tight loop. This backoff applies to all connection attempts by the client to a broker.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>request.timeout.ms</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> int<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 40000<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [0,…​]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?></simpara>
<simpara>The configuration controls the maximum amount of time the client will wait for the response of a request. If the response is not received before the timeout elapses the client will resend the request if necessary or fail the request if retries are exhausted.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>retries</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> int<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 0<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [0,…​,2147483647]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?></simpara>
<simpara>Setting a value greater than zero will cause the client to resend any request that fails with a potentially transient error.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>retry.backoff.ms</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> long<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 100<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [0,…​]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?></simpara>
<simpara>The amount of time to wait before attempting to retry a failed request to a given topic partition. This avoids repeatedly sending requests in a tight loop under some failure scenarios.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>rocksdb.config.setter</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> class<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> null<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?></simpara>
<simpara>A Rocks DB config setter class or class name that implements the <literal>org.apache.kafka.streams.state.RocksDBConfigSetter</literal> interface.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>send.buffer.bytes</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> int<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 131072<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [-1,…​]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?></simpara>
<simpara>The size of the TCP send buffer (SO_SNDBUF) to use when sending data. If the value is -1, the OS default will be used.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>state.cleanup.delay.ms</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> long<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 600000<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?></simpara>
<simpara>The amount of time in milliseconds to wait before deleting state when a partition has migrated. Only state directories that have not been modified for at least <literal>state.cleanup.delay.ms</literal> will be removed.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>upgrade.from</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> string<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> null<?asciidoc-br?>
<emphasis role="strong">Valid Values:</emphasis> [null, 0.10.0, 0.10.1, 0.10.2, 0.11.0, 1.0, 1.1]<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?></simpara>
<simpara>Allows upgrading from versions 0.10.0/0.10.1/0.10.2/0.11.0/1.0/1.1 to version 1.2 (or newer) in a backward compatible way. When upgrading from 1.2 to a newer version it is not required to specify this config.Default is null. Accepted values are "0.10.0", "0.10.1", "0.10.2", "0.11.0", "1.0", "1.1" (for upgrading from the corresponding old version).</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>windowstore.changelog.additional.retention.ms</literal></term>
<listitem>
<simpara><emphasis role="strong">Type:</emphasis> long<?asciidoc-br?>
<emphasis role="strong">Default:</emphasis> 86400000<?asciidoc-br?>
<emphasis role="strong">Importance:</emphasis> low<?asciidoc-br?></simpara>
<simpara>Added to a windows maintainMs to ensure data is not deleted from the log prematurely. Allows for clock drift. Default is 1 day.</simpara>
</listitem>
</varlistentry>
</variablelist>
</appendix>
</book>